{
  "openapi": "3.0.4",
  "info": {
    "title": "CalorieManagement.API",
    "version": "1.0"
  },
  "paths": {
    "/api/Achievement": {
      "get": {
        "tags": [
          "Achievement"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Achievement"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAchievementDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAchievementDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAchievementDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Achievement/user": {
      "get": {
        "tags": [
          "Achievement"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Achievement/check": {
      "post": {
        "tags": [
          "Achievement"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Achievement/{id}": {
      "get": {
        "tags": [
          "Achievement"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Admin/users": {
      "get": {
        "tags": [
          "Admin"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Admin/users/{userId}": {
      "get": {
        "tags": [
          "Admin"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Admin/users/{userId}/roles": {
      "post": {
        "tags": [
          "Admin"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignRoleDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignRoleDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AssignRoleDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Admin/users/{userId}/roles/{roleName}": {
      "delete": {
        "tags": [
          "Admin"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "roleName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Admin/dashboard": {
      "get": {
        "tags": [
          "Admin"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Admin/system-health": {
      "get": {
        "tags": [
          "Admin"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Admin/exercises": {
      "get": {
        "tags": [
          "Admin"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Admin"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateExerciseDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateExerciseDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateExerciseDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Admin/exercises/{id}": {
      "get": {
        "tags": [
          "Admin"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Admin"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateExerciseDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateExerciseDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateExerciseDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Admin"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Admin/exercises/{id}/image": {
      "post": {
        "tags": [
          "Admin"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "image": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "image": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Admin/foods": {
      "get": {
        "tags": [
          "Admin"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Admin"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFoodDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFoodDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFoodDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Admin/foods/{id}": {
      "get": {
        "tags": [
          "Admin"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Admin"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFoodDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFoodDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFoodDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Admin"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Admin/achievements": {
      "get": {
        "tags": [
          "Admin"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Admin"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAchievementDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAchievementDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAchievementDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Admin/achievements/{id}": {
      "get": {
        "tags": [
          "Admin"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Admin"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAchievementDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAchievementDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAchievementDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Admin"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/DietLog": {
      "get": {
        "tags": [
          "DietLog"
        ],
        "parameters": [
          {
            "name": "date",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "DietLog"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDietLogDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDietLogDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDietLogDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/DietLog/{id}": {
      "get": {
        "tags": [
          "DietLog"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "DietLog"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDietLogDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDietLogDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDietLogDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "DietLog"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/DietLog/daily-summary": {
      "get": {
        "tags": [
          "DietLog"
        ],
        "parameters": [
          {
            "name": "date",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Exercise": {
      "get": {
        "tags": [
          "Exercise"
        ],
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ExerciseTypeNullable"
            }
          },
          {
            "name": "location",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ExerciseLocationNullable"
            }
          },
          {
            "name": "difficulty",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/DifficultyLevelNullable"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Exercise"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateExerciseDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateExerciseDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateExerciseDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Exercise/{id}": {
      "get": {
        "tags": [
          "Exercise"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Exercise/logs": {
      "get": {
        "tags": [
          "Exercise"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Exercise"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserExerciseLogDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserExerciseLogDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserExerciseLogDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Food": {
      "get": {
        "tags": [
          "Food"
        ],
        "parameters": [
          {
            "name": "category",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Food"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFoodDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFoodDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFoodDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Food/{id}": {
      "get": {
        "tags": [
          "Food"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Food"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFoodDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFoodDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFoodDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Food"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Food/categories": {
      "get": {
        "tags": [
          "Food"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Streak/current": {
      "get": {
        "tags": [
          "Streak"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Streak/update": {
      "post": {
        "tags": [
          "Streak"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Streak/calendar": {
      "get": {
        "tags": [
          "Streak"
        ],
        "parameters": [
          {
            "name": "year",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "month",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Streak/stats": {
      "get": {
        "tags": [
          "Streak"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/UserProfile": {
      "get": {
        "tags": [
          "UserProfile"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "UserProfile"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserProfileDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserProfileDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserProfileDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "UserProfile"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserProfileDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserProfileDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserProfileDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Weight": {
      "get": {
        "tags": [
          "Weight"
        ],
        "parameters": [
          {
            "name": "days",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 30
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Weight"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateWeightRecordDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateWeightRecordDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateWeightRecordDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Weight/{id}": {
      "get": {
        "tags": [
          "Weight"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Weight"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateWeightRecordDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateWeightRecordDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateWeightRecordDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Weight"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Weight/progress": {
      "get": {
        "tags": [
          "Weight"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Weight/latest": {
      "get": {
        "tags": [
          "Weight"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/WeightTracking": {
      "get": {
        "tags": [
          "WeightTracking"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "WeightTracking"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateWeightRecordDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateWeightRecordDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateWeightRecordDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/WeightTracking/{id}": {
      "get": {
        "tags": [
          "WeightTracking"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "WeightTracking"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateWeightRecordDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateWeightRecordDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateWeightRecordDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "WeightTracking"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/WeightTracking/progress": {
      "get": {
        "tags": [
          "WeightTracking"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/WeightTracking/statistics": {
      "get": {
        "tags": [
          "WeightTracking"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AchievementType": {
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8
        ],
        "type": "integer",
        "format": "int32"
      },
      "ActivityLevel": {
        "enum": [
          1,
          2,
          3,
          4,
          5
        ],
        "type": "integer",
        "format": "int32"
      },
      "ActivityLevelNullable": {
        "enum": [
          1,
          2,
          3,
          4,
          5,
          null
        ],
        "type": "integer",
        "format": "int32",
        "nullable": true
      },
      "AssignRoleDto": {
        "type": "object",
        "properties": {
          "roleName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateAchievementDto": {
        "required": [
          "description",
          "name",
          "points",
          "requiredValue",
          "type"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "description": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/AchievementType"
          },
          "iconUrl": {
            "type": "string",
            "nullable": true
          },
          "requiredValue": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "points": {
            "maximum": 1000,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CreateDietLogDto": {
        "required": [
          "foodId",
          "mealType",
          "quantity",
          "unit"
        ],
        "type": "object",
        "properties": {
          "foodId": {
            "type": "integer",
            "format": "int32"
          },
          "quantity": {
            "maximum": 10000,
            "minimum": 0.1,
            "type": "number",
            "format": "double"
          },
          "unit": {
            "minLength": 1,
            "type": "string"
          },
          "loggedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "mealType": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "CreateExerciseDto": {
        "required": [
          "difficulty",
          "location",
          "name",
          "type"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string"
          },
          "description": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "instructions": {
            "maxLength": 2000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/ExerciseType"
          },
          "location": {
            "$ref": "#/components/schemas/ExerciseLocation"
          },
          "difficulty": {
            "$ref": "#/components/schemas/DifficultyLevel"
          },
          "durationMinutes": {
            "maximum": 300,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "caloriesBurnedPerMinute": {
            "maximum": 50,
            "minimum": 0.1,
            "type": "number",
            "format": "double"
          },
          "imageUrl": {
            "type": "string",
            "nullable": true
          },
          "videoUrl": {
            "type": "string",
            "nullable": true
          },
          "muscleGroups": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "equipment": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateFoodDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "caloriesPer100g": {
            "type": "number",
            "format": "double"
          },
          "proteinPer100g": {
            "type": "number",
            "format": "double"
          },
          "carbsPer100g": {
            "type": "number",
            "format": "double"
          },
          "fatPer100g": {
            "type": "number",
            "format": "double"
          },
          "fiberPer100g": {
            "type": "number",
            "format": "double"
          },
          "category": {
            "type": "string",
            "nullable": true
          },
          "imageUrl": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateUserExerciseLogDto": {
        "required": [
          "durationMinutes",
          "exerciseDate",
          "exerciseId"
        ],
        "type": "object",
        "properties": {
          "exerciseId": {
            "type": "integer",
            "format": "int32"
          },
          "durationMinutes": {
            "maximum": 600,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "caloriesBurned": {
            "maximum": 10000,
            "minimum": 1,
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "sets": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "reps": {
            "maximum": 1000,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "weight": {
            "maximum": 1000,
            "minimum": 0.5,
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "notes": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "exerciseDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "CreateUserProfileDto": {
        "required": [
          "activityLevel",
          "age",
          "fitnessGoal",
          "gender",
          "height",
          "weight"
        ],
        "type": "object",
        "properties": {
          "weight": {
            "maximum": 300,
            "minimum": 30,
            "type": "number",
            "format": "double"
          },
          "height": {
            "maximum": 2.5,
            "minimum": 1,
            "type": "number",
            "format": "double"
          },
          "age": {
            "maximum": 120,
            "minimum": 13,
            "type": "integer",
            "format": "int32"
          },
          "gender": {
            "$ref": "#/components/schemas/Gender"
          },
          "activityLevel": {
            "$ref": "#/components/schemas/ActivityLevel"
          },
          "fitnessGoal": {
            "$ref": "#/components/schemas/FitnessGoal"
          },
          "targetWeight": {
            "maximum": 300,
            "minimum": 30,
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "CreateWeightRecordDto": {
        "required": [
          "recordedDate",
          "weight"
        ],
        "type": "object",
        "properties": {
          "weight": {
            "maximum": 300,
            "minimum": 30,
            "type": "number",
            "format": "double"
          },
          "recordedDate": {
            "type": "string",
            "format": "date-time"
          },
          "notes": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DifficultyLevel": {
        "enum": [
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "DifficultyLevelNullable": {
        "enum": [
          1,
          2,
          3,
          null
        ],
        "type": "integer",
        "format": "int32",
        "nullable": true
      },
      "ExerciseLocation": {
        "enum": [
          1,
          2,
          3,
          4,
          5
        ],
        "type": "integer",
        "format": "int32"
      },
      "ExerciseLocationNullable": {
        "enum": [
          1,
          2,
          3,
          4,
          5,
          null
        ],
        "type": "integer",
        "format": "int32",
        "nullable": true
      },
      "ExerciseType": {
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6
        ],
        "type": "integer",
        "format": "int32"
      },
      "ExerciseTypeNullable": {
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          null
        ],
        "type": "integer",
        "format": "int32",
        "nullable": true
      },
      "FitnessGoal": {
        "enum": [
          1,
          2,
          3,
          4
        ],
        "type": "integer",
        "format": "int32"
      },
      "FitnessGoalNullable": {
        "enum": [
          1,
          2,
          3,
          4,
          null
        ],
        "type": "integer",
        "format": "int32",
        "nullable": true
      },
      "Gender": {
        "enum": [
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "GenderNullable": {
        "enum": [
          1,
          2,
          3,
          null
        ],
        "type": "integer",
        "format": "int32",
        "nullable": true
      },
      "LoginDto": {
        "required": [
          "email",
          "password"
        ],
        "type": "object",
        "properties": {
          "email": {
            "minLength": 1,
            "type": "string",
            "format": "email"
          },
          "password": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "RegisterDto": {
        "required": [
          "confirmPassword",
          "email",
          "firstName",
          "lastName",
          "password"
        ],
        "type": "object",
        "properties": {
          "email": {
            "minLength": 1,
            "type": "string",
            "format": "email"
          },
          "password": {
            "maxLength": 100,
            "minLength": 6,
            "type": "string"
          },
          "confirmPassword": {
            "minLength": 1,
            "type": "string"
          },
          "firstName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "lastName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "UpdateDietLogDto": {
        "required": [
          "mealType",
          "quantity",
          "unit"
        ],
        "type": "object",
        "properties": {
          "quantity": {
            "maximum": 10000,
            "minimum": 0.1,
            "type": "number",
            "format": "double"
          },
          "unit": {
            "minLength": 1,
            "type": "string"
          },
          "mealType": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "UpdateExerciseDto": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "description": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "instructions": {
            "maxLength": 2000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/ExerciseTypeNullable"
          },
          "location": {
            "$ref": "#/components/schemas/ExerciseLocationNullable"
          },
          "difficulty": {
            "$ref": "#/components/schemas/DifficultyLevelNullable"
          },
          "durationMinutes": {
            "maximum": 300,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "caloriesBurnedPerMinute": {
            "maximum": 50,
            "minimum": 0.1,
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "imageUrl": {
            "type": "string",
            "nullable": true
          },
          "videoUrl": {
            "type": "string",
            "nullable": true
          },
          "muscleGroups": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "equipment": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateFoodDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "caloriesPer100g": {
            "type": "number",
            "format": "double"
          },
          "proteinPer100g": {
            "type": "number",
            "format": "double"
          },
          "carbsPer100g": {
            "type": "number",
            "format": "double"
          },
          "fatPer100g": {
            "type": "number",
            "format": "double"
          },
          "fiberPer100g": {
            "type": "number",
            "format": "double"
          },
          "category": {
            "type": "string",
            "nullable": true
          },
          "imageUrl": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateUserProfileDto": {
        "type": "object",
        "properties": {
          "weight": {
            "maximum": 300,
            "minimum": 30,
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "height": {
            "maximum": 2.5,
            "minimum": 1,
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "age": {
            "maximum": 120,
            "minimum": 13,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "gender": {
            "$ref": "#/components/schemas/GenderNullable"
          },
          "activityLevel": {
            "$ref": "#/components/schemas/ActivityLevelNullable"
          },
          "fitnessGoal": {
            "$ref": "#/components/schemas/FitnessGoalNullable"
          },
          "targetWeight": {
            "maximum": 300,
            "minimum": 30,
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateWeightRecordDto": {
        "type": "object",
        "properties": {
          "weight": {
            "maximum": 300,
            "minimum": 30,
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "recordedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "notes": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    }
  }
}