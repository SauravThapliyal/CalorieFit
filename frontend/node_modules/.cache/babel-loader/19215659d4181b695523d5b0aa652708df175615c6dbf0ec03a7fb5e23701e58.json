{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'http://localhost:5263/api';\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add token to requests if available\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Handle token expiration\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\nexport const authApi = {\n  login: async data => {\n    const response = await api.post('/auth/login', data);\n    return response.data;\n  },\n  register: async data => {\n    const response = await api.post('/auth/register', data);\n    return response.data;\n  }\n};\nexport const userProfileApi = {\n  getProfile: async () => {\n    const response = await api.get('/userprofile');\n    return response.data;\n  },\n  createProfile: async data => {\n    const response = await api.post('/userprofile', data);\n    return response.data;\n  },\n  updateProfile: async data => {\n    const response = await api.put('/userprofile', data);\n    return response.data;\n  }\n};\nexport const exerciseApi = {\n  getAll: async () => {\n    const response = await api.get('/exercise');\n    return response.data;\n  },\n  getById: async id => {\n    const response = await api.get(`/exercise/${id}`);\n    return response.data;\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","response","error","_error$response","status","removeItem","window","location","href","Promise","reject","authApi","login","data","post","register","userProfileApi","getProfile","get","createProfile","updateProfile","put","exerciseApi","getAll","getById","id"],"sources":["C:/Users/GL-Saurav/Desktop/new/new/frontend/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\nimport {\n  AuthResponse,\n  LoginRequest,\n  RegisterRequest,\n  UserProfile,\n  CreateUserProfileRequest,\n} from '../types';\n\nconst API_BASE_URL = 'http://localhost:5263/api';\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Add token to requests if available\napi.interceptors.request.use((config) => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Handle token expiration\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response?.status === 401) {\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\nexport const authApi = {\n  login: async (data: LoginRequest): Promise<AuthResponse> => {\n    const response = await api.post('/auth/login', data);\n    return response.data;\n  },\n\n  register: async (data: RegisterRequest): Promise<AuthResponse> => {\n    const response = await api.post('/auth/register', data);\n    return response.data;\n  },\n};\n\nexport const userProfileApi = {\n  getProfile: async (): Promise<UserProfile> => {\n    const response = await api.get('/userprofile');\n    return response.data;\n  },\n\n  createProfile: async (data: CreateUserProfileRequest): Promise<UserProfile> => {\n    const response = await api.post('/userprofile', data);\n    return response.data;\n  },\n\n  updateProfile: async (data: CreateUserProfileRequest): Promise<UserProfile> => {\n    const response = await api.put('/userprofile', data);\n    return response.data;\n  },\n};\n\nexport const exerciseApi = {\n  getAll: async (): Promise<Exercise[]> => {\n    const response = await api.get('/exercise');\n    return response.data;\n  },\n\n  getById: async (id: number): Promise<Exercise> => {\n    const response = await api.get(`/exercise/${id}`);\n    return response.data;\n  },\n};\n\nexport default api;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AASzB,MAAMC,YAAY,GAAG,2BAA2B;AAEhD,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACvBC,OAAO,EAAEH,YAAY;EACrBI,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACvC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,CAAC;;AAEF;AACAP,GAAG,CAACI,YAAY,CAACQ,QAAQ,CAACN,GAAG,CAC1BM,QAAQ,IAAKA,QAAQ,EACrBC,KAAK,IAAK;EAAA,IAAAC,eAAA;EACT,IAAI,EAAAA,eAAA,GAAAD,KAAK,CAACD,QAAQ,cAAAE,eAAA,uBAAdA,eAAA,CAAgBC,MAAM,MAAK,GAAG,EAAE;IAClCN,YAAY,CAACO,UAAU,CAAC,OAAO,CAAC;IAChCP,YAAY,CAACO,UAAU,CAAC,MAAM,CAAC;IAC/BC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;EACjC;EACA,OAAOC,OAAO,CAACC,MAAM,CAACR,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,OAAO,MAAMS,OAAO,GAAG;EACrBC,KAAK,EAAE,MAAOC,IAAkB,IAA4B;IAC1D,MAAMZ,QAAQ,GAAG,MAAMZ,GAAG,CAACyB,IAAI,CAAC,aAAa,EAAED,IAAI,CAAC;IACpD,OAAOZ,QAAQ,CAACY,IAAI;EACtB,CAAC;EAEDE,QAAQ,EAAE,MAAOF,IAAqB,IAA4B;IAChE,MAAMZ,QAAQ,GAAG,MAAMZ,GAAG,CAACyB,IAAI,CAAC,gBAAgB,EAAED,IAAI,CAAC;IACvD,OAAOZ,QAAQ,CAACY,IAAI;EACtB;AACF,CAAC;AAED,OAAO,MAAMG,cAAc,GAAG;EAC5BC,UAAU,EAAE,MAAAA,CAAA,KAAkC;IAC5C,MAAMhB,QAAQ,GAAG,MAAMZ,GAAG,CAAC6B,GAAG,CAAC,cAAc,CAAC;IAC9C,OAAOjB,QAAQ,CAACY,IAAI;EACtB,CAAC;EAEDM,aAAa,EAAE,MAAON,IAA8B,IAA2B;IAC7E,MAAMZ,QAAQ,GAAG,MAAMZ,GAAG,CAACyB,IAAI,CAAC,cAAc,EAAED,IAAI,CAAC;IACrD,OAAOZ,QAAQ,CAACY,IAAI;EACtB,CAAC;EAEDO,aAAa,EAAE,MAAOP,IAA8B,IAA2B;IAC7E,MAAMZ,QAAQ,GAAG,MAAMZ,GAAG,CAACgC,GAAG,CAAC,cAAc,EAAER,IAAI,CAAC;IACpD,OAAOZ,QAAQ,CAACY,IAAI;EACtB;AACF,CAAC;AAED,OAAO,MAAMS,WAAW,GAAG;EACzBC,MAAM,EAAE,MAAAA,CAAA,KAAiC;IACvC,MAAMtB,QAAQ,GAAG,MAAMZ,GAAG,CAAC6B,GAAG,CAAC,WAAW,CAAC;IAC3C,OAAOjB,QAAQ,CAACY,IAAI;EACtB,CAAC;EAEDW,OAAO,EAAE,MAAOC,EAAU,IAAwB;IAChD,MAAMxB,QAAQ,GAAG,MAAMZ,GAAG,CAAC6B,GAAG,CAAC,aAAaO,EAAE,EAAE,CAAC;IACjD,OAAOxB,QAAQ,CAACY,IAAI;EACtB;AACF,CAAC;AAED,eAAexB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}