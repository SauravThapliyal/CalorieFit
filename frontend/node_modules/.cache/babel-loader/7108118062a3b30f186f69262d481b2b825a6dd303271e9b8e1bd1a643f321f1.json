{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GL-Saurav\\\\Desktop\\\\new\\\\new\\\\frontend\\\\src\\\\components\\\\admin\\\\FoodManagement.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Typography, Button, Dialog, DialogTitle, DialogContent, DialogActions, TextField, Grid, IconButton, Alert, CircularProgress, Chip, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper } from '@mui/material';\nimport { Add, Edit, Delete, Restaurant } from '@mui/icons-material';\nimport { foodApi } from '../../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FoodManagement = () => {\n  _s();\n  const [foods, setFoods] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [dialogOpen, setDialogOpen] = useState(false);\n  const [editingFood, setEditingFood] = useState(null);\n  const [foodData, setFoodData] = useState({\n    name: '',\n    description: '',\n    category: '',\n    caloriesPer100g: '',\n    proteinPer100g: '',\n    carbsPer100g: '',\n    fatPer100g: '',\n    fiberPer100g: ''\n  });\n  useEffect(() => {\n    fetchFoods();\n  }, []);\n  const fetchFoods = async () => {\n    setLoading(true);\n    try {\n      const response = await foodApi.getAllAdmin();\n      // Handle paginated response\n      if (response && typeof response === 'object' && Array.isArray(response.foods)) {\n        setFoods(response.foods);\n      } else if (Array.isArray(response)) {\n        setFoods(response);\n      } else {\n        setFoods([]);\n      }\n    } catch (err) {\n      console.error('Error fetching foods:', err);\n      setError('Failed to load foods');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleOpenDialog = food => {\n    if (food) {\n      var _food$caloriesPer100g, _food$proteinPer100g, _food$carbsPer100g, _food$fatPer100g, _food$fiberPer100g;\n      setEditingFood(food);\n      setFoodData({\n        name: food.name || '',\n        description: food.description || '',\n        category: food.category || '',\n        caloriesPer100g: ((_food$caloriesPer100g = food.caloriesPer100g) === null || _food$caloriesPer100g === void 0 ? void 0 : _food$caloriesPer100g.toString()) || '',\n        proteinPer100g: ((_food$proteinPer100g = food.proteinPer100g) === null || _food$proteinPer100g === void 0 ? void 0 : _food$proteinPer100g.toString()) || '',\n        carbsPer100g: ((_food$carbsPer100g = food.carbsPer100g) === null || _food$carbsPer100g === void 0 ? void 0 : _food$carbsPer100g.toString()) || '',\n        fatPer100g: ((_food$fatPer100g = food.fatPer100g) === null || _food$fatPer100g === void 0 ? void 0 : _food$fatPer100g.toString()) || '',\n        fiberPer100g: ((_food$fiberPer100g = food.fiberPer100g) === null || _food$fiberPer100g === void 0 ? void 0 : _food$fiberPer100g.toString()) || ''\n      });\n    } else {\n      setEditingFood(null);\n      setFoodData({\n        name: '',\n        description: '',\n        category: '',\n        caloriesPer100g: '',\n        proteinPer100g: '',\n        carbsPer100g: '',\n        fatPer100g: '',\n        fiberPer100g: ''\n      });\n    }\n    setDialogOpen(true);\n  };\n  const handleCloseDialog = () => {\n    setDialogOpen(false);\n    setEditingFood(null);\n  };\n  const handleSaveFood = async () => {\n    try {\n      const foodPayload = {\n        name: foodData.name,\n        description: foodData.description,\n        category: foodData.category,\n        caloriesPer100g: parseFloat(foodData.caloriesPer100g) || 0,\n        proteinPer100g: parseFloat(foodData.proteinPer100g) || 0,\n        carbsPer100g: parseFloat(foodData.carbsPer100g) || 0,\n        fatPer100g: parseFloat(foodData.fatPer100g) || 0,\n        fiberPer100g: parseFloat(foodData.fiberPer100g) || 0\n      };\n      if (editingFood) {\n        await foodApi.update(editingFood.id, foodPayload);\n      } else {\n        await foodApi.create(foodPayload);\n      }\n      handleCloseDialog();\n      fetchFoods();\n      setError('');\n    } catch (err) {\n      console.error('Error saving food:', err);\n      setError('Failed to save food');\n    }\n  };\n  const handleDeleteFood = async id => {\n    if (window.confirm('Are you sure you want to delete this food?')) {\n      try {\n        await foodApi.delete(id);\n        fetchFoods();\n        setError('');\n      } catch (err) {\n        console.error('Error deleting food:', err);\n        setError('Failed to delete food');\n      }\n    }\n  };\n  const formatNumber = (num, decimals = 2) => {\n    if (num === undefined || num === null || isNaN(num)) return '0';\n    return Number(num).toFixed(decimals);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minHeight: \"400px\",\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        children: \"Food Management\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        startIcon: /*#__PURE__*/_jsxDEV(Add, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 22\n        }, this),\n        onClick: () => handleOpenDialog(),\n        children: \"Add Food\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      sx: {\n        mb: 3\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Calories/100g\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Protein/100g\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Carbs/100g\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Fat/100g\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: foods.map(food => {\n            var _food$description;\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"subtitle2\",\n                  children: food.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"caption\",\n                  color: \"text.secondary\",\n                  children: [(_food$description = food.description) === null || _food$description === void 0 ? void 0 : _food$description.substring(0, 50), \"...\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(Chip, {\n                  label: food.category,\n                  size: \"small\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: formatNumber(food.caloriesPer100g, 0)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: [formatNumber(food.proteinPer100g, 2), \"g\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: [formatNumber(food.carbsPer100g, 2), \"g\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: [formatNumber(food.fatPer100g, 2), \"g\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                  size: \"small\",\n                  onClick: () => handleOpenDialog(food),\n                  children: /*#__PURE__*/_jsxDEV(Edit, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 217,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                  size: \"small\",\n                  color: \"error\",\n                  onClick: () => handleDeleteFood(food.id),\n                  children: /*#__PURE__*/_jsxDEV(Delete, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 224,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 17\n              }, this)]\n            }, food.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this), foods.length === 0 && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        textAlign: 'center',\n        py: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Restaurant, {\n        sx: {\n          fontSize: 64,\n          color: 'text.secondary',\n          mb: 2\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        color: \"text.secondary\",\n        children: \"No foods found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"text.secondary\",\n        children: \"Add your first food to get started\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: dialogOpen,\n      onClose: handleCloseDialog,\n      maxWidth: \"md\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: editingFood ? 'Edit Food' : 'Add New Food'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          sx: {\n            mt: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Food Name\",\n              value: foodData.name,\n              onChange: e => setFoodData({\n                ...foodData,\n                name: e.target.value\n              }),\n              fullWidth: true,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Category\",\n              value: foodData.category,\n              onChange: e => setFoodData({\n                ...foodData,\n                category: e.target.value\n              }),\n              fullWidth: true,\n              placeholder: \"e.g., Fruits, Vegetables, Meat\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Description\",\n              value: foodData.description,\n              onChange: e => setFoodData({\n                ...foodData,\n                description: e.target.value\n              }),\n              fullWidth: true,\n              multiline: true,\n              rows: 2\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Calories per 100g\",\n              type: \"number\",\n              value: foodData.caloriesPer100g,\n              onChange: e => setFoodData({\n                ...foodData,\n                caloriesPer100g: e.target.value\n              }),\n              fullWidth: true,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Protein per 100g (g)\",\n              type: \"number\",\n              inputProps: {\n                step: \"0.1\"\n              },\n              value: foodData.proteinPer100g,\n              onChange: e => setFoodData({\n                ...foodData,\n                proteinPer100g: e.target.value\n              }),\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Carbs per 100g (g)\",\n              type: \"number\",\n              inputProps: {\n                step: \"0.1\"\n              },\n              value: foodData.carbsPer100g,\n              onChange: e => setFoodData({\n                ...foodData,\n                carbsPer100g: e.target.value\n              }),\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Fat per 100g (g)\",\n              type: \"number\",\n              inputProps: {\n                step: \"0.1\"\n              },\n              value: foodData.fatPer100g,\n              onChange: e => setFoodData({\n                ...foodData,\n                fatPer100g: e.target.value\n              }),\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Fiber per 100g (g)\",\n              type: \"number\",\n              inputProps: {\n                step: \"0.1\"\n              },\n              value: foodData.fiberPer100g,\n              onChange: e => setFoodData({\n                ...foodData,\n                fiberPer100g: e.target.value\n              }),\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCloseDialog,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: handleSaveFood,\n          children: editingFood ? 'Update' : 'Create'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 5\n  }, this);\n};\n_s(FoodManagement, \"7yMF5CJqqWXt6X+Pwv53F4EBGHk=\");\n_c = FoodManagement;\nexport default FoodManagement;\nvar _c;\n$RefreshReg$(_c, \"FoodManagement\");","map":{"version":3,"names":["React","useState","useEffect","Box","Typography","Button","Dialog","DialogTitle","DialogContent","DialogActions","TextField","Grid","IconButton","Alert","CircularProgress","Chip","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Add","Edit","Delete","Restaurant","foodApi","jsxDEV","_jsxDEV","FoodManagement","_s","foods","setFoods","loading","setLoading","error","setError","dialogOpen","setDialogOpen","editingFood","setEditingFood","foodData","setFoodData","name","description","category","caloriesPer100g","proteinPer100g","carbsPer100g","fatPer100g","fiberPer100g","fetchFoods","response","getAllAdmin","Array","isArray","err","console","handleOpenDialog","food","_food$caloriesPer100g","_food$proteinPer100g","_food$carbsPer100g","_food$fatPer100g","_food$fiberPer100g","toString","handleCloseDialog","handleSaveFood","foodPayload","parseFloat","update","id","create","handleDeleteFood","window","confirm","delete","formatNumber","num","decimals","undefined","isNaN","Number","toFixed","display","justifyContent","alignItems","minHeight","children","fileName","_jsxFileName","lineNumber","columnNumber","sx","mb","variant","startIcon","onClick","severity","component","map","_food$description","color","substring","label","size","length","textAlign","py","fontSize","open","onClose","maxWidth","fullWidth","container","spacing","mt","item","xs","md","value","onChange","e","target","required","placeholder","multiline","rows","type","inputProps","step","_c","$RefreshReg$"],"sources":["C:/Users/GL-Saurav/Desktop/new/new/frontend/src/components/admin/FoodManagement.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  TextField,\n  Grid,\n  IconButton,\n  Alert,\n  CircularProgress,\n  Chip,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n} from '@mui/material';\nimport {\n  Add,\n  Edit,\n  Delete,\n  Restaurant,\n} from '@mui/icons-material';\nimport { foodApi } from '../../services/api';\n\nconst FoodManagement: React.FC = () => {\n  const [foods, setFoods] = useState<any[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [dialogOpen, setDialogOpen] = useState(false);\n  const [editingFood, setEditingFood] = useState<any>(null);\n\n  const [foodData, setFoodData] = useState({\n    name: '',\n    description: '',\n    category: '',\n    caloriesPer100g: '',\n    proteinPer100g: '',\n    carbsPer100g: '',\n    fatPer100g: '',\n    fiberPer100g: '',\n  });\n\n  useEffect(() => {\n    fetchFoods();\n  }, []);\n\n  const fetchFoods = async () => {\n    setLoading(true);\n    try {\n      const response = await foodApi.getAllAdmin();\n      // Handle paginated response\n      if (response && typeof response === 'object' && Array.isArray((response as any).foods)) {\n        setFoods((response as any).foods);\n      } else if (Array.isArray(response)) {\n        setFoods(response);\n      } else {\n        setFoods([]);\n      }\n    } catch (err) {\n      console.error('Error fetching foods:', err);\n      setError('Failed to load foods');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleOpenDialog = (food?: any) => {\n    if (food) {\n      setEditingFood(food);\n      setFoodData({\n        name: food.name || '',\n        description: food.description || '',\n        category: food.category || '',\n        caloriesPer100g: food.caloriesPer100g?.toString() || '',\n        proteinPer100g: food.proteinPer100g?.toString() || '',\n        carbsPer100g: food.carbsPer100g?.toString() || '',\n        fatPer100g: food.fatPer100g?.toString() || '',\n        fiberPer100g: food.fiberPer100g?.toString() || '',\n      });\n    } else {\n      setEditingFood(null);\n      setFoodData({\n        name: '',\n        description: '',\n        category: '',\n        caloriesPer100g: '',\n        proteinPer100g: '',\n        carbsPer100g: '',\n        fatPer100g: '',\n        fiberPer100g: '',\n      });\n    }\n    setDialogOpen(true);\n  };\n\n  const handleCloseDialog = () => {\n    setDialogOpen(false);\n    setEditingFood(null);\n  };\n\n  const handleSaveFood = async () => {\n    try {\n      const foodPayload = {\n        name: foodData.name,\n        description: foodData.description,\n        category: foodData.category,\n        caloriesPer100g: parseFloat(foodData.caloriesPer100g) || 0,\n        proteinPer100g: parseFloat(foodData.proteinPer100g) || 0,\n        carbsPer100g: parseFloat(foodData.carbsPer100g) || 0,\n        fatPer100g: parseFloat(foodData.fatPer100g) || 0,\n        fiberPer100g: parseFloat(foodData.fiberPer100g) || 0,\n      };\n\n      if (editingFood) {\n        await foodApi.update(editingFood.id, foodPayload);\n      } else {\n        await foodApi.create(foodPayload);\n      }\n\n      handleCloseDialog();\n      fetchFoods();\n      setError('');\n    } catch (err) {\n      console.error('Error saving food:', err);\n      setError('Failed to save food');\n    }\n  };\n\n  const handleDeleteFood = async (id: number) => {\n    if (window.confirm('Are you sure you want to delete this food?')) {\n      try {\n        await foodApi.delete(id);\n        fetchFoods();\n        setError('');\n      } catch (err) {\n        console.error('Error deleting food:', err);\n        setError('Failed to delete food');\n      }\n    }\n  };\n\n  const formatNumber = (num: number | undefined | null, decimals: number = 2): string => {\n    if (num === undefined || num === null || isNaN(num)) return '0';\n    return Number(num).toFixed(decimals);\n  };\n\n  if (loading) {\n    return (\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"400px\">\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  return (\n    <Box>\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 3 }}>\n        <Typography variant=\"h5\">Food Management</Typography>\n        <Button\n          variant=\"contained\"\n          startIcon={<Add />}\n          onClick={() => handleOpenDialog()}\n        >\n          Add Food\n        </Button>\n      </Box>\n\n      {error && (\n        <Alert severity=\"error\" sx={{ mb: 3 }}>\n          {error}\n        </Alert>\n      )}\n\n      <TableContainer component={Paper}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>Name</TableCell>\n              <TableCell>Category</TableCell>\n              <TableCell>Calories/100g</TableCell>\n              <TableCell>Protein/100g</TableCell>\n              <TableCell>Carbs/100g</TableCell>\n              <TableCell>Fat/100g</TableCell>\n              <TableCell>Actions</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {foods.map((food) => (\n              <TableRow key={food.id}>\n                <TableCell>\n                  <Typography variant=\"subtitle2\">{food.name}</Typography>\n                  <Typography variant=\"caption\" color=\"text.secondary\">\n                    {food.description?.substring(0, 50)}...\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <Chip label={food.category} size=\"small\" />\n                </TableCell>\n                <TableCell>{formatNumber(food.caloriesPer100g, 0)}</TableCell>\n                <TableCell>{formatNumber(food.proteinPer100g, 2)}g</TableCell>\n                <TableCell>{formatNumber(food.carbsPer100g, 2)}g</TableCell>\n                <TableCell>{formatNumber(food.fatPer100g, 2)}g</TableCell>\n                <TableCell>\n                  <IconButton\n                    size=\"small\"\n                    onClick={() => handleOpenDialog(food)}\n                  >\n                    <Edit />\n                  </IconButton>\n                  <IconButton\n                    size=\"small\"\n                    color=\"error\"\n                    onClick={() => handleDeleteFood(food.id)}\n                  >\n                    <Delete />\n                  </IconButton>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n\n      {foods.length === 0 && (\n        <Box sx={{ textAlign: 'center', py: 4 }}>\n          <Restaurant sx={{ fontSize: 64, color: 'text.secondary', mb: 2 }} />\n          <Typography variant=\"h6\" color=\"text.secondary\">\n            No foods found\n          </Typography>\n          <Typography variant=\"body2\" color=\"text.secondary\">\n            Add your first food to get started\n          </Typography>\n        </Box>\n      )}\n\n      {/* Add/Edit Food Dialog */}\n      <Dialog open={dialogOpen} onClose={handleCloseDialog} maxWidth=\"md\" fullWidth>\n        <DialogTitle>\n          {editingFood ? 'Edit Food' : 'Add New Food'}\n        </DialogTitle>\n        <DialogContent>\n          <Grid container spacing={2} sx={{ mt: 1 }}>\n            <Grid item xs={12} md={6}>\n              <TextField\n                label=\"Food Name\"\n                value={foodData.name}\n                onChange={(e) => setFoodData({ ...foodData, name: e.target.value })}\n                fullWidth\n                required\n              />\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <TextField\n                label=\"Category\"\n                value={foodData.category}\n                onChange={(e) => setFoodData({ ...foodData, category: e.target.value })}\n                fullWidth\n                placeholder=\"e.g., Fruits, Vegetables, Meat\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                label=\"Description\"\n                value={foodData.description}\n                onChange={(e) => setFoodData({ ...foodData, description: e.target.value })}\n                fullWidth\n                multiline\n                rows={2}\n              />\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <TextField\n                label=\"Calories per 100g\"\n                type=\"number\"\n                value={foodData.caloriesPer100g}\n                onChange={(e) => setFoodData({ ...foodData, caloriesPer100g: e.target.value })}\n                fullWidth\n                required\n              />\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <TextField\n                label=\"Protein per 100g (g)\"\n                type=\"number\"\n                inputProps={{ step: \"0.1\" }}\n                value={foodData.proteinPer100g}\n                onChange={(e) => setFoodData({ ...foodData, proteinPer100g: e.target.value })}\n                fullWidth\n              />\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <TextField\n                label=\"Carbs per 100g (g)\"\n                type=\"number\"\n                inputProps={{ step: \"0.1\" }}\n                value={foodData.carbsPer100g}\n                onChange={(e) => setFoodData({ ...foodData, carbsPer100g: e.target.value })}\n                fullWidth\n              />\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <TextField\n                label=\"Fat per 100g (g)\"\n                type=\"number\"\n                inputProps={{ step: \"0.1\" }}\n                value={foodData.fatPer100g}\n                onChange={(e) => setFoodData({ ...foodData, fatPer100g: e.target.value })}\n                fullWidth\n              />\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <TextField\n                label=\"Fiber per 100g (g)\"\n                type=\"number\"\n                inputProps={{ step: \"0.1\" }}\n                value={foodData.fiberPer100g}\n                onChange={(e) => setFoodData({ ...foodData, fiberPer100g: e.target.value })}\n                fullWidth\n              />\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseDialog}>Cancel</Button>\n          <Button\n            variant=\"contained\"\n            onClick={handleSaveFood}\n          >\n            {editingFood ? 'Update' : 'Create'}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Box>\n  );\n};\n\nexport default FoodManagement;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}