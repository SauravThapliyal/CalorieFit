{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\OneDrive\\\\Desktop\\\\CalorieFit\\\\CalorieFit\\\\frontend\\\\src\\\\pages\\\\WorkingNutrition.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Typography, Box, Card, CardContent, TextField, Button, Dialog, DialogTitle, DialogContent, DialogActions, FormControl, InputLabel, Select, MenuItem, Chip, Alert, CircularProgress } from '@mui/material';\nimport { Add, Search, Restaurant } from '@mui/icons-material';\nimport { foodApi, dietLogApi } from '../services/api';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst WorkingNutrition = () => {\n  _s();\n  const [foods, setFoods] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedCategory, setSelectedCategory] = useState('');\n  const [categories, setCategories] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  // Add Food Dialog\n  const [addFoodOpen, setAddFoodOpen] = useState(false);\n  const [newFood, setNewFood] = useState({\n    name: '',\n    description: '',\n    caloriesPer100g: 0,\n    proteinPer100g: 0,\n    carbsPer100g: 0,\n    fatPer100g: 0,\n    fiberPer100g: 0,\n    category: ''\n  });\n\n  // Log Food Dialog\n  const [logFoodOpen, setLogFoodOpen] = useState(false);\n  const [selectedFood, setSelectedFood] = useState(null);\n  const [quantity, setQuantity] = useState('100');\n  const [mealType, setMealType] = useState('Breakfast');\n  useEffect(() => {\n    fetchFoods();\n    fetchCategories();\n  }, []);\n  useEffect(() => {\n    fetchFoods();\n  }, [searchTerm, selectedCategory]);\n  const fetchFoods = async () => {\n    setLoading(true);\n    try {\n      const params = {};\n      if (searchTerm && searchTerm.trim()) params.search = searchTerm.trim();\n      if (selectedCategory && selectedCategory.trim()) params.category = selectedCategory.trim();\n      console.log('Fetching foods with params:', params);\n      const response = await foodApi.getAll(params);\n      console.log('Foods response:', response);\n      console.log('Response type:', typeof response);\n      console.log('Is array:', Array.isArray(response));\n\n      // Handle paginated response format\n      if (Array.isArray(response)) {\n        console.log('Response is direct array, setting foods to:', response);\n        setFoods(response);\n      } else if (response && typeof response === 'object' && Array.isArray(response.foods)) {\n        console.log('Response has foods property, setting foods to:', response.foods);\n        setFoods(response.foods);\n      } else if (response && typeof response === 'object' && Array.isArray(response.data)) {\n        console.log('Response has data property, setting foods to:', response.data);\n        setFoods(response.data);\n      } else {\n        console.log('Response format not recognized, setting empty array. Response:', response);\n        setFoods([]);\n      }\n      setError('');\n    } catch (err) {\n      console.error('Error fetching foods:', err);\n      setError('Failed to fetch foods. Please try again.');\n      setFoods([]); // Set empty array on error\n    } finally {\n      setLoading(false);\n    }\n  };\n  const fetchCategories = async () => {\n    try {\n      const response = await foodApi.getCategories();\n      setCategories(Array.isArray(response) ? response : []);\n    } catch (err) {\n      console.error('Error fetching categories:', err);\n      setCategories([]); // Set empty array on error\n    }\n  };\n  const handleCreateFood = async () => {\n    try {\n      await foodApi.create(newFood);\n      setAddFoodOpen(false);\n      setNewFood({\n        name: '',\n        description: '',\n        caloriesPer100g: 0,\n        proteinPer100g: 0,\n        carbsPer100g: 0,\n        fatPer100g: 0,\n        fiberPer100g: 0,\n        category: ''\n      });\n      fetchFoods();\n      setError('');\n    } catch (err) {\n      console.error('Error creating food:', err);\n      setError('Failed to create food. Please try again.');\n    }\n  };\n  const handleLogFood = async () => {\n    if (!selectedFood) return;\n    try {\n      const logData = {\n        foodId: selectedFood.id,\n        quantity: parseFloat(quantity),\n        unit: 'grams',\n        mealType: mealType\n      };\n      await dietLogApi.logFood(logData);\n      setLogFoodOpen(false);\n      setSelectedFood(null);\n      setQuantity('100');\n      setError('');\n    } catch (err) {\n      console.error('Error logging food:', err);\n      setError('Failed to log food. Please try again.');\n    }\n  };\n  const formatNumber = (num, decimals = 2) => {\n    if (num === undefined || num === null || isNaN(num)) return '0';\n    return Number(num).toFixed(decimals);\n  };\n  const calculateNutrition = (food, qty) => {\n    const multiplier = qty / 100;\n    return {\n      calories: parseFloat(formatNumber(food.caloriesPer100g * multiplier, 0)),\n      protein: parseFloat(formatNumber(food.proteinPer100g * multiplier, 2)),\n      carbs: parseFloat(formatNumber(food.carbsPer100g * multiplier, 2)),\n      fat: parseFloat(formatNumber(food.fatPer100g * multiplier, 2))\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        component: \"h1\",\n        gutterBottom: true,\n        children: \"Nutrition Tracker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        color: \"text.secondary\",\n        children: \"Search for foods and log your meals\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      sx: {\n        mb: 3\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        gap: 2,\n        mb: 3,\n        flexWrap: 'wrap'\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        placeholder: \"Search foods...\",\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value),\n        InputProps: {\n          startAdornment: /*#__PURE__*/_jsxDEV(Search, {\n            sx: {\n              mr: 1,\n              color: 'text.secondary'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 29\n          }, this)\n        },\n        sx: {\n          flex: 1,\n          minWidth: 250\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        sx: {\n          minWidth: 150\n        },\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          children: \"Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          value: selectedCategory,\n          onChange: e => setSelectedCategory(e.target.value),\n          label: \"Category\",\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"\",\n            children: \"All Categories\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this), (Array.isArray(categories) ? categories : []).map(category => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: category,\n            children: category\n          }, category, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        startIcon: /*#__PURE__*/_jsxDEV(Add, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 22\n        }, this),\n        onClick: () => setAddFoodOpen(true),\n        children: \"Add Custom Food\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'center',\n        py: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        gap: 2\n      },\n      children: (Array.isArray(foods) ? foods : []).map(food => /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          width: 300\n        },\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: food.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"text.secondary\",\n            sx: {\n              mb: 2\n            },\n            children: food.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Chip, {\n            label: food.category,\n            size: \"small\",\n            sx: {\n              mb: 2\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Per 100g:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              children: [\"Calories: \", formatNumber(food.caloriesPer100g, 0), \" | Protein: \", formatNumber(food.proteinPer100g, 2), \"g\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              children: [\"Carbs: \", formatNumber(food.carbsPer100g, 2), \"g | Fat: \", formatNumber(food.fatPer100g, 2), \"g\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            fullWidth: true,\n            startIcon: /*#__PURE__*/_jsxDEV(Restaurant, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 30\n            }, this),\n            onClick: () => {\n              setSelectedFood(food);\n              setLogFoodOpen(true);\n            },\n            children: \"Log Food\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 15\n        }, this)\n      }, food.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 9\n    }, this), (Array.isArray(foods) ? foods : []).length === 0 && !loading && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        textAlign: 'center',\n        py: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        color: \"text.secondary\",\n        children: \"No foods found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"text.secondary\",\n        children: \"Try adjusting your search or add a custom food\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: addFoodOpen,\n      onClose: () => setAddFoodOpen(false),\n      maxWidth: \"sm\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Add Custom Food\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            flexDirection: 'column',\n            gap: 2,\n            pt: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Food Name\",\n            value: newFood.name,\n            onChange: e => setNewFood({\n              ...newFood,\n              name: e.target.value\n            }),\n            fullWidth: true,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Description\",\n            value: newFood.description,\n            onChange: e => setNewFood({\n              ...newFood,\n              description: e.target.value\n            }),\n            fullWidth: true,\n            multiline: true,\n            rows: 2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Category\",\n            value: newFood.category,\n            onChange: e => setNewFood({\n              ...newFood,\n              category: e.target.value\n            }),\n            fullWidth: true,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Calories per 100g\",\n            type: \"number\",\n            value: newFood.caloriesPer100g,\n            onChange: e => setNewFood({\n              ...newFood,\n              caloriesPer100g: parseFloat(e.target.value) || 0\n            }),\n            fullWidth: true,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Protein per 100g (g)\",\n            type: \"number\",\n            value: newFood.proteinPer100g,\n            onChange: e => setNewFood({\n              ...newFood,\n              proteinPer100g: parseFloat(e.target.value) || 0\n            }),\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Carbs per 100g (g)\",\n            type: \"number\",\n            value: newFood.carbsPer100g,\n            onChange: e => setNewFood({\n              ...newFood,\n              carbsPer100g: parseFloat(e.target.value) || 0\n            }),\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Fat per 100g (g)\",\n            type: \"number\",\n            value: newFood.fatPer100g,\n            onChange: e => setNewFood({\n              ...newFood,\n              fatPer100g: parseFloat(e.target.value) || 0\n            }),\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setAddFoodOpen(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCreateFood,\n          variant: \"contained\",\n          children: \"Add Food\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: logFoodOpen,\n      onClose: () => setLogFoodOpen(false),\n      maxWidth: \"sm\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: [\"Log Food: \", selectedFood === null || selectedFood === void 0 ? void 0 : selectedFood.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            flexDirection: 'column',\n            gap: 2,\n            pt: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Quantity (grams)\",\n            type: \"number\",\n            value: quantity,\n            onChange: e => setQuantity(e.target.value),\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Meal Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: mealType,\n              onChange: e => setMealType(e.target.value),\n              label: \"Meal Type\",\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Breakfast\",\n                children: \"Breakfast\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 373,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Lunch\",\n                children: \"Lunch\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Dinner\",\n                children: \"Dinner\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 375,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Snack\",\n                children: \"Snack\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 376,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 13\n          }, this), selectedFood && quantity && /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              p: 2,\n              backgroundColor: 'grey.50',\n              borderRadius: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle2\",\n              gutterBottom: true,\n              children: [\"Nutrition for \", quantity, \"g:\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 17\n            }, this), (() => {\n              const nutrition = calculateNutrition(selectedFood, parseFloat(quantity) || 0);\n              return /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  children: [\"Calories: \", formatNumber(nutrition.calories, 0)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 389,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  children: [\"Protein: \", formatNumber(nutrition.protein, 2), \"g\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 390,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  children: [\"Carbs: \", formatNumber(nutrition.carbs, 2), \"g\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 391,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  children: [\"Fat: \", formatNumber(nutrition.fat, 2), \"g\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 392,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true);\n            })()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setLogFoodOpen(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleLogFood,\n          variant: \"contained\",\n          children: \"Log Food\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 5\n  }, this);\n};\n_s(WorkingNutrition, \"/xhGgnPUAA4JdBWzwmh6nYFYlAI=\");\n_c = WorkingNutrition;\nexport default WorkingNutrition;\nvar _c;\n$RefreshReg$(_c, \"WorkingNutrition\");","map":{"version":3,"names":["React","useState","useEffect","Container","Typography","Box","Card","CardContent","TextField","Button","Dialog","DialogTitle","DialogContent","DialogActions","FormControl","InputLabel","Select","MenuItem","Chip","Alert","CircularProgress","Add","Search","Restaurant","foodApi","dietLogApi","jsxDEV","_jsxDEV","Fragment","_Fragment","WorkingNutrition","_s","foods","setFoods","searchTerm","setSearchTerm","selectedCategory","setSelectedCategory","categories","setCategories","loading","setLoading","error","setError","addFoodOpen","setAddFoodOpen","newFood","setNewFood","name","description","caloriesPer100g","proteinPer100g","carbsPer100g","fatPer100g","fiberPer100g","category","logFoodOpen","setLogFoodOpen","selectedFood","setSelectedFood","quantity","setQuantity","mealType","setMealType","fetchFoods","fetchCategories","params","trim","search","console","log","response","getAll","Array","isArray","data","err","getCategories","handleCreateFood","create","handleLogFood","logData","foodId","id","parseFloat","unit","logFood","formatNumber","num","decimals","undefined","isNaN","Number","toFixed","calculateNutrition","food","qty","multiplier","calories","protein","carbs","fat","maxWidth","children","sx","mb","variant","component","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","color","severity","display","gap","flexWrap","placeholder","value","onChange","e","target","InputProps","startAdornment","mr","flex","minWidth","label","map","startIcon","onClick","justifyContent","py","width","size","fullWidth","length","textAlign","open","onClose","flexDirection","pt","required","multiline","rows","type","p","backgroundColor","borderRadius","nutrition","_c","$RefreshReg$"],"sources":["C:/Users/USER/OneDrive/Desktop/CalorieFit/CalorieFit/frontend/src/pages/WorkingNutrition.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Container,\n  Typography,\n  Box,\n  Card,\n  CardContent,\n  TextField,\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Chip,\n  Alert,\n  CircularProgress,\n} from '@mui/material';\nimport {\n  Add,\n  Search,\n  Restaurant,\n} from '@mui/icons-material';\nimport { foodApi, dietLogApi } from '../services/api';\nimport { Food, CreateFoodRequest } from '../types';\n\nconst WorkingNutrition: React.FC = () => {\n  const [foods, setFoods] = useState<Food[]>([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedCategory, setSelectedCategory] = useState('');\n  const [categories, setCategories] = useState<string[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  // Add Food Dialog\n  const [addFoodOpen, setAddFoodOpen] = useState(false);\n  const [newFood, setNewFood] = useState<CreateFoodRequest>({\n    name: '',\n    description: '',\n    caloriesPer100g: 0,\n    proteinPer100g: 0,\n    carbsPer100g: 0,\n    fatPer100g: 0,\n    fiberPer100g: 0,\n    category: '',\n  });\n\n  // Log Food Dialog\n  const [logFoodOpen, setLogFoodOpen] = useState(false);\n  const [selectedFood, setSelectedFood] = useState<Food | null>(null);\n  const [quantity, setQuantity] = useState('100');\n  const [mealType, setMealType] = useState('Breakfast');\n\n  useEffect(() => {\n    fetchFoods();\n    fetchCategories();\n  }, []);\n\n  useEffect(() => {\n    fetchFoods();\n  }, [searchTerm, selectedCategory]);\n\n  const fetchFoods = async () => {\n    setLoading(true);\n    try {\n      const params: any = {};\n      if (searchTerm && searchTerm.trim()) params.search = searchTerm.trim();\n      if (selectedCategory && selectedCategory.trim()) params.category = selectedCategory.trim();\n\n      console.log('Fetching foods with params:', params);\n      const response = await foodApi.getAll(params);\n      console.log('Foods response:', response);\n      console.log('Response type:', typeof response);\n      console.log('Is array:', Array.isArray(response));\n\n      // Handle paginated response format\n      if (Array.isArray(response)) {\n        console.log('Response is direct array, setting foods to:', response);\n        setFoods(response);\n      } else if (response && typeof response === 'object' && Array.isArray((response as any).foods)) {\n        console.log('Response has foods property, setting foods to:', (response as any).foods);\n        setFoods((response as any).foods);\n      } else if (response && typeof response === 'object' && Array.isArray((response as any).data)) {\n        console.log('Response has data property, setting foods to:', (response as any).data);\n        setFoods((response as any).data);\n      } else {\n        console.log('Response format not recognized, setting empty array. Response:', response);\n        setFoods([]);\n      }\n      setError('');\n    } catch (err) {\n      console.error('Error fetching foods:', err);\n      setError('Failed to fetch foods. Please try again.');\n      setFoods([]); // Set empty array on error\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const fetchCategories = async () => {\n    try {\n      const response = await foodApi.getCategories();\n      setCategories(Array.isArray(response) ? response : []);\n    } catch (err) {\n      console.error('Error fetching categories:', err);\n      setCategories([]); // Set empty array on error\n    }\n  };\n\n  const handleCreateFood = async () => {\n    try {\n      await foodApi.create(newFood);\n      setAddFoodOpen(false);\n      setNewFood({\n        name: '',\n        description: '',\n        caloriesPer100g: 0,\n        proteinPer100g: 0,\n        carbsPer100g: 0,\n        fatPer100g: 0,\n        fiberPer100g: 0,\n        category: '',\n      });\n      fetchFoods();\n      setError('');\n    } catch (err) {\n      console.error('Error creating food:', err);\n      setError('Failed to create food. Please try again.');\n    }\n  };\n\n  const handleLogFood = async () => {\n    if (!selectedFood) return;\n\n    try {\n      const logData = {\n        foodId: selectedFood.id,\n        quantity: parseFloat(quantity),\n        unit: 'grams',\n        mealType: mealType,\n      };\n\n      await dietLogApi.logFood(logData);\n      setLogFoodOpen(false);\n      setSelectedFood(null);\n      setQuantity('100');\n      setError('');\n    } catch (err) {\n      console.error('Error logging food:', err);\n      setError('Failed to log food. Please try again.');\n    }\n  };\n\n  const formatNumber = (num: number | undefined | null, decimals: number = 2): string => {\n    if (num === undefined || num === null || isNaN(num)) return '0';\n    return Number(num).toFixed(decimals);\n  };\n\n  const calculateNutrition = (food: Food, qty: number) => {\n    const multiplier = qty / 100;\n    return {\n      calories: parseFloat(formatNumber(food.caloriesPer100g * multiplier, 0)),\n      protein: parseFloat(formatNumber(food.proteinPer100g * multiplier, 2)),\n      carbs: parseFloat(formatNumber(food.carbsPer100g * multiplier, 2)),\n      fat: parseFloat(formatNumber(food.fatPer100g * multiplier, 2)),\n    };\n  };\n\n  return (\n    <Container maxWidth=\"lg\">\n      <Box sx={{ mb: 4 }}>\n        <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n          Nutrition Tracker\n        </Typography>\n        <Typography variant=\"body1\" color=\"text.secondary\">\n          Search for foods and log your meals\n        </Typography>\n      </Box>\n\n      {error && (\n        <Alert severity=\"error\" sx={{ mb: 3 }}>\n          {error}\n        </Alert>\n      )}\n\n\n\n      {/* Search and Filters */}\n      <Box sx={{ display: 'flex', gap: 2, mb: 3, flexWrap: 'wrap' }}>\n        <TextField\n          placeholder=\"Search foods...\"\n          value={searchTerm}\n          onChange={(e) => setSearchTerm(e.target.value)}\n          InputProps={{\n            startAdornment: <Search sx={{ mr: 1, color: 'text.secondary' }} />,\n          }}\n          sx={{ flex: 1, minWidth: 250 }}\n        />\n\n        <FormControl sx={{ minWidth: 150 }}>\n          <InputLabel>Category</InputLabel>\n          <Select\n            value={selectedCategory}\n            onChange={(e) => setSelectedCategory(e.target.value)}\n            label=\"Category\"\n          >\n            <MenuItem value=\"\">All Categories</MenuItem>\n            {(Array.isArray(categories) ? categories : []).map((category) => (\n              <MenuItem key={category} value={category}>\n                {category}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n\n        <Button\n          variant=\"contained\"\n          startIcon={<Add />}\n          onClick={() => setAddFoodOpen(true)}\n        >\n          Add Custom Food\n        </Button>\n      </Box>\n\n      {/* Foods List */}\n      {loading ? (\n        <Box sx={{ display: 'flex', justifyContent: 'center', py: 4 }}>\n          <CircularProgress />\n        </Box>\n      ) : (\n        <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 2 }}>\n          {(Array.isArray(foods) ? foods : []).map((food) => (\n            <Card key={food.id} sx={{ width: 300 }}>\n              <CardContent>\n                <Typography variant=\"h6\" gutterBottom>\n                  {food.name}\n                </Typography>\n                <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 2 }}>\n                  {food.description}\n                </Typography>\n\n                <Chip label={food.category} size=\"small\" sx={{ mb: 2 }} />\n\n                <Box sx={{ mb: 2 }}>\n                  <Typography variant=\"body2\">\n                    <strong>Per 100g:</strong>\n                  </Typography>\n                  <Typography variant=\"body2\">\n                    Calories: {formatNumber(food.caloriesPer100g, 0)} | Protein: {formatNumber(food.proteinPer100g, 2)}g\n                  </Typography>\n                  <Typography variant=\"body2\">\n                    Carbs: {formatNumber(food.carbsPer100g, 2)}g | Fat: {formatNumber(food.fatPer100g, 2)}g\n                  </Typography>\n                </Box>\n\n                <Button\n                  variant=\"contained\"\n                  fullWidth\n                  startIcon={<Restaurant />}\n                  onClick={() => {\n                    setSelectedFood(food);\n                    setLogFoodOpen(true);\n                  }}\n                >\n                  Log Food\n                </Button>\n              </CardContent>\n            </Card>\n          ))}\n        </Box>\n      )}\n\n      {(Array.isArray(foods) ? foods : []).length === 0 && !loading && (\n        <Box sx={{ textAlign: 'center', py: 4 }}>\n          <Typography variant=\"h6\" color=\"text.secondary\">\n            No foods found\n          </Typography>\n          <Typography variant=\"body2\" color=\"text.secondary\">\n            Try adjusting your search or add a custom food\n          </Typography>\n        </Box>\n      )}\n\n      {/* Add Food Dialog */}\n      <Dialog open={addFoodOpen} onClose={() => setAddFoodOpen(false)} maxWidth=\"sm\" fullWidth>\n        <DialogTitle>Add Custom Food</DialogTitle>\n        <DialogContent>\n          <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2, pt: 1 }}>\n            <TextField\n              label=\"Food Name\"\n              value={newFood.name}\n              onChange={(e) => setNewFood({ ...newFood, name: e.target.value })}\n              fullWidth\n              required\n            />\n            <TextField\n              label=\"Description\"\n              value={newFood.description}\n              onChange={(e) => setNewFood({ ...newFood, description: e.target.value })}\n              fullWidth\n              multiline\n              rows={2}\n            />\n            <TextField\n              label=\"Category\"\n              value={newFood.category}\n              onChange={(e) => setNewFood({ ...newFood, category: e.target.value })}\n              fullWidth\n              required\n            />\n            <TextField\n              label=\"Calories per 100g\"\n              type=\"number\"\n              value={newFood.caloriesPer100g}\n              onChange={(e) => setNewFood({ ...newFood, caloriesPer100g: parseFloat(e.target.value) || 0 })}\n              fullWidth\n              required\n            />\n            <TextField\n              label=\"Protein per 100g (g)\"\n              type=\"number\"\n              value={newFood.proteinPer100g}\n              onChange={(e) => setNewFood({ ...newFood, proteinPer100g: parseFloat(e.target.value) || 0 })}\n              fullWidth\n            />\n            <TextField\n              label=\"Carbs per 100g (g)\"\n              type=\"number\"\n              value={newFood.carbsPer100g}\n              onChange={(e) => setNewFood({ ...newFood, carbsPer100g: parseFloat(e.target.value) || 0 })}\n              fullWidth\n            />\n            <TextField\n              label=\"Fat per 100g (g)\"\n              type=\"number\"\n              value={newFood.fatPer100g}\n              onChange={(e) => setNewFood({ ...newFood, fatPer100g: parseFloat(e.target.value) || 0 })}\n              fullWidth\n            />\n          </Box>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setAddFoodOpen(false)}>Cancel</Button>\n          <Button onClick={handleCreateFood} variant=\"contained\">\n            Add Food\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      {/* Log Food Dialog */}\n      <Dialog open={logFoodOpen} onClose={() => setLogFoodOpen(false)} maxWidth=\"sm\" fullWidth>\n        <DialogTitle>Log Food: {selectedFood?.name}</DialogTitle>\n        <DialogContent>\n          <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2, pt: 1 }}>\n            <TextField\n              label=\"Quantity (grams)\"\n              type=\"number\"\n              value={quantity}\n              onChange={(e) => setQuantity(e.target.value)}\n              fullWidth\n            />\n\n            <FormControl fullWidth>\n              <InputLabel>Meal Type</InputLabel>\n              <Select\n                value={mealType}\n                onChange={(e) => setMealType(e.target.value)}\n                label=\"Meal Type\"\n              >\n                <MenuItem value=\"Breakfast\">Breakfast</MenuItem>\n                <MenuItem value=\"Lunch\">Lunch</MenuItem>\n                <MenuItem value=\"Dinner\">Dinner</MenuItem>\n                <MenuItem value=\"Snack\">Snack</MenuItem>\n              </Select>\n            </FormControl>\n\n            {selectedFood && quantity && (\n              <Box sx={{ p: 2, backgroundColor: 'grey.50', borderRadius: 1 }}>\n                <Typography variant=\"subtitle2\" gutterBottom>\n                  Nutrition for {quantity}g:\n                </Typography>\n                {(() => {\n                  const nutrition = calculateNutrition(selectedFood, parseFloat(quantity) || 0);\n                  return (\n                    <>\n                      <Typography variant=\"body2\">Calories: {formatNumber(nutrition.calories, 0)}</Typography>\n                      <Typography variant=\"body2\">Protein: {formatNumber(nutrition.protein, 2)}g</Typography>\n                      <Typography variant=\"body2\">Carbs: {formatNumber(nutrition.carbs, 2)}g</Typography>\n                      <Typography variant=\"body2\">Fat: {formatNumber(nutrition.fat, 2)}g</Typography>\n                    </>\n                  );\n                })()}\n              </Box>\n            )}\n          </Box>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setLogFoodOpen(false)}>Cancel</Button>\n          <Button onClick={handleLogFood} variant=\"contained\">\n            Log Food\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Container>\n  );\n};\n\nexport default WorkingNutrition;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}