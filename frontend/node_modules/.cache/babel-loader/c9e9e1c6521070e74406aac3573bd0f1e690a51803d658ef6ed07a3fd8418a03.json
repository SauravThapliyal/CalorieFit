{"ast":null,"code":"import axios from'axios';const API_BASE_URL='http://localhost:5263/api';const api=axios.create({baseURL:API_BASE_URL,headers:{'Content-Type':'application/json'}});// Add token to requests if available\napi.interceptors.request.use(config=>{const token=localStorage.getItem('token');if(token){config.headers.Authorization=\"Bearer \".concat(token);}return config;});// Handle token expiration\napi.interceptors.response.use(response=>response,error=>{var _error$response;if(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===401){localStorage.removeItem('token');localStorage.removeItem('user');window.location.href='/login';}return Promise.reject(error);});export const authApi={login:async data=>{const response=await api.post('/auth/login',data);return response.data;},register:async data=>{const response=await api.post('/auth/register',data);return response.data;}};export const userProfileApi={getProfile:async()=>{const response=await api.get('/userprofile');return response.data;},createProfile:async data=>{const response=await api.post('/userprofile',data);return response.data;},updateProfile:async data=>{const response=await api.put('/userprofile',data);return response.data;}};export default api;","map":{"version":3,"names":["axios","API_BASE_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","concat","response","error","_error$response","status","removeItem","window","location","href","Promise","reject","authApi","login","data","post","register","userProfileApi","getProfile","get","createProfile","updateProfile","put"],"sources":["C:/Users/GL-Saurav/Desktop/new/new/frontend/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\nimport {\n  AuthResponse,\n  LoginRequest,\n  RegisterRequest,\n  UserProfile,\n  CreateUserProfileRequest,\n} from '../types';\n\nconst API_BASE_URL = 'http://localhost:5263/api';\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Add token to requests if available\napi.interceptors.request.use((config) => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Handle token expiration\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response?.status === 401) {\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\nexport const authApi = {\n  login: async (data: LoginRequest): Promise<AuthResponse> => {\n    const response = await api.post('/auth/login', data);\n    return response.data;\n  },\n\n  register: async (data: RegisterRequest): Promise<AuthResponse> => {\n    const response = await api.post('/auth/register', data);\n    return response.data;\n  },\n};\n\nexport const userProfileApi = {\n  getProfile: async (): Promise<UserProfile> => {\n    const response = await api.get('/userprofile');\n    return response.data;\n  },\n\n  createProfile: async (data: CreateUserProfileRequest): Promise<UserProfile> => {\n    const response = await api.post('/userprofile', data);\n    return response.data;\n  },\n\n  updateProfile: async (data: Partial<CreateUserProfileRequest>): Promise<UserProfile> => {\n    const response = await api.put('/userprofile', data);\n    return response.data;\n  },\n};\n\nexport default api;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CASzB,KAAM,CAAAC,YAAY,CAAG,2BAA2B,CAEhD,KAAM,CAAAC,GAAG,CAAGF,KAAK,CAACG,MAAM,CAAC,CACvBC,OAAO,CAAEH,YAAY,CACrBI,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CACF,CAAC,CAAC,CAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,EAAK,CACvC,KAAM,CAAAC,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAC3C,GAAIF,KAAK,CAAE,CACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,WAAAC,MAAA,CAAaJ,KAAK,CAAE,CAClD,CACA,MAAO,CAAAD,MAAM,CACf,CAAC,CAAC,CAEF;AACAP,GAAG,CAACI,YAAY,CAACS,QAAQ,CAACP,GAAG,CAC1BO,QAAQ,EAAKA,QAAQ,CACrBC,KAAK,EAAK,KAAAC,eAAA,CACT,GAAI,EAAAA,eAAA,CAAAD,KAAK,CAACD,QAAQ,UAAAE,eAAA,iBAAdA,eAAA,CAAgBC,MAAM,IAAK,GAAG,CAAE,CAClCP,YAAY,CAACQ,UAAU,CAAC,OAAO,CAAC,CAChCR,YAAY,CAACQ,UAAU,CAAC,MAAM,CAAC,CAC/BC,MAAM,CAACC,QAAQ,CAACC,IAAI,CAAG,QAAQ,CACjC,CACA,MAAO,CAAAC,OAAO,CAACC,MAAM,CAACR,KAAK,CAAC,CAC9B,CACF,CAAC,CAED,MAAO,MAAM,CAAAS,OAAO,CAAG,CACrBC,KAAK,CAAE,KAAO,CAAAC,IAAkB,EAA4B,CAC1D,KAAM,CAAAZ,QAAQ,CAAG,KAAM,CAAAb,GAAG,CAAC0B,IAAI,CAAC,aAAa,CAAED,IAAI,CAAC,CACpD,MAAO,CAAAZ,QAAQ,CAACY,IAAI,CACtB,CAAC,CAEDE,QAAQ,CAAE,KAAO,CAAAF,IAAqB,EAA4B,CAChE,KAAM,CAAAZ,QAAQ,CAAG,KAAM,CAAAb,GAAG,CAAC0B,IAAI,CAAC,gBAAgB,CAAED,IAAI,CAAC,CACvD,MAAO,CAAAZ,QAAQ,CAACY,IAAI,CACtB,CACF,CAAC,CAED,MAAO,MAAM,CAAAG,cAAc,CAAG,CAC5BC,UAAU,CAAE,KAAAA,CAAA,GAAkC,CAC5C,KAAM,CAAAhB,QAAQ,CAAG,KAAM,CAAAb,GAAG,CAAC8B,GAAG,CAAC,cAAc,CAAC,CAC9C,MAAO,CAAAjB,QAAQ,CAACY,IAAI,CACtB,CAAC,CAEDM,aAAa,CAAE,KAAO,CAAAN,IAA8B,EAA2B,CAC7E,KAAM,CAAAZ,QAAQ,CAAG,KAAM,CAAAb,GAAG,CAAC0B,IAAI,CAAC,cAAc,CAAED,IAAI,CAAC,CACrD,MAAO,CAAAZ,QAAQ,CAACY,IAAI,CACtB,CAAC,CAEDO,aAAa,CAAE,KAAO,CAAAP,IAAuC,EAA2B,CACtF,KAAM,CAAAZ,QAAQ,CAAG,KAAM,CAAAb,GAAG,CAACiC,GAAG,CAAC,cAAc,CAAER,IAAI,CAAC,CACpD,MAAO,CAAAZ,QAAQ,CAACY,IAAI,CACtB,CACF,CAAC,CAED,cAAe,CAAAzB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}