{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GL-Saurav\\\\Desktop\\\\new\\\\new\\\\frontend\\\\src\\\\contexts\\\\AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { authApi } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    const userData = localStorage.getItem('user');\n    if (token && userData) {\n      try {\n        const parsedUser = JSON.parse(userData);\n        // Ensure role property exists for backward compatibility\n        if (!parsedUser.role) {\n          parsedUser.role = 'User';\n        }\n        setUser(parsedUser);\n      } catch (error) {\n        console.error('Error parsing user data:', error);\n        localStorage.removeItem('token');\n        localStorage.removeItem('user');\n      }\n    }\n    setLoading(false);\n  }, []);\n  const login = async data => {\n    try {\n      const response = await authApi.login(data);\n      const userData = {\n        id: response.userId,\n        email: response.email,\n        firstName: response.firstName,\n        lastName: response.lastName,\n        hasProfile: response.hasProfile,\n        role: response.role || 'User'\n      };\n      localStorage.setItem('token', response.token);\n      localStorage.setItem('user', JSON.stringify(userData));\n      setUser(userData);\n    } catch (error) {\n      throw error;\n    }\n  };\n  const register = async data => {\n    try {\n      const response = await authApi.register(data);\n      const userData = {\n        id: response.userId,\n        email: response.email,\n        firstName: response.firstName,\n        lastName: response.lastName,\n        hasProfile: response.hasProfile,\n        role: response.role || 'User'\n      };\n      localStorage.setItem('token', response.token);\n      localStorage.setItem('user', JSON.stringify(userData));\n      setUser(userData);\n    } catch (error) {\n      throw error;\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    setUser(null);\n  };\n  const updateProfileStatus = hasProfile => {\n    if (user) {\n      const updatedUser = {\n        ...user,\n        hasProfile\n      };\n      localStorage.setItem('user', JSON.stringify(updatedUser));\n      setUser(updatedUser);\n    }\n  };\n  const value = {\n    user,\n    loading,\n    login,\n    register,\n    logout,\n    updateProfileStatus,\n    isAuthenticated: !!user\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 10\n  }, this);\n};\n_s2(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","authApi","jsxDEV","_jsxDEV","AuthContext","undefined","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","token","localStorage","getItem","userData","parsedUser","JSON","parse","role","error","console","removeItem","login","data","response","id","userId","email","firstName","lastName","hasProfile","setItem","stringify","register","logout","updateProfileStatus","updatedUser","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/GL-Saurav/Desktop/new/new/frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\nimport { User, AuthResponse, LoginRequest, RegisterRequest } from '../types';\nimport { authApi } from '../services/api';\n\ninterface AuthContextType {\n  user: User | null;\n  loading: boolean;\n  login: (data: LoginRequest) => Promise<void>;\n  register: (data: RegisterRequest) => Promise<void>;\n  logout: () => void;\n  updateProfileStatus: (hasProfile: boolean) => void;\n  isAuthenticated: boolean;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\ninterface AuthProviderProps {\n  children: ReactNode;\n}\n\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    const userData = localStorage.getItem('user');\n\n    if (token && userData) {\n      try {\n        const parsedUser = JSON.parse(userData);\n        // Ensure role property exists for backward compatibility\n        if (!parsedUser.role) {\n          parsedUser.role = 'User';\n        }\n        setUser(parsedUser);\n      } catch (error) {\n        console.error('Error parsing user data:', error);\n        localStorage.removeItem('token');\n        localStorage.removeItem('user');\n      }\n    }\n\n    setLoading(false);\n  }, []);\n\n  const login = async (data: LoginRequest) => {\n    try {\n      const response: AuthResponse = await authApi.login(data);\n      const userData: User = {\n        id: response.userId,\n        email: response.email,\n        firstName: response.firstName,\n        lastName: response.lastName,\n        hasProfile: response.hasProfile,\n        role: response.role || 'User',\n      };\n\n      localStorage.setItem('token', response.token);\n      localStorage.setItem('user', JSON.stringify(userData));\n      setUser(userData);\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  const register = async (data: RegisterRequest) => {\n    try {\n      const response: AuthResponse = await authApi.register(data);\n\n      const userData: User = {\n        id: response.userId,\n        email: response.email,\n        firstName: response.firstName,\n        lastName: response.lastName,\n        hasProfile: response.hasProfile,\n        role: response.role || 'User',\n      };\n\n      localStorage.setItem('token', response.token);\n      localStorage.setItem('user', JSON.stringify(userData));\n      setUser(userData);\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    setUser(null);\n  };\n\n  const updateProfileStatus = (hasProfile: boolean) => {\n    if (user) {\n      const updatedUser = { ...user, hasProfile };\n      localStorage.setItem('user', JSON.stringify(updatedUser));\n      setUser(updatedUser);\n    }\n  };\n\n  const value: AuthContextType = {\n    user,\n    loading,\n    login,\n    register,\n    logout,\n    updateProfileStatus,\n    isAuthenticated: !!user,\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}