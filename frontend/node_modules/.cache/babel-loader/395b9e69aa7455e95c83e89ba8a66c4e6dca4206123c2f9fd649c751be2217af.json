{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Container,Typography,Box,Card,CardContent,Grid,LinearProgress,Chip,Button,Dialog,DialogTitle,DialogContent,DialogActions,TextField,Alert,CircularProgress}from'@mui/material';import{TrendingUp,TrendingDown,Add,LocalFireDepartment,EmojiEvents}from'@mui/icons-material';import{useAuth}from'../contexts/AuthContext';import{weightApi,userProfileApi,dietLogApi,achievementApi}from'../services/api';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Progress=()=>{const{user}=useAuth();const[loading,setLoading]=useState(true);const[error,setError]=useState('');const[weightRecords,setWeightRecords]=useState([]);const[userProfile,setUserProfile]=useState(null);const[dailySummary,setDailySummary]=useState(null);const[achievements,setAchievements]=useState([]);const[addWeightOpen,setAddWeightOpen]=useState(false);const[newWeight,setNewWeight]=useState('');useEffect(()=>{fetchProgressData();},[]);const fetchProgressData=async()=>{setLoading(true);try{const[weights,profile,summary,userAchievements]=await Promise.all([weightApi.getWeightRecords(30),userProfileApi.getProfile(),dietLogApi.getDailySummary(),achievementApi.getUserAchievements()]);setWeightRecords(Array.isArray(weights)?weights:[]);setUserProfile(profile);setDailySummary(summary);setAchievements(Array.isArray(userAchievements)?userAchievements:[]);}catch(err){console.error('Error fetching progress data:',err);setError('Failed to load progress data');}finally{setLoading(false);}};const handleAddWeight=async()=>{if(!newWeight)return;try{await weightApi.logWeight({weight:parseFloat(newWeight),loggedAt:new Date().toISOString()});setAddWeightOpen(false);setNewWeight('');fetchProgressData();}catch(err){console.error('Error adding weight:',err);setError('Failed to add weight record');}};const calculateBMI=(weight,height)=>{if(!weight||!height)return 0;return weight/(height/100)**2;};const getProgressStats=()=>{var _weightRecords$,_weightRecords$2,_weightRecords$3,_dailySummary$consume,_dailySummary$goals;const currentWeight=weightRecords.length>0?(_weightRecords$=weightRecords[0])===null||_weightRecords$===void 0?void 0:_weightRecords$.weight:(userProfile===null||userProfile===void 0?void 0:userProfile.currentWeight)||0;const targetWeight=(userProfile===null||userProfile===void 0?void 0:userProfile.targetWeight)||0;const height=(userProfile===null||userProfile===void 0?void 0:userProfile.height)||170;const currentBMI=calculateBMI(currentWeight,height);const targetBMI=calculateBMI(targetWeight,height);return[{title:'Current Weight',current:currentWeight,target:targetWeight,unit:'kg',change:weightRecords.length>1?((_weightRecords$2=weightRecords[0])===null||_weightRecords$2===void 0?void 0:_weightRecords$2.weight)-((_weightRecords$3=weightRecords[1])===null||_weightRecords$3===void 0?void 0:_weightRecords$3.weight):0,icon:currentWeight<=targetWeight?/*#__PURE__*/_jsx(TrendingDown,{}):/*#__PURE__*/_jsx(TrendingUp,{}),color:currentWeight<=targetWeight?'success':'warning'},{title:'BMI',current:currentBMI,target:targetBMI,unit:'',change:0,icon:currentBMI<=targetBMI?/*#__PURE__*/_jsx(TrendingDown,{}):/*#__PURE__*/_jsx(TrendingUp,{}),color:currentBMI<=25?'success':'warning'},{title:'Today\\'s Calories',current:(dailySummary===null||dailySummary===void 0?void 0:(_dailySummary$consume=dailySummary.consumed)===null||_dailySummary$consume===void 0?void 0:_dailySummary$consume.calories)||0,target:(dailySummary===null||dailySummary===void 0?void 0:(_dailySummary$goals=dailySummary.goals)===null||_dailySummary$goals===void 0?void 0:_dailySummary$goals.calories)||2000,unit:'kcal',change:0,icon:/*#__PURE__*/_jsx(LocalFireDepartment,{}),color:'primary'},{title:'Achievements',current:achievements.length,target:10,unit:'badges',change:0,icon:/*#__PURE__*/_jsx(EmojiEvents,{}),color:'warning'}];};if(loading){return/*#__PURE__*/_jsx(Container,{maxWidth:\"lg\",children:/*#__PURE__*/_jsx(Box,{display:\"flex\",justifyContent:\"center\",alignItems:\"center\",minHeight:\"400px\",children:/*#__PURE__*/_jsx(CircularProgress,{})})});}const progressStats=getProgressStats();return/*#__PURE__*/_jsxs(Container,{maxWidth:\"lg\",children:[/*#__PURE__*/_jsxs(Box,{sx:{mb:4},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",component:\"h1\",gutterBottom:true,children:\"Progress Tracker\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",color:\"text.secondary\",children:\"Monitor your fitness journey and celebrate your achievements\"})]}),error&&/*#__PURE__*/_jsx(Alert,{severity:\"error\",sx:{mb:3},children:error}),/*#__PURE__*/_jsx(Grid,{container:true,spacing:3,sx:{mb:4},children:progressStats.map((stat,index)=>/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,md:3,children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center',mb:2},children:[/*#__PURE__*/_jsx(Box,{sx:{color:\"\".concat(stat.color,\".main\"),mr:1},children:stat.icon}),/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",component:\"div\",children:[stat.current.toFixed(1),\" \",stat.unit]})]}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",gutterBottom:true,children:stat.title}),/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center',gap:1,mb:1},children:[/*#__PURE__*/_jsxs(Typography,{variant:\"caption\",color:\"text.secondary\",children:[\"Target: \",stat.target,\" \",stat.unit]}),stat.change!==0&&/*#__PURE__*/_jsx(Chip,{label:\"\".concat(stat.change>0?'+':'').concat(stat.change.toFixed(1),\" \").concat(stat.unit),size:\"small\",color:stat.change>0?'success':'error'})]}),/*#__PURE__*/_jsx(LinearProgress,{variant:\"determinate\",value:Math.min(stat.current/stat.target*100,100),color:stat.color})]})})},index))}),/*#__PURE__*/_jsxs(Box,{sx:{mb:4,display:'flex',justifyContent:'space-between',alignItems:'center'},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h5\",children:\"Weight Progress\"}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",startIcon:/*#__PURE__*/_jsx(Add,{}),onClick:()=>setAddWeightOpen(true),children:\"Log Weight\"})]}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:3,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Recent Weight Records\"}),weightRecords.length>0?weightRecords.slice(0,5).map((record,index)=>/*#__PURE__*/_jsx(Box,{sx:{mb:2,p:2,bgcolor:'grey.50',borderRadius:1},children:/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',justifyContent:'space-between',alignItems:'center'},children:[/*#__PURE__*/_jsxs(Typography,{variant:\"body1\",fontWeight:\"bold\",children:[record.weight,\" kg\"]}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",children:new Date(record.loggedAt).toLocaleDateString()})]})},index)):/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",sx:{py:2},children:\"No weight records yet. Start tracking your progress!\"})]})})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Recent Achievements\"}),achievements.length>0?achievements.slice(0,3).map((achievement,index)=>/*#__PURE__*/_jsxs(Box,{sx:{mb:2,p:2,bgcolor:'warning.light',borderRadius:1},children:[/*#__PURE__*/_jsxs(Typography,{variant:\"body1\",fontWeight:\"bold\",children:[\"\\uD83C\\uDFC6 \",achievement.title]}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",children:achievement.description})]},index)):/*#__PURE__*/_jsxs(Box,{sx:{textAlign:'center',py:4},children:[/*#__PURE__*/_jsx(EmojiEvents,{sx:{fontSize:48,color:'primary.main',mb:2}}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",gutterBottom:true,children:\"Start your fitness journey!\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",children:\"Complete workouts and track nutrition to earn achievements\"})]})]})})})]}),/*#__PURE__*/_jsxs(Dialog,{open:addWeightOpen,onClose:()=>setAddWeightOpen(false),maxWidth:\"sm\",fullWidth:true,children:[/*#__PURE__*/_jsx(DialogTitle,{children:\"Log Weight\"}),/*#__PURE__*/_jsx(DialogContent,{children:/*#__PURE__*/_jsx(Box,{sx:{pt:1},children:/*#__PURE__*/_jsx(TextField,{label:\"Weight (kg)\",type:\"number\",value:newWeight,onChange:e=>setNewWeight(e.target.value),fullWidth:true,inputProps:{min:0,step:0.1}})})}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:()=>setAddWeightOpen(false),children:\"Cancel\"}),/*#__PURE__*/_jsx(Button,{onClick:handleAddWeight,variant:\"contained\",children:\"Log Weight\"})]})]})]});};export default Progress;","map":{"version":3,"names":["React","useState","useEffect","Container","Typography","Box","Card","CardContent","Grid","LinearProgress","Chip","Button","Dialog","DialogTitle","DialogContent","DialogActions","TextField","Alert","CircularProgress","TrendingUp","TrendingDown","Add","LocalFireDepartment","EmojiEvents","useAuth","weightApi","userProfileApi","dietLogApi","achievementApi","jsx","_jsx","jsxs","_jsxs","Progress","user","loading","setLoading","error","setError","weightRecords","setWeightRecords","userProfile","setUserProfile","dailySummary","setDailySummary","achievements","setAchievements","addWeightOpen","setAddWeightOpen","newWeight","setNewWeight","fetchProgressData","weights","profile","summary","userAchievements","Promise","all","getWeightRecords","getProfile","getDailySummary","getUserAchievements","Array","isArray","err","console","handleAddWeight","logWeight","weight","parseFloat","loggedAt","Date","toISOString","calculateBMI","height","getProgressStats","_weightRecords$","_weightRecords$2","_weightRecords$3","_dailySummary$consume","_dailySummary$goals","currentWeight","length","targetWeight","currentBMI","targetBMI","title","current","target","unit","change","icon","color","consumed","calories","goals","maxWidth","children","display","justifyContent","alignItems","minHeight","progressStats","sx","mb","variant","component","gutterBottom","severity","container","spacing","map","stat","index","item","xs","sm","md","concat","mr","toFixed","gap","label","size","value","Math","min","startIcon","onClick","slice","record","p","bgcolor","borderRadius","fontWeight","toLocaleDateString","py","achievement","description","textAlign","fontSize","open","onClose","fullWidth","pt","type","onChange","e","inputProps","step"],"sources":["C:/Users/GL-Saurav/Desktop/new/new/frontend/src/pages/Progress.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Container,\n  Typography,\n  Box,\n  Card,\n  CardContent,\n  Grid,\n  LinearProgress,\n  Chip,\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  TextField,\n  Alert,\n  CircularProgress,\n} from '@mui/material';\nimport {\n  TrendingUp,\n  TrendingDown,\n  FitnessCenter,\n  Add,\n  LocalFireDepartment,\n  EmojiEvents,\n} from '@mui/icons-material';\nimport { useAuth } from '../contexts/AuthContext';\nimport { weightApi, userProfileApi, dietLogApi, achievementApi } from '../services/api';\n\nconst Progress: React.FC = () => {\n  const { user } = useAuth();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [weightRecords, setWeightRecords] = useState<any[]>([]);\n  const [userProfile, setUserProfile] = useState<any>(null);\n  const [dailySummary, setDailySummary] = useState<any>(null);\n  const [achievements, setAchievements] = useState<any[]>([]);\n  const [addWeightOpen, setAddWeightOpen] = useState(false);\n  const [newWeight, setNewWeight] = useState('');\n\n  useEffect(() => {\n    fetchProgressData();\n  }, []);\n\n  const fetchProgressData = async () => {\n    setLoading(true);\n    try {\n      const [weights, profile, summary, userAchievements] = await Promise.all([\n        weightApi.getWeightRecords(30),\n        userProfileApi.getProfile(),\n        dietLogApi.getDailySummary(),\n        achievementApi.getUserAchievements(),\n      ]);\n\n      setWeightRecords(Array.isArray(weights) ? weights : []);\n      setUserProfile(profile);\n      setDailySummary(summary);\n      setAchievements(Array.isArray(userAchievements) ? userAchievements : []);\n    } catch (err) {\n      console.error('Error fetching progress data:', err);\n      setError('Failed to load progress data');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleAddWeight = async () => {\n    if (!newWeight) return;\n\n    try {\n      await weightApi.logWeight({\n        weight: parseFloat(newWeight),\n        loggedAt: new Date().toISOString(),\n      });\n      setAddWeightOpen(false);\n      setNewWeight('');\n      fetchProgressData();\n    } catch (err) {\n      console.error('Error adding weight:', err);\n      setError('Failed to add weight record');\n    }\n  };\n\n  const calculateBMI = (weight: number, height: number) => {\n    if (!weight || !height) return 0;\n    return weight / ((height / 100) ** 2);\n  };\n\n  const getProgressStats = () => {\n    const currentWeight = weightRecords.length > 0 ? weightRecords[0]?.weight : userProfile?.currentWeight || 0;\n    const targetWeight = userProfile?.targetWeight || 0;\n    const height = userProfile?.height || 170;\n    const currentBMI = calculateBMI(currentWeight, height);\n    const targetBMI = calculateBMI(targetWeight, height);\n\n    return [\n      {\n        title: 'Current Weight',\n        current: currentWeight,\n        target: targetWeight,\n        unit: 'kg',\n        change: weightRecords.length > 1 ? (weightRecords[0]?.weight - weightRecords[1]?.weight) : 0,\n        icon: currentWeight <= targetWeight ? <TrendingDown /> : <TrendingUp />,\n        color: currentWeight <= targetWeight ? 'success' : 'warning',\n      },\n      {\n        title: 'BMI',\n        current: currentBMI,\n        target: targetBMI,\n        unit: '',\n        change: 0,\n        icon: currentBMI <= targetBMI ? <TrendingDown /> : <TrendingUp />,\n        color: currentBMI <= 25 ? 'success' : 'warning',\n      },\n      {\n        title: 'Today\\'s Calories',\n        current: dailySummary?.consumed?.calories || 0,\n        target: dailySummary?.goals?.calories || 2000,\n        unit: 'kcal',\n        change: 0,\n        icon: <LocalFireDepartment />,\n        color: 'primary',\n      },\n      {\n        title: 'Achievements',\n        current: achievements.length,\n        target: 10,\n        unit: 'badges',\n        change: 0,\n        icon: <EmojiEvents />,\n        color: 'warning',\n      },\n    ];\n  };\n\n  if (loading) {\n    return (\n      <Container maxWidth=\"lg\">\n        <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"400px\">\n          <CircularProgress />\n        </Box>\n      </Container>\n    );\n  }\n\n  const progressStats = getProgressStats();\n\n  return (\n    <Container maxWidth=\"lg\">\n      <Box sx={{ mb: 4 }}>\n        <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n          Progress Tracker\n        </Typography>\n        <Typography variant=\"body1\" color=\"text.secondary\">\n          Monitor your fitness journey and celebrate your achievements\n        </Typography>\n      </Box>\n\n      {error && (\n        <Alert severity=\"error\" sx={{ mb: 3 }}>\n          {error}\n        </Alert>\n      )}\n\n      {/* Progress Stats */}\n      <Grid container spacing={3} sx={{ mb: 4 }}>\n        {progressStats.map((stat, index) => (\n          <Grid item xs={12} sm={6} md={3} key={index}>\n            <Card>\n              <CardContent>\n                <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n                  <Box sx={{ color: `${stat.color}.main`, mr: 1 }}>\n                    {stat.icon}\n                  </Box>\n                  <Typography variant=\"h6\" component=\"div\">\n                    {stat.current.toFixed(1)} {stat.unit}\n                  </Typography>\n                </Box>\n                <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\n                  {stat.title}\n                </Typography>\n                <Box sx={{ display: 'flex', alignItems: 'center', gap: 1, mb: 1 }}>\n                  <Typography variant=\"caption\" color=\"text.secondary\">\n                    Target: {stat.target} {stat.unit}\n                  </Typography>\n                  {stat.change !== 0 && (\n                    <Chip\n                      label={`${stat.change > 0 ? '+' : ''}${stat.change.toFixed(1)} ${stat.unit}`}\n                      size=\"small\"\n                      color={stat.change > 0 ? 'success' : 'error'}\n                    />\n                  )}\n                </Box>\n                <LinearProgress\n                  variant=\"determinate\"\n                  value={Math.min((stat.current / stat.target) * 100, 100)}\n                  color={stat.color as any}\n                />\n              </CardContent>\n            </Card>\n          </Grid>\n        ))}\n      </Grid>\n\n      {/* Add Weight Button */}\n      <Box sx={{ mb: 4, display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n        <Typography variant=\"h5\">Weight Progress</Typography>\n        <Button\n          variant=\"contained\"\n          startIcon={<Add />}\n          onClick={() => setAddWeightOpen(true)}\n        >\n          Log Weight\n        </Button>\n      </Box>\n\n      {/* Weight Records */}\n      <Grid container spacing={3}>\n        <Grid item xs={12} md={6}>\n          <Card>\n            <CardContent>\n              <Typography variant=\"h6\" gutterBottom>\n                Recent Weight Records\n              </Typography>\n              {weightRecords.length > 0 ? (\n                weightRecords.slice(0, 5).map((record, index) => (\n                  <Box key={index} sx={{ mb: 2, p: 2, bgcolor: 'grey.50', borderRadius: 1 }}>\n                    <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                      <Typography variant=\"body1\" fontWeight=\"bold\">\n                        {record.weight} kg\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        {new Date(record.loggedAt).toLocaleDateString()}\n                      </Typography>\n                    </Box>\n                  </Box>\n                ))\n              ) : (\n                <Typography variant=\"body2\" color=\"text.secondary\" sx={{ py: 2 }}>\n                  No weight records yet. Start tracking your progress!\n                </Typography>\n              )}\n            </CardContent>\n          </Card>\n        </Grid>\n\n        <Grid item xs={12} md={6}>\n          <Card>\n            <CardContent>\n              <Typography variant=\"h6\" gutterBottom>\n                Recent Achievements\n              </Typography>\n              {achievements.length > 0 ? (\n                achievements.slice(0, 3).map((achievement, index) => (\n                  <Box key={index} sx={{ mb: 2, p: 2, bgcolor: 'warning.light', borderRadius: 1 }}>\n                    <Typography variant=\"body1\" fontWeight=\"bold\">\n                      🏆 {achievement.title}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"text.secondary\">\n                      {achievement.description}\n                    </Typography>\n                  </Box>\n                ))\n              ) : (\n                <Box sx={{ textAlign: 'center', py: 4 }}>\n                  <EmojiEvents sx={{ fontSize: 48, color: 'primary.main', mb: 2 }} />\n                  <Typography variant=\"body1\" gutterBottom>\n                    Start your fitness journey!\n                  </Typography>\n                  <Typography variant=\"body2\" color=\"text.secondary\">\n                    Complete workouts and track nutrition to earn achievements\n                  </Typography>\n                </Box>\n              )}\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n\n      {/* Add Weight Dialog */}\n      <Dialog open={addWeightOpen} onClose={() => setAddWeightOpen(false)} maxWidth=\"sm\" fullWidth>\n        <DialogTitle>Log Weight</DialogTitle>\n        <DialogContent>\n          <Box sx={{ pt: 1 }}>\n            <TextField\n              label=\"Weight (kg)\"\n              type=\"number\"\n              value={newWeight}\n              onChange={(e) => setNewWeight(e.target.value)}\n              fullWidth\n              inputProps={{ min: 0, step: 0.1 }}\n            />\n          </Box>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setAddWeightOpen(false)}>Cancel</Button>\n          <Button onClick={handleAddWeight} variant=\"contained\">\n            Log Weight\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Container>\n  );\n};\n\nexport default Progress;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}