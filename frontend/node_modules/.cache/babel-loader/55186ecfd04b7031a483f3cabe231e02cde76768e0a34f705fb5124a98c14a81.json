{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GL-Saurav\\\\Desktop\\\\new\\\\new\\\\frontend\\\\src\\\\pages\\\\Achievements.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Typography, Box, Card, CardContent, Grid, Badge, Avatar, LinearProgress, Alert, CircularProgress, Button, Tabs, Tab, Chip } from '@mui/material';\nimport { EmojiEvents, FitnessCenter, Restaurant, TrendingUp, LocalFireDepartment, Timer, Star, Lock, CheckCircle, Refresh } from '@mui/icons-material';\nimport { achievementApi } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Achievements = () => {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [achievements, setAchievements] = useState([]);\n  const [userAchievements, setUserAchievements] = useState([]);\n  const [tabValue, setTabValue] = useState(0);\n  useEffect(() => {\n    fetchAchievements();\n  }, []);\n  const fetchAchievements = async () => {\n    setLoading(true);\n    try {\n      const [allAchievements, earnedAchievements] = await Promise.all([achievementApi.getAll(), achievementApi.getUserAchievements()]);\n      setAchievements(Array.isArray(allAchievements) ? allAchievements : []);\n      setUserAchievements(Array.isArray(earnedAchievements) ? earnedAchievements : []);\n    } catch (err) {\n      console.error('Error fetching achievements:', err);\n      setError('Failed to load achievements');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleCheckAchievements = async () => {\n    try {\n      await achievementApi.checkAchievements();\n      fetchAchievements(); // Refresh data\n    } catch (err) {\n      console.error('Error checking achievements:', err);\n      setError('Failed to check achievements');\n    }\n  };\n  const formatNumber = (num, decimals = 2) => {\n    if (num === undefined || num === null || isNaN(num)) return '0';\n    return Number(num).toFixed(decimals);\n  };\n  const getAchievementIcon = type => {\n    switch (type.toLowerCase()) {\n      case 'exercise':\n      case 'workout':\n        return /*#__PURE__*/_jsxDEV(FitnessCenter, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 16\n        }, this);\n      case 'nutrition':\n      case 'meal':\n        return /*#__PURE__*/_jsxDEV(Restaurant, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 16\n        }, this);\n      case 'weight':\n        return /*#__PURE__*/_jsxDEV(TrendingUp, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 16\n        }, this);\n      case 'streak':\n        return /*#__PURE__*/_jsxDEV(LocalFireDepartment, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 16\n        }, this);\n      case 'time':\n        return /*#__PURE__*/_jsxDEV(Timer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 16\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(EmojiEvents, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  const getAchievementColor = type => {\n    switch (type.toLowerCase()) {\n      case 'exercise':\n        return 'primary';\n      case 'nutrition':\n        return 'secondary';\n      case 'weight':\n        return 'success';\n      case 'streak':\n        return 'error';\n      case 'time':\n        return 'info';\n      default:\n        return 'warning';\n    }\n  };\n  const isAchievementEarned = achievementId => {\n    return userAchievements.some(ua => ua.achievementId === achievementId);\n  };\n  const getEarnedDate = achievementId => {\n    const earned = userAchievements.find(ua => ua.achievementId === achievementId);\n    return earned ? earned.earnedAt : null;\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"lg\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        minHeight: \"400px\",\n        children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this);\n  }\n  const earnedCount = userAchievements.length;\n  const totalCount = achievements.length;\n  const stats = {\n    totalAchievements: totalCount,\n    earnedAchievements: earnedCount,\n    totalPoints: earnedCount * 100\n  };\n  const earnedAchievements = achievements.filter(a => isAchievementEarned(a.id));\n  const availableAchievements = achievements.filter(a => !isAchievementEarned(a.id));\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 4,\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          component: \"h1\",\n          gutterBottom: true,\n          children: \"Achievements & Badges\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          color: \"text.secondary\",\n          children: \"Track your milestones and celebrate your fitness journey\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        startIcon: /*#__PURE__*/_jsxDEV(Refresh, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 22\n        }, this),\n        onClick: handleCheckAchievements,\n        children: \"Check Progress\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      sx: {\n        mb: 3\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      sx: {\n        mb: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            sx: {\n              textAlign: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(EmojiEvents, {\n              sx: {\n                fontSize: 48,\n                color: 'warning.main',\n                mb: 1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              color: \"warning.main\",\n              children: stats.earnedAchievements\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"text.secondary\",\n              children: \"Achievements Earned\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            sx: {\n              textAlign: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Star, {\n              sx: {\n                fontSize: 48,\n                color: 'primary.main',\n                mb: 1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              color: \"primary.main\",\n              children: stats.totalPoints\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"text.secondary\",\n              children: \"Total Points\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            sx: {\n              textAlign: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              color: \"success.main\",\n              children: [formatNumber(stats.earnedAchievements / stats.totalAchievements * 100, 0), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"text.secondary\",\n              children: \"Completion Rate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(LinearProgress, {\n              variant: \"determinate\",\n              value: stats.earnedAchievements / stats.totalAchievements * 100,\n              color: \"success\",\n              sx: {\n                mt: 1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      children: \"All Achievements\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(Tabs, {\n        value: tabValue,\n        onChange: (_, newValue) => setTabValue(newValue),\n        children: [/*#__PURE__*/_jsxDEV(Tab, {\n          label: `All (${achievements.length})`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          label: `Earned (${earnedCount})`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          label: `Available (${availableAchievements.length})`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: (tabValue === 0 ? achievements : tabValue === 1 ? earnedAchievements : availableAchievements).map(achievement => {\n        const isEarned = isAchievementEarned(achievement.id);\n        const earnedDate = getEarnedDate(achievement.id);\n        const achievementType = achievement.type || 'general';\n        const color = getAchievementColor(achievementType);\n        return /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            sx: {\n              height: '100%',\n              opacity: isEarned ? 1 : 0.7,\n              border: isEarned ? 2 : 0,\n              borderColor: isEarned ? `${color}.main` : 'transparent'\n            },\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  alignItems: 'center',\n                  mb: 2\n                },\n                children: [/*#__PURE__*/_jsxDEV(Badge, {\n                  badgeContent: isEarned ? /*#__PURE__*/_jsxDEV(CheckCircle, {\n                    sx: {\n                      fontSize: 16\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 255,\n                    columnNumber: 48\n                  }, this) : null,\n                  color: \"success\",\n                  children: /*#__PURE__*/_jsxDEV(Avatar, {\n                    sx: {\n                      bgcolor: `${color}.main`,\n                      width: 56,\n                      height: 56\n                    },\n                    children: getAchievementIcon(achievementType)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 258,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 254,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    ml: 2\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h6\",\n                    component: \"div\",\n                    children: achievement.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 269,\n                    columnNumber: 23\n                  }, this), isEarned && earnedDate && /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"caption\",\n                    color: \"success.main\",\n                    children: [\"Earned on \", new Date(earnedDate).toLocaleDateString()]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 273,\n                    columnNumber: 25\n                  }, this), !isEarned && /*#__PURE__*/_jsxDEV(Chip, {\n                    icon: /*#__PURE__*/_jsxDEV(Lock, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 279,\n                      columnNumber: 33\n                    }, this),\n                    label: \"Locked\",\n                    size: \"small\",\n                    color: \"default\",\n                    variant: \"outlined\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 278,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 268,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"text.secondary\",\n                sx: {\n                  mb: 2\n                },\n                children: achievement.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 19\n              }, this), achievement.targetValue && /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  mb: 2\n                },\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"caption\",\n                  color: \"text.secondary\",\n                  children: [\"Target: \", formatNumber(achievement.targetValue, 0), \" \", achievement.unit || '']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 295,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 21\n              }, this), achievement.points && /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  mb: 2\n                },\n                children: /*#__PURE__*/_jsxDEV(Chip, {\n                  icon: /*#__PURE__*/_jsxDEV(Star, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 304,\n                    columnNumber: 31\n                  }, this),\n                  label: `${achievement.points} points`,\n                  size: \"small\",\n                  color: \"warning\",\n                  variant: isEarned ? \"filled\" : \"outlined\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 303,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 21\n              }, this), isEarned && /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  textAlign: 'center',\n                  py: 1,\n                  backgroundColor: `${color}.light`,\n                  borderRadius: 1,\n                  mt: 1\n                },\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: `${color}.dark`,\n                  children: \"\\uD83C\\uDF89 Achievement Unlocked!\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 321,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 15\n          }, this)\n        }, achievement.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this), achievements.length === 0 && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        textAlign: 'center',\n        py: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(EmojiEvents, {\n        sx: {\n          fontSize: 64,\n          color: 'text.secondary',\n          mb: 2\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        color: \"text.secondary\",\n        children: \"No achievements available yet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"text.secondary\",\n        children: \"Start your fitness journey to unlock achievements!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }, this);\n};\n_s(Achievements, \"7DccblYMReJRW9q2UgRouTF0efs=\");\n_c = Achievements;\nexport default Achievements;\nvar _c;\n$RefreshReg$(_c, \"Achievements\");","map":{"version":3,"names":["React","useState","useEffect","Container","Typography","Box","Card","CardContent","Grid","Badge","Avatar","LinearProgress","Alert","CircularProgress","Button","Tabs","Tab","Chip","EmojiEvents","FitnessCenter","Restaurant","TrendingUp","LocalFireDepartment","Timer","Star","Lock","CheckCircle","Refresh","achievementApi","jsxDEV","_jsxDEV","Achievements","_s","loading","setLoading","error","setError","achievements","setAchievements","userAchievements","setUserAchievements","tabValue","setTabValue","fetchAchievements","allAchievements","earnedAchievements","Promise","all","getAll","getUserAchievements","Array","isArray","err","console","handleCheckAchievements","checkAchievements","formatNumber","num","decimals","undefined","isNaN","Number","toFixed","getAchievementIcon","type","toLowerCase","fileName","_jsxFileName","lineNumber","columnNumber","getAchievementColor","isAchievementEarned","achievementId","some","ua","getEarnedDate","earned","find","earnedAt","maxWidth","children","display","justifyContent","alignItems","minHeight","earnedCount","length","totalCount","stats","totalAchievements","totalPoints","filter","a","id","availableAchievements","sx","mb","variant","component","gutterBottom","color","startIcon","onClick","severity","container","spacing","item","xs","md","textAlign","fontSize","value","mt","onChange","_","newValue","label","map","achievement","isEarned","earnedDate","achievementType","sm","height","opacity","border","borderColor","badgeContent","bgcolor","width","ml","title","Date","toLocaleDateString","icon","size","description","targetValue","unit","points","py","backgroundColor","borderRadius","_c","$RefreshReg$"],"sources":["C:/Users/GL-Saurav/Desktop/new/new/frontend/src/pages/Achievements.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Container,\n  Typography,\n  Box,\n  Card,\n  CardContent,\n  Grid,\n  Badge,\n  Avatar,\n  LinearProgress,\n  Alert,\n  CircularProgress,\n  Button,\n  Tabs,\n  Tab,\n  Chip,\n} from '@mui/material';\nimport {\n  EmojiEvents,\n  FitnessCenter,\n  Restaurant,\n  TrendingUp,\n  LocalFireDepartment,\n  Timer,\n  Star,\n  Lock,\n  CheckCircle,\n  Refresh,\n} from '@mui/icons-material';\nimport { achievementApi } from '../services/api';\n\nconst Achievements: React.FC = () => {\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [achievements, setAchievements] = useState<any[]>([]);\n  const [userAchievements, setUserAchievements] = useState<any[]>([]);\n  const [tabValue, setTabValue] = useState(0);\n\n  useEffect(() => {\n    fetchAchievements();\n  }, []);\n\n  const fetchAchievements = async () => {\n    setLoading(true);\n    try {\n      const [allAchievements, earnedAchievements] = await Promise.all([\n        achievementApi.getAll(),\n        achievementApi.getUserAchievements(),\n      ]);\n\n      setAchievements(Array.isArray(allAchievements) ? allAchievements : []);\n      setUserAchievements(Array.isArray(earnedAchievements) ? earnedAchievements : []);\n    } catch (err) {\n      console.error('Error fetching achievements:', err);\n      setError('Failed to load achievements');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleCheckAchievements = async () => {\n    try {\n      await achievementApi.checkAchievements();\n      fetchAchievements(); // Refresh data\n    } catch (err) {\n      console.error('Error checking achievements:', err);\n      setError('Failed to check achievements');\n    }\n  };\n\n  const formatNumber = (num: number | undefined | null, decimals: number = 2): string => {\n    if (num === undefined || num === null || isNaN(num)) return '0';\n    return Number(num).toFixed(decimals);\n  };\n\n  const getAchievementIcon = (type: string) => {\n    switch (type.toLowerCase()) {\n      case 'exercise':\n      case 'workout':\n        return <FitnessCenter />;\n      case 'nutrition':\n      case 'meal':\n        return <Restaurant />;\n      case 'weight':\n        return <TrendingUp />;\n      case 'streak':\n        return <LocalFireDepartment />;\n      case 'time':\n        return <Timer />;\n      default:\n        return <EmojiEvents />;\n    }\n  };\n\n  const getAchievementColor = (type: string) => {\n    switch (type.toLowerCase()) {\n      case 'exercise':\n        return 'primary';\n      case 'nutrition':\n        return 'secondary';\n      case 'weight':\n        return 'success';\n      case 'streak':\n        return 'error';\n      case 'time':\n        return 'info';\n      default:\n        return 'warning';\n    }\n  };\n\n  const isAchievementEarned = (achievementId: number) => {\n    return userAchievements.some(ua => ua.achievementId === achievementId);\n  };\n\n  const getEarnedDate = (achievementId: number) => {\n    const earned = userAchievements.find(ua => ua.achievementId === achievementId);\n    return earned ? earned.earnedAt : null;\n  };\n\n  if (loading) {\n    return (\n      <Container maxWidth=\"lg\">\n        <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"400px\">\n          <CircularProgress />\n        </Box>\n      </Container>\n    );\n  }\n\n  const earnedCount = userAchievements.length;\n  const totalCount = achievements.length;\n  const stats = {\n    totalAchievements: totalCount,\n    earnedAchievements: earnedCount,\n    totalPoints: earnedCount * 100,\n  };\n\n  const earnedAchievements = achievements.filter(a => isAchievementEarned(a.id));\n  const availableAchievements = achievements.filter(a => !isAchievementEarned(a.id));\n\n  return (\n    <Container maxWidth=\"lg\">\n      <Box sx={{ mb: 4, display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n        <Box>\n          <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n            Achievements & Badges\n          </Typography>\n          <Typography variant=\"body1\" color=\"text.secondary\">\n            Track your milestones and celebrate your fitness journey\n          </Typography>\n        </Box>\n        <Button\n          variant=\"contained\"\n          startIcon={<Refresh />}\n          onClick={handleCheckAchievements}\n        >\n          Check Progress\n        </Button>\n      </Box>\n\n      {error && (\n        <Alert severity=\"error\" sx={{ mb: 3 }}>\n          {error}\n        </Alert>\n      )}\n\n      {/* Stats Overview */}\n      <Grid container spacing={3} sx={{ mb: 4 }}>\n        <Grid item xs={12} md={4}>\n          <Card>\n            <CardContent sx={{ textAlign: 'center' }}>\n              <EmojiEvents sx={{ fontSize: 48, color: 'warning.main', mb: 1 }} />\n              <Typography variant=\"h4\" color=\"warning.main\">\n                {stats.earnedAchievements}\n              </Typography>\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                Achievements Earned\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n\n        <Grid item xs={12} md={4}>\n          <Card>\n            <CardContent sx={{ textAlign: 'center' }}>\n              <Star sx={{ fontSize: 48, color: 'primary.main', mb: 1 }} />\n              <Typography variant=\"h4\" color=\"primary.main\">\n                {stats.totalPoints}\n              </Typography>\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                Total Points\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n\n        <Grid item xs={12} md={4}>\n          <Card>\n            <CardContent sx={{ textAlign: 'center' }}>\n              <Typography variant=\"h4\" color=\"success.main\">\n                {formatNumber((stats.earnedAchievements / stats.totalAchievements) * 100, 0)}%\n              </Typography>\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                Completion Rate\n              </Typography>\n              <LinearProgress\n                variant=\"determinate\"\n                value={(stats.earnedAchievements / stats.totalAchievements) * 100}\n                color=\"success\"\n                sx={{ mt: 1 }}\n              />\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n\n      {/* Achievements Grid */}\n      <Typography variant=\"h5\" gutterBottom>\n        All Achievements\n      </Typography>\n\n      {/* Tabs for filtering */}\n      <Box sx={{ mb: 3 }}>\n        <Tabs value={tabValue} onChange={(_, newValue) => setTabValue(newValue)}>\n          <Tab label={`All (${achievements.length})`} />\n          <Tab label={`Earned (${earnedCount})`} />\n          <Tab label={`Available (${availableAchievements.length})`} />\n        </Tabs>\n      </Box>\n\n      <Grid container spacing={3}>\n        {(tabValue === 0 ? achievements :\n          tabValue === 1 ? earnedAchievements :\n          availableAchievements).map((achievement) => {\n          const isEarned = isAchievementEarned(achievement.id);\n          const earnedDate = getEarnedDate(achievement.id);\n          const achievementType = achievement.type || 'general';\n          const color = getAchievementColor(achievementType);\n\n          return (\n            <Grid item xs={12} sm={6} md={4} key={achievement.id}>\n              <Card\n                sx={{\n                  height: '100%',\n                  opacity: isEarned ? 1 : 0.7,\n                  border: isEarned ? 2 : 0,\n                  borderColor: isEarned ? `${color}.main` : 'transparent',\n                }}\n              >\n                <CardContent>\n                  <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n                    <Badge\n                      badgeContent={isEarned ? <CheckCircle sx={{ fontSize: 16 }} /> : null}\n                      color=\"success\"\n                    >\n                      <Avatar\n                        sx={{\n                          bgcolor: `${color}.main`,\n                          width: 56,\n                          height: 56,\n                        }}\n                      >\n                        {getAchievementIcon(achievementType)}\n                      </Avatar>\n                    </Badge>\n                    <Box sx={{ ml: 2 }}>\n                      <Typography variant=\"h6\" component=\"div\">\n                        {achievement.title}\n                      </Typography>\n                      {isEarned && earnedDate && (\n                        <Typography variant=\"caption\" color=\"success.main\">\n                          Earned on {new Date(earnedDate).toLocaleDateString()}\n                        </Typography>\n                      )}\n                      {!isEarned && (\n                        <Chip\n                          icon={<Lock />}\n                          label=\"Locked\"\n                          size=\"small\"\n                          color=\"default\"\n                          variant=\"outlined\"\n                        />\n                      )}\n                    </Box>\n                  </Box>\n\n                  <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 2 }}>\n                    {achievement.description}\n                  </Typography>\n\n                  {achievement.targetValue && (\n                    <Box sx={{ mb: 2 }}>\n                      <Typography variant=\"caption\" color=\"text.secondary\">\n                        Target: {formatNumber(achievement.targetValue, 0)} {achievement.unit || ''}\n                      </Typography>\n                    </Box>\n                  )}\n\n                  {achievement.points && (\n                    <Box sx={{ mb: 2 }}>\n                      <Chip\n                        icon={<Star />}\n                        label={`${achievement.points} points`}\n                        size=\"small\"\n                        color=\"warning\"\n                        variant={isEarned ? \"filled\" : \"outlined\"}\n                      />\n                    </Box>\n                  )}\n\n                  {isEarned && (\n                    <Box sx={{\n                      textAlign: 'center',\n                      py: 1,\n                      backgroundColor: `${color}.light`,\n                      borderRadius: 1,\n                      mt: 1\n                    }}>\n                      <Typography variant=\"body2\" color={`${color}.dark`}>\n                        🎉 Achievement Unlocked!\n                      </Typography>\n                    </Box>\n                  )}\n                </CardContent>\n              </Card>\n            </Grid>\n          );\n        })}\n      </Grid>\n\n      {achievements.length === 0 && (\n        <Box sx={{ textAlign: 'center', py: 4 }}>\n          <EmojiEvents sx={{ fontSize: 64, color: 'text.secondary', mb: 2 }} />\n          <Typography variant=\"h6\" color=\"text.secondary\">\n            No achievements available yet\n          </Typography>\n          <Typography variant=\"body2\" color=\"text.secondary\">\n            Start your fitness journey to unlock achievements!\n          </Typography>\n        </Box>\n      )}\n    </Container>\n  );\n};\n\nexport default Achievements;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SACEC,SAAS,EACTC,UAAU,EACVC,GAAG,EACHC,IAAI,EACJC,WAAW,EACXC,IAAI,EACJC,KAAK,EACLC,MAAM,EACNC,cAAc,EACdC,KAAK,EACLC,gBAAgB,EAChBC,MAAM,EACNC,IAAI,EACJC,GAAG,EACHC,IAAI,QACC,eAAe;AACtB,SACEC,WAAW,EACXC,aAAa,EACbC,UAAU,EACVC,UAAU,EACVC,mBAAmB,EACnBC,KAAK,EACLC,IAAI,EACJC,IAAI,EACJC,WAAW,EACXC,OAAO,QACF,qBAAqB;AAC5B,SAASC,cAAc,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,YAAsB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGjC,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACkC,KAAK,EAAEC,QAAQ,CAAC,GAAGnC,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACoC,YAAY,EAAEC,eAAe,CAAC,GAAGrC,QAAQ,CAAQ,EAAE,CAAC;EAC3D,MAAM,CAACsC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGvC,QAAQ,CAAQ,EAAE,CAAC;EACnE,MAAM,CAACwC,QAAQ,EAAEC,WAAW,CAAC,GAAGzC,QAAQ,CAAC,CAAC,CAAC;EAE3CC,SAAS,CAAC,MAAM;IACdyC,iBAAiB,CAAC,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpCT,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAM,CAACU,eAAe,EAAEC,kBAAkB,CAAC,GAAG,MAAMC,OAAO,CAACC,GAAG,CAAC,CAC9DnB,cAAc,CAACoB,MAAM,CAAC,CAAC,EACvBpB,cAAc,CAACqB,mBAAmB,CAAC,CAAC,CACrC,CAAC;MAEFX,eAAe,CAACY,KAAK,CAACC,OAAO,CAACP,eAAe,CAAC,GAAGA,eAAe,GAAG,EAAE,CAAC;MACtEJ,mBAAmB,CAACU,KAAK,CAACC,OAAO,CAACN,kBAAkB,CAAC,GAAGA,kBAAkB,GAAG,EAAE,CAAC;IAClF,CAAC,CAAC,OAAOO,GAAG,EAAE;MACZC,OAAO,CAAClB,KAAK,CAAC,8BAA8B,EAAEiB,GAAG,CAAC;MAClDhB,QAAQ,CAAC,6BAA6B,CAAC;IACzC,CAAC,SAAS;MACRF,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMoB,uBAAuB,GAAG,MAAAA,CAAA,KAAY;IAC1C,IAAI;MACF,MAAM1B,cAAc,CAAC2B,iBAAiB,CAAC,CAAC;MACxCZ,iBAAiB,CAAC,CAAC,CAAC,CAAC;IACvB,CAAC,CAAC,OAAOS,GAAG,EAAE;MACZC,OAAO,CAAClB,KAAK,CAAC,8BAA8B,EAAEiB,GAAG,CAAC;MAClDhB,QAAQ,CAAC,8BAA8B,CAAC;IAC1C;EACF,CAAC;EAED,MAAMoB,YAAY,GAAGA,CAACC,GAA8B,EAAEC,QAAgB,GAAG,CAAC,KAAa;IACrF,IAAID,GAAG,KAAKE,SAAS,IAAIF,GAAG,KAAK,IAAI,IAAIG,KAAK,CAACH,GAAG,CAAC,EAAE,OAAO,GAAG;IAC/D,OAAOI,MAAM,CAACJ,GAAG,CAAC,CAACK,OAAO,CAACJ,QAAQ,CAAC;EACtC,CAAC;EAED,MAAMK,kBAAkB,GAAIC,IAAY,IAAK;IAC3C,QAAQA,IAAI,CAACC,WAAW,CAAC,CAAC;MACxB,KAAK,UAAU;MACf,KAAK,SAAS;QACZ,oBAAOnC,OAAA,CAACX,aAAa;UAAA+C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAC1B,KAAK,WAAW;MAChB,KAAK,MAAM;QACT,oBAAOvC,OAAA,CAACV,UAAU;UAAA8C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MACvB,KAAK,QAAQ;QACX,oBAAOvC,OAAA,CAACT,UAAU;UAAA6C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MACvB,KAAK,QAAQ;QACX,oBAAOvC,OAAA,CAACR,mBAAmB;UAAA4C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAChC,KAAK,MAAM;QACT,oBAAOvC,OAAA,CAACP,KAAK;UAAA2C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAClB;QACE,oBAAOvC,OAAA,CAACZ,WAAW;UAAAgD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;IAC1B;EACF,CAAC;EAED,MAAMC,mBAAmB,GAAIN,IAAY,IAAK;IAC5C,QAAQA,IAAI,CAACC,WAAW,CAAC,CAAC;MACxB,KAAK,UAAU;QACb,OAAO,SAAS;MAClB,KAAK,WAAW;QACd,OAAO,WAAW;MACpB,KAAK,QAAQ;QACX,OAAO,SAAS;MAClB,KAAK,QAAQ;QACX,OAAO,OAAO;MAChB,KAAK,MAAM;QACT,OAAO,MAAM;MACf;QACE,OAAO,SAAS;IACpB;EACF,CAAC;EAED,MAAMM,mBAAmB,GAAIC,aAAqB,IAAK;IACrD,OAAOjC,gBAAgB,CAACkC,IAAI,CAACC,EAAE,IAAIA,EAAE,CAACF,aAAa,KAAKA,aAAa,CAAC;EACxE,CAAC;EAED,MAAMG,aAAa,GAAIH,aAAqB,IAAK;IAC/C,MAAMI,MAAM,GAAGrC,gBAAgB,CAACsC,IAAI,CAACH,EAAE,IAAIA,EAAE,CAACF,aAAa,KAAKA,aAAa,CAAC;IAC9E,OAAOI,MAAM,GAAGA,MAAM,CAACE,QAAQ,GAAG,IAAI;EACxC,CAAC;EAED,IAAI7C,OAAO,EAAE;IACX,oBACEH,OAAA,CAAC3B,SAAS;MAAC4E,QAAQ,EAAC,IAAI;MAAAC,QAAA,eACtBlD,OAAA,CAACzB,GAAG;QAAC4E,OAAO,EAAC,MAAM;QAACC,cAAc,EAAC,QAAQ;QAACC,UAAU,EAAC,QAAQ;QAACC,SAAS,EAAC,OAAO;QAAAJ,QAAA,eAC/ElD,OAAA,CAACjB,gBAAgB;UAAAqD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAEhB;EAEA,MAAMgB,WAAW,GAAG9C,gBAAgB,CAAC+C,MAAM;EAC3C,MAAMC,UAAU,GAAGlD,YAAY,CAACiD,MAAM;EACtC,MAAME,KAAK,GAAG;IACZC,iBAAiB,EAAEF,UAAU;IAC7B1C,kBAAkB,EAAEwC,WAAW;IAC/BK,WAAW,EAAEL,WAAW,GAAG;EAC7B,CAAC;EAED,MAAMxC,kBAAkB,GAAGR,YAAY,CAACsD,MAAM,CAACC,CAAC,IAAIrB,mBAAmB,CAACqB,CAAC,CAACC,EAAE,CAAC,CAAC;EAC9E,MAAMC,qBAAqB,GAAGzD,YAAY,CAACsD,MAAM,CAACC,CAAC,IAAI,CAACrB,mBAAmB,CAACqB,CAAC,CAACC,EAAE,CAAC,CAAC;EAElF,oBACE/D,OAAA,CAAC3B,SAAS;IAAC4E,QAAQ,EAAC,IAAI;IAAAC,QAAA,gBACtBlD,OAAA,CAACzB,GAAG;MAAC0F,EAAE,EAAE;QAAEC,EAAE,EAAE,CAAC;QAAEf,OAAO,EAAE,MAAM;QAAEC,cAAc,EAAE,eAAe;QAAEC,UAAU,EAAE;MAAS,CAAE;MAAAH,QAAA,gBACzFlD,OAAA,CAACzB,GAAG;QAAA2E,QAAA,gBACFlD,OAAA,CAAC1B,UAAU;UAAC6F,OAAO,EAAC,IAAI;UAACC,SAAS,EAAC,IAAI;UAACC,YAAY;UAAAnB,QAAA,EAAC;QAErD;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eACbvC,OAAA,CAAC1B,UAAU;UAAC6F,OAAO,EAAC,OAAO;UAACG,KAAK,EAAC,gBAAgB;UAAApB,QAAA,EAAC;QAEnD;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV,CAAC,eACNvC,OAAA,CAAChB,MAAM;QACLmF,OAAO,EAAC,WAAW;QACnBI,SAAS,eAAEvE,OAAA,CAACH,OAAO;UAAAuC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAE;QACvBiC,OAAO,EAAEhD,uBAAwB;QAAA0B,QAAA,EAClC;MAED;QAAAd,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,EAELlC,KAAK,iBACJL,OAAA,CAAClB,KAAK;MAAC2F,QAAQ,EAAC,OAAO;MAACR,EAAE,EAAE;QAAEC,EAAE,EAAE;MAAE,CAAE;MAAAhB,QAAA,EACnC7C;IAAK;MAAA+B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CACR,eAGDvC,OAAA,CAACtB,IAAI;MAACgG,SAAS;MAACC,OAAO,EAAE,CAAE;MAACV,EAAE,EAAE;QAAEC,EAAE,EAAE;MAAE,CAAE;MAAAhB,QAAA,gBACxClD,OAAA,CAACtB,IAAI;QAACkG,IAAI;QAACC,EAAE,EAAE,EAAG;QAACC,EAAE,EAAE,CAAE;QAAA5B,QAAA,eACvBlD,OAAA,CAACxB,IAAI;UAAA0E,QAAA,eACHlD,OAAA,CAACvB,WAAW;YAACwF,EAAE,EAAE;cAAEc,SAAS,EAAE;YAAS,CAAE;YAAA7B,QAAA,gBACvClD,OAAA,CAACZ,WAAW;cAAC6E,EAAE,EAAE;gBAAEe,QAAQ,EAAE,EAAE;gBAAEV,KAAK,EAAE,cAAc;gBAAEJ,EAAE,EAAE;cAAE;YAAE;cAAA9B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eACnEvC,OAAA,CAAC1B,UAAU;cAAC6F,OAAO,EAAC,IAAI;cAACG,KAAK,EAAC,cAAc;cAAApB,QAAA,EAC1CQ,KAAK,CAAC3C;YAAkB;cAAAqB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACf,CAAC,eACbvC,OAAA,CAAC1B,UAAU;cAAC6F,OAAO,EAAC,OAAO;cAACG,KAAK,EAAC,gBAAgB;cAAApB,QAAA,EAAC;YAEnD;cAAAd,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAEPvC,OAAA,CAACtB,IAAI;QAACkG,IAAI;QAACC,EAAE,EAAE,EAAG;QAACC,EAAE,EAAE,CAAE;QAAA5B,QAAA,eACvBlD,OAAA,CAACxB,IAAI;UAAA0E,QAAA,eACHlD,OAAA,CAACvB,WAAW;YAACwF,EAAE,EAAE;cAAEc,SAAS,EAAE;YAAS,CAAE;YAAA7B,QAAA,gBACvClD,OAAA,CAACN,IAAI;cAACuE,EAAE,EAAE;gBAAEe,QAAQ,EAAE,EAAE;gBAAEV,KAAK,EAAE,cAAc;gBAAEJ,EAAE,EAAE;cAAE;YAAE;cAAA9B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eAC5DvC,OAAA,CAAC1B,UAAU;cAAC6F,OAAO,EAAC,IAAI;cAACG,KAAK,EAAC,cAAc;cAAApB,QAAA,EAC1CQ,KAAK,CAACE;YAAW;cAAAxB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACR,CAAC,eACbvC,OAAA,CAAC1B,UAAU;cAAC6F,OAAO,EAAC,OAAO;cAACG,KAAK,EAAC,gBAAgB;cAAApB,QAAA,EAAC;YAEnD;cAAAd,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAEPvC,OAAA,CAACtB,IAAI;QAACkG,IAAI;QAACC,EAAE,EAAE,EAAG;QAACC,EAAE,EAAE,CAAE;QAAA5B,QAAA,eACvBlD,OAAA,CAACxB,IAAI;UAAA0E,QAAA,eACHlD,OAAA,CAACvB,WAAW;YAACwF,EAAE,EAAE;cAAEc,SAAS,EAAE;YAAS,CAAE;YAAA7B,QAAA,gBACvClD,OAAA,CAAC1B,UAAU;cAAC6F,OAAO,EAAC,IAAI;cAACG,KAAK,EAAC,cAAc;cAAApB,QAAA,GAC1CxB,YAAY,CAAEgC,KAAK,CAAC3C,kBAAkB,GAAG2C,KAAK,CAACC,iBAAiB,GAAI,GAAG,EAAE,CAAC,CAAC,EAAC,GAC/E;YAAA;cAAAvB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eACbvC,OAAA,CAAC1B,UAAU;cAAC6F,OAAO,EAAC,OAAO;cAACG,KAAK,EAAC,gBAAgB;cAAApB,QAAA,EAAC;YAEnD;cAAAd,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eACbvC,OAAA,CAACnB,cAAc;cACbsF,OAAO,EAAC,aAAa;cACrBc,KAAK,EAAGvB,KAAK,CAAC3C,kBAAkB,GAAG2C,KAAK,CAACC,iBAAiB,GAAI,GAAI;cAClEW,KAAK,EAAC,SAAS;cACfL,EAAE,EAAE;gBAAEiB,EAAE,EAAE;cAAE;YAAE;cAAA9C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACf,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACS;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAGPvC,OAAA,CAAC1B,UAAU;MAAC6F,OAAO,EAAC,IAAI;MAACE,YAAY;MAAAnB,QAAA,EAAC;IAEtC;MAAAd,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eAGbvC,OAAA,CAACzB,GAAG;MAAC0F,EAAE,EAAE;QAAEC,EAAE,EAAE;MAAE,CAAE;MAAAhB,QAAA,eACjBlD,OAAA,CAACf,IAAI;QAACgG,KAAK,EAAEtE,QAAS;QAACwE,QAAQ,EAAEA,CAACC,CAAC,EAAEC,QAAQ,KAAKzE,WAAW,CAACyE,QAAQ,CAAE;QAAAnC,QAAA,gBACtElD,OAAA,CAACd,GAAG;UAACoG,KAAK,EAAE,QAAQ/E,YAAY,CAACiD,MAAM;QAAI;UAAApB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC9CvC,OAAA,CAACd,GAAG;UAACoG,KAAK,EAAE,WAAW/B,WAAW;QAAI;UAAAnB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACzCvC,OAAA,CAACd,GAAG;UAACoG,KAAK,EAAE,cAActB,qBAAqB,CAACR,MAAM;QAAI;UAAApB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,eAENvC,OAAA,CAACtB,IAAI;MAACgG,SAAS;MAACC,OAAO,EAAE,CAAE;MAAAzB,QAAA,EACxB,CAACvC,QAAQ,KAAK,CAAC,GAAGJ,YAAY,GAC7BI,QAAQ,KAAK,CAAC,GAAGI,kBAAkB,GACnCiD,qBAAqB,EAAEuB,GAAG,CAAEC,WAAW,IAAK;QAC5C,MAAMC,QAAQ,GAAGhD,mBAAmB,CAAC+C,WAAW,CAACzB,EAAE,CAAC;QACpD,MAAM2B,UAAU,GAAG7C,aAAa,CAAC2C,WAAW,CAACzB,EAAE,CAAC;QAChD,MAAM4B,eAAe,GAAGH,WAAW,CAACtD,IAAI,IAAI,SAAS;QACrD,MAAMoC,KAAK,GAAG9B,mBAAmB,CAACmD,eAAe,CAAC;QAElD,oBACE3F,OAAA,CAACtB,IAAI;UAACkG,IAAI;UAACC,EAAE,EAAE,EAAG;UAACe,EAAE,EAAE,CAAE;UAACd,EAAE,EAAE,CAAE;UAAA5B,QAAA,eAC9BlD,OAAA,CAACxB,IAAI;YACHyF,EAAE,EAAE;cACF4B,MAAM,EAAE,MAAM;cACdC,OAAO,EAAEL,QAAQ,GAAG,CAAC,GAAG,GAAG;cAC3BM,MAAM,EAAEN,QAAQ,GAAG,CAAC,GAAG,CAAC;cACxBO,WAAW,EAAEP,QAAQ,GAAG,GAAGnB,KAAK,OAAO,GAAG;YAC5C,CAAE;YAAApB,QAAA,eAEFlD,OAAA,CAACvB,WAAW;cAAAyE,QAAA,gBACVlD,OAAA,CAACzB,GAAG;gBAAC0F,EAAE,EAAE;kBAAEd,OAAO,EAAE,MAAM;kBAAEE,UAAU,EAAE,QAAQ;kBAAEa,EAAE,EAAE;gBAAE,CAAE;gBAAAhB,QAAA,gBACxDlD,OAAA,CAACrB,KAAK;kBACJsH,YAAY,EAAER,QAAQ,gBAAGzF,OAAA,CAACJ,WAAW;oBAACqE,EAAE,EAAE;sBAAEe,QAAQ,EAAE;oBAAG;kBAAE;oBAAA5C,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE,CAAC,GAAG,IAAK;kBACtE+B,KAAK,EAAC,SAAS;kBAAApB,QAAA,eAEflD,OAAA,CAACpB,MAAM;oBACLqF,EAAE,EAAE;sBACFiC,OAAO,EAAE,GAAG5B,KAAK,OAAO;sBACxB6B,KAAK,EAAE,EAAE;sBACTN,MAAM,EAAE;oBACV,CAAE;oBAAA3C,QAAA,EAEDjB,kBAAkB,CAAC0D,eAAe;kBAAC;oBAAAvD,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAC9B;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACJ,CAAC,eACRvC,OAAA,CAACzB,GAAG;kBAAC0F,EAAE,EAAE;oBAAEmC,EAAE,EAAE;kBAAE,CAAE;kBAAAlD,QAAA,gBACjBlD,OAAA,CAAC1B,UAAU;oBAAC6F,OAAO,EAAC,IAAI;oBAACC,SAAS,EAAC,KAAK;oBAAAlB,QAAA,EACrCsC,WAAW,CAACa;kBAAK;oBAAAjE,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACR,CAAC,EACZkD,QAAQ,IAAIC,UAAU,iBACrB1F,OAAA,CAAC1B,UAAU;oBAAC6F,OAAO,EAAC,SAAS;oBAACG,KAAK,EAAC,cAAc;oBAAApB,QAAA,GAAC,YACvC,EAAC,IAAIoD,IAAI,CAACZ,UAAU,CAAC,CAACa,kBAAkB,CAAC,CAAC;kBAAA;oBAAAnE,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAC1C,CACb,EACA,CAACkD,QAAQ,iBACRzF,OAAA,CAACb,IAAI;oBACHqH,IAAI,eAAExG,OAAA,CAACL,IAAI;sBAAAyC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAE,CAAE;oBACf+C,KAAK,EAAC,QAAQ;oBACdmB,IAAI,EAAC,OAAO;oBACZnC,KAAK,EAAC,SAAS;oBACfH,OAAO,EAAC;kBAAU;oBAAA/B,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACnB,CACF;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACE,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH,CAAC,eAENvC,OAAA,CAAC1B,UAAU;gBAAC6F,OAAO,EAAC,OAAO;gBAACG,KAAK,EAAC,gBAAgB;gBAACL,EAAE,EAAE;kBAAEC,EAAE,EAAE;gBAAE,CAAE;gBAAAhB,QAAA,EAC9DsC,WAAW,CAACkB;cAAW;gBAAAtE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACd,CAAC,EAEZiD,WAAW,CAACmB,WAAW,iBACtB3G,OAAA,CAACzB,GAAG;gBAAC0F,EAAE,EAAE;kBAAEC,EAAE,EAAE;gBAAE,CAAE;gBAAAhB,QAAA,eACjBlD,OAAA,CAAC1B,UAAU;kBAAC6F,OAAO,EAAC,SAAS;kBAACG,KAAK,EAAC,gBAAgB;kBAAApB,QAAA,GAAC,UAC3C,EAACxB,YAAY,CAAC8D,WAAW,CAACmB,WAAW,EAAE,CAAC,CAAC,EAAC,GAAC,EAACnB,WAAW,CAACoB,IAAI,IAAI,EAAE;gBAAA;kBAAAxE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAChE;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACV,CACN,EAEAiD,WAAW,CAACqB,MAAM,iBACjB7G,OAAA,CAACzB,GAAG;gBAAC0F,EAAE,EAAE;kBAAEC,EAAE,EAAE;gBAAE,CAAE;gBAAAhB,QAAA,eACjBlD,OAAA,CAACb,IAAI;kBACHqH,IAAI,eAAExG,OAAA,CAACN,IAAI;oBAAA0C,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE,CAAE;kBACf+C,KAAK,EAAE,GAAGE,WAAW,CAACqB,MAAM,SAAU;kBACtCJ,IAAI,EAAC,OAAO;kBACZnC,KAAK,EAAC,SAAS;kBACfH,OAAO,EAAEsB,QAAQ,GAAG,QAAQ,GAAG;gBAAW;kBAAArD,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC3C;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACC,CACN,EAEAkD,QAAQ,iBACPzF,OAAA,CAACzB,GAAG;gBAAC0F,EAAE,EAAE;kBACPc,SAAS,EAAE,QAAQ;kBACnB+B,EAAE,EAAE,CAAC;kBACLC,eAAe,EAAE,GAAGzC,KAAK,QAAQ;kBACjC0C,YAAY,EAAE,CAAC;kBACf9B,EAAE,EAAE;gBACN,CAAE;gBAAAhC,QAAA,eACAlD,OAAA,CAAC1B,UAAU;kBAAC6F,OAAO,EAAC,OAAO;kBAACG,KAAK,EAAE,GAAGA,KAAK,OAAQ;kBAAApB,QAAA,EAAC;gBAEpD;kBAAAd,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAY;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACV,CACN;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACU;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACV;QAAC,GApF6BiD,WAAW,CAACzB,EAAE;UAAA3B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAqF9C,CAAC;MAEX,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,EAENhC,YAAY,CAACiD,MAAM,KAAK,CAAC,iBACxBxD,OAAA,CAACzB,GAAG;MAAC0F,EAAE,EAAE;QAAEc,SAAS,EAAE,QAAQ;QAAE+B,EAAE,EAAE;MAAE,CAAE;MAAA5D,QAAA,gBACtClD,OAAA,CAACZ,WAAW;QAAC6E,EAAE,EAAE;UAAEe,QAAQ,EAAE,EAAE;UAAEV,KAAK,EAAE,gBAAgB;UAAEJ,EAAE,EAAE;QAAE;MAAE;QAAA9B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACrEvC,OAAA,CAAC1B,UAAU;QAAC6F,OAAO,EAAC,IAAI;QAACG,KAAK,EAAC,gBAAgB;QAAApB,QAAA,EAAC;MAEhD;QAAAd,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eACbvC,OAAA,CAAC1B,UAAU;QAAC6F,OAAO,EAAC,OAAO;QAACG,KAAK,EAAC,gBAAgB;QAAApB,QAAA,EAAC;MAEnD;QAAAd,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACQ,CAAC;AAEhB,CAAC;AAACrC,EAAA,CAzTID,YAAsB;AAAAgH,EAAA,GAAtBhH,YAAsB;AA2T5B,eAAeA,YAAY;AAAC,IAAAgH,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}