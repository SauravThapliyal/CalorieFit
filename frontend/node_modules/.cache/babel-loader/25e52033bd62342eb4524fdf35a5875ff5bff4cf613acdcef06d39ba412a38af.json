{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import{authApi}from'../services/api';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext(undefined);export const useAuth=()=>{const context=useContext(AuthContext);if(context===undefined){throw new Error('useAuth must be used within an AuthProvider');}return context;};export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[loading,setLoading]=useState(true);useEffect(()=>{const token=localStorage.getItem('token');const userData=localStorage.getItem('user');if(token&&userData){try{const parsedUser=JSON.parse(userData);setUser(parsedUser);}catch(error){console.error('Error parsing user data:',error);localStorage.removeItem('token');localStorage.removeItem('user');}}setLoading(false);},[]);const login=async data=>{try{const response=await authApi.login(data);const userData={id:response.userId,email:response.email,firstName:response.firstName,lastName:response.lastName,hasProfile:response.hasProfile};localStorage.setItem('token',response.token);localStorage.setItem('user',JSON.stringify(userData));setUser(userData);}catch(error){throw error;}};const register=async data=>{try{const response=await authApi.register(data);const userData={id:response.userId,email:response.email,firstName:response.firstName,lastName:response.lastName,hasProfile:response.hasProfile};localStorage.setItem('token',response.token);localStorage.setItem('user',JSON.stringify(userData));setUser(userData);}catch(error){throw error;}};const logout=()=>{localStorage.removeItem('token');localStorage.removeItem('user');setUser(null);};const value={user,loading,login,register,logout,isAuthenticated:!!user};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","authApi","jsx","_jsx","AuthContext","undefined","useAuth","context","Error","AuthProvider","_ref","children","user","setUser","loading","setLoading","token","localStorage","getItem","userData","parsedUser","JSON","parse","error","console","removeItem","login","data","response","id","userId","email","firstName","lastName","hasProfile","setItem","stringify","register","logout","value","isAuthenticated","Provider"],"sources":["C:/Users/GL-Saurav/Desktop/new/new/frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\nimport { User, AuthResponse, LoginRequest, RegisterRequest } from '../types';\nimport { authApi } from '../services/api';\n\ninterface AuthContextType {\n  user: User | null;\n  loading: boolean;\n  login: (data: LoginRequest) => Promise<void>;\n  register: (data: RegisterRequest) => Promise<void>;\n  logout: () => void;\n  isAuthenticated: boolean;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\ninterface AuthProviderProps {\n  children: ReactNode;\n}\n\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    const userData = localStorage.getItem('user');\n    \n    if (token && userData) {\n      try {\n        const parsedUser = JSON.parse(userData);\n        setUser(parsedUser);\n      } catch (error) {\n        console.error('Error parsing user data:', error);\n        localStorage.removeItem('token');\n        localStorage.removeItem('user');\n      }\n    }\n    \n    setLoading(false);\n  }, []);\n\n  const login = async (data: LoginRequest) => {\n    try {\n      const response: AuthResponse = await authApi.login(data);\n      \n      const userData: User = {\n        id: response.userId,\n        email: response.email,\n        firstName: response.firstName,\n        lastName: response.lastName,\n        hasProfile: response.hasProfile,\n      };\n\n      localStorage.setItem('token', response.token);\n      localStorage.setItem('user', JSON.stringify(userData));\n      setUser(userData);\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  const register = async (data: RegisterRequest) => {\n    try {\n      const response: AuthResponse = await authApi.register(data);\n      \n      const userData: User = {\n        id: response.userId,\n        email: response.email,\n        firstName: response.firstName,\n        lastName: response.lastName,\n        hasProfile: response.hasProfile,\n      };\n\n      localStorage.setItem('token', response.token);\n      localStorage.setItem('user', JSON.stringify(userData));\n      setUser(userData);\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    setUser(null);\n  };\n\n  const value: AuthContextType = {\n    user,\n    loading,\n    login,\n    register,\n    logout,\n    isAuthenticated: !!user,\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}