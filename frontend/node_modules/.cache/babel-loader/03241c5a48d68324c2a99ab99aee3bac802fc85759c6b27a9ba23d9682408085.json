{"ast":null,"code":"import axios from'axios';const API_BASE_URL='http://localhost:5263/api';const api=axios.create({baseURL:API_BASE_URL,headers:{'Content-Type':'application/json'}});// Add token to requests if available\napi.interceptors.request.use(config=>{const token=localStorage.getItem('token');if(token){config.headers.Authorization=\"Bearer \".concat(token);}return config;});// Handle token expiration\napi.interceptors.response.use(response=>response,error=>{var _error$response;if(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===401){localStorage.removeItem('token');localStorage.removeItem('user');window.location.href='/login';}return Promise.reject(error);});export const authApi={login:async data=>{const response=await api.post('/auth/login',data);return response.data;},register:async data=>{const response=await api.post('/auth/register',data);return response.data;}};export const userProfileApi={getProfile:async()=>{const response=await api.get('/userprofile');return response.data;},createProfile:async data=>{const response=await api.post('/userprofile',data);return response.data;},updateProfile:async data=>{const response=await api.put('/userprofile',data);return response.data;}};export const exerciseApi={getAll:async params=>{const response=await api.get('/exercise',{params});return response.data;},getById:async id=>{const response=await api.get(\"/exercise/\".concat(id));return response.data;},logExercise:async data=>{const response=await api.post('/exercise/log',data);return response.data;},getExerciseLogs:async date=>{const response=await api.get('/exercise/logs',{params:{date}});return response.data;}};export const foodApi={getAll:async params=>{const response=await api.get('/food',{params});return response.data;},getById:async id=>{const response=await api.get(\"/food/\".concat(id));return response.data;},getCategories:async()=>{const response=await api.get('/food/categories');return response.data;},create:async food=>{const response=await api.post('/food',food);return response.data;}};export const dietLogApi={getDietLogs:async date=>{const response=await api.get('/dietlog',{params:{date}});return response.data;},logFood:async data=>{const response=await api.post('/dietlog',data);return response.data;},updateDietLog:async(id,data)=>{const response=await api.put(\"/dietlog/\".concat(id),data);return response.data;},deleteDietLog:async id=>{const response=await api.delete(\"/dietlog/\".concat(id));return response.data;},getDailySummary:async date=>{const response=await api.get('/dietlog/daily-summary',{params:{date}});return response.data;}};export const achievementApi={getAll:async()=>{const response=await api.get('/achievement');return response.data;},getUserAchievements:async()=>{const response=await api.get('/achievement/user');return response.data;},checkAchievements:async()=>{const response=await api.post('/achievement/check');return response.data;}};export const streakApi={getCurrentStreak:async()=>{const response=await api.get('/streak/current');return response.data;},updateStreak:async()=>{const response=await api.post('/streak/update');return response.data;},getStreakCalendar:async(year,month)=>{const response=await api.get('/streak/calendar',{params:{year,month}});return response.data;},getStreakStats:async()=>{const response=await api.get('/streak/stats');return response.data;}};export const weightApi={getWeightRecords:async days=>{const response=await api.get('/weight',{params:{days}});return response.data;},logWeight:async data=>{const response=await api.post('/weight',data);return response.data;},getWeightProgress:async()=>{const response=await api.get('/weight/progress');return response.data;},getLatestWeight:async()=>{const response=await api.get('/weight/latest');return response.data;}};export default api;","map":{"version":3,"names":["axios","API_BASE_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","concat","response","error","_error$response","status","removeItem","window","location","href","Promise","reject","authApi","login","data","post","register","userProfileApi","getProfile","get","createProfile","updateProfile","put","exerciseApi","getAll","params","getById","id","logExercise","getExerciseLogs","date","foodApi","getCategories","food","dietLogApi","getDietLogs","logFood","updateDietLog","deleteDietLog","delete","getDailySummary","achievementApi","getUserAchievements","checkAchievements","streakApi","getCurrentStreak","updateStreak","getStreakCalendar","year","month","getStreakStats","weightApi","getWeightRecords","days","logWeight","getWeightProgress","getLatestWeight"],"sources":["C:/Users/GL-Saurav/Desktop/new/new/frontend/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\nimport {\n  AuthResponse,\n  LoginRequest,\n  RegisterRequest,\n  UserProfile,\n  CreateUserProfileRequest,\n  Exercise,\n  Food,\n  CreateFoodRequest,\n  DietLog,\n  CreateDietLogRequest,\n} from '../types';\n\nconst API_BASE_URL = 'http://localhost:5263/api';\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Add token to requests if available\napi.interceptors.request.use((config) => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Handle token expiration\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response?.status === 401) {\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\nexport const authApi = {\n  login: async (data: LoginRequest): Promise<AuthResponse> => {\n    const response = await api.post('/auth/login', data);\n    return response.data;\n  },\n\n  register: async (data: RegisterRequest): Promise<AuthResponse> => {\n    const response = await api.post('/auth/register', data);\n    return response.data;\n  },\n};\n\nexport const userProfileApi = {\n  getProfile: async (): Promise<UserProfile> => {\n    const response = await api.get('/userprofile');\n    return response.data;\n  },\n\n  createProfile: async (data: CreateUserProfileRequest): Promise<UserProfile> => {\n    const response = await api.post('/userprofile', data);\n    return response.data;\n  },\n\n  updateProfile: async (data: CreateUserProfileRequest): Promise<UserProfile> => {\n    const response = await api.put('/userprofile', data);\n    return response.data;\n  },\n};\n\nexport const exerciseApi = {\n  getAll: async (params?: any): Promise<any> => {\n    const response = await api.get('/exercise', { params });\n    return response.data;\n  },\n\n  getById: async (id: number): Promise<Exercise> => {\n    const response = await api.get(`/exercise/${id}`);\n    return response.data;\n  },\n\n  logExercise: async (data: any): Promise<any> => {\n    const response = await api.post('/exercise/log', data);\n    return response.data;\n  },\n\n  getExerciseLogs: async (date?: string): Promise<any> => {\n    const response = await api.get('/exercise/logs', { params: { date } });\n    return response.data;\n  },\n};\n\nexport const foodApi = {\n  getAll: async (params?: any): Promise<Food[]> => {\n    const response = await api.get('/food', { params });\n    return response.data;\n  },\n\n  getById: async (id: number): Promise<Food> => {\n    const response = await api.get(`/food/${id}`);\n    return response.data;\n  },\n\n  getCategories: async (): Promise<string[]> => {\n    const response = await api.get('/food/categories');\n    return response.data;\n  },\n\n  create: async (food: CreateFoodRequest): Promise<Food> => {\n    const response = await api.post('/food', food);\n    return response.data;\n  },\n};\n\nexport const dietLogApi = {\n  getDietLogs: async (date?: string): Promise<any> => {\n    const response = await api.get('/dietlog', { params: { date } });\n    return response.data;\n  },\n\n  logFood: async (data: any): Promise<any> => {\n    const response = await api.post('/dietlog', data);\n    return response.data;\n  },\n\n  updateDietLog: async (id: number, data: any): Promise<any> => {\n    const response = await api.put(`/dietlog/${id}`, data);\n    return response.data;\n  },\n\n  deleteDietLog: async (id: number): Promise<any> => {\n    const response = await api.delete(`/dietlog/${id}`);\n    return response.data;\n  },\n\n  getDailySummary: async (date?: string): Promise<any> => {\n    const response = await api.get('/dietlog/daily-summary', { params: { date } });\n    return response.data;\n  },\n};\n\nexport const achievementApi = {\n  getAll: async (): Promise<any> => {\n    const response = await api.get('/achievement');\n    return response.data;\n  },\n\n  getUserAchievements: async (): Promise<any> => {\n    const response = await api.get('/achievement/user');\n    return response.data;\n  },\n\n  checkAchievements: async (): Promise<any> => {\n    const response = await api.post('/achievement/check');\n    return response.data;\n  },\n};\n\nexport const streakApi = {\n  getCurrentStreak: async (): Promise<any> => {\n    const response = await api.get('/streak/current');\n    return response.data;\n  },\n\n  updateStreak: async (): Promise<any> => {\n    const response = await api.post('/streak/update');\n    return response.data;\n  },\n\n  getStreakCalendar: async (year?: number, month?: number): Promise<any> => {\n    const response = await api.get('/streak/calendar', { params: { year, month } });\n    return response.data;\n  },\n\n  getStreakStats: async (): Promise<any> => {\n    const response = await api.get('/streak/stats');\n    return response.data;\n  },\n};\n\nexport const weightApi = {\n  getWeightRecords: async (days?: number): Promise<any> => {\n    const response = await api.get('/weight', { params: { days } });\n    return response.data;\n  },\n\n  logWeight: async (data: any): Promise<any> => {\n    const response = await api.post('/weight', data);\n    return response.data;\n  },\n\n  getWeightProgress: async (): Promise<any> => {\n    const response = await api.get('/weight/progress');\n    return response.data;\n  },\n\n  getLatestWeight: async (): Promise<any> => {\n    const response = await api.get('/weight/latest');\n    return response.data;\n  },\n};\n\nexport default api;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}