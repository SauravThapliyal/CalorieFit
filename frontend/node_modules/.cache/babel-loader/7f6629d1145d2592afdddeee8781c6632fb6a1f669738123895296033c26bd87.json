{"ast":null,"code":"import React from'react';import{Card,CardContent,CardMedia,Typography,Box,Chip,Button,IconButton,Tooltip}from'@mui/material';import{AccessTime,LocalFireDepartment,Info,PlayArrow}from'@mui/icons-material';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ExerciseCard=_ref=>{let{exercise,onStartExercise,onViewDetails}=_ref;const getDifficultyColor=difficulty=>{const difficultyStr=typeof difficulty==='number'?getDifficultyText(difficulty):difficulty;switch(difficultyStr.toLowerCase()){case'beginner':return'success';case'intermediate':return'warning';case'advanced':return'error';default:return'default';}};const getDifficultyText=difficulty=>{if(typeof difficulty==='string')return difficulty;switch(difficulty){case 1:return'Beginner';case 2:return'Intermediate';case 3:return'Advanced';default:return'Unknown';}};const getTypeText=type=>{if(typeof type==='string')return type;switch(type){case 1:return'Cardio';case 2:return'Strength';case 3:return'Flexibility';case 4:return'HIIT';default:return'Other';}};const getLocationText=location=>{if(typeof location==='string')return location;switch(location){case 1:return'Home';case 2:return'Gym';case 3:return'Outdoor';case 4:return'Both';default:return'Any';}};return/*#__PURE__*/_jsxs(Card,{sx:{height:'100%',display:'flex',flexDirection:'column'},children:[/*#__PURE__*/_jsx(CardMedia,{component:\"img\",height:\"200\",image:exercise.imageUrl||'/images/exercises/default.jpg',alt:exercise.name,sx:{objectFit:'cover'}}),/*#__PURE__*/_jsxs(CardContent,{sx:{flexGrow:1},children:[/*#__PURE__*/_jsx(Typography,{gutterBottom:true,variant:\"h6\",component:\"h2\",children:exercise.name}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",sx:{mb:2},children:exercise.description}),/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',flexWrap:'wrap',gap:1,mb:2},children:[/*#__PURE__*/_jsx(Chip,{label:getDifficultyText(exercise.difficulty),color:getDifficultyColor(exercise.difficulty),size:\"small\"}),/*#__PURE__*/_jsx(Chip,{label:getTypeText(exercise.type),variant:\"outlined\",size:\"small\"}),/*#__PURE__*/_jsx(Chip,{label:getLocationText(exercise.location),variant:\"outlined\",size:\"small\"})]}),/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center',gap:2,mb:2},children:[/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center',gap:0.5},children:[/*#__PURE__*/_jsx(AccessTime,{fontSize:\"small\",color:\"action\"}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",color:\"text.secondary\",children:[exercise.durationMinutes,\" min\"]})]}),/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center',gap:0.5},children:[/*#__PURE__*/_jsx(LocalFireDepartment,{fontSize:\"small\",color:\"action\"}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",color:\"text.secondary\",children:[exercise.caloriesBurnedPerMinute*exercise.durationMinutes,\" cal\"]})]})]}),/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',flexWrap:'wrap',gap:0.5,mb:2},children:[exercise.muscleGroups.slice(0,3).map((muscle,index)=>/*#__PURE__*/_jsx(Chip,{label:muscle,size:\"small\",variant:\"outlined\",sx:{fontSize:'0.7rem'}},index)),exercise.muscleGroups.length>3&&/*#__PURE__*/_jsx(Chip,{label:\"+\".concat(exercise.muscleGroups.length-3,\" more\"),size:\"small\",variant:\"outlined\",sx:{fontSize:'0.7rem'}})]}),/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',justifyContent:'space-between',alignItems:'center'},children:[/*#__PURE__*/_jsx(Tooltip,{title:\"View Details\",children:/*#__PURE__*/_jsx(IconButton,{onClick:()=>onViewDetails===null||onViewDetails===void 0?void 0:onViewDetails(exercise),size:\"small\",children:/*#__PURE__*/_jsx(Info,{})})}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",startIcon:/*#__PURE__*/_jsx(PlayArrow,{}),onClick:()=>onStartExercise===null||onStartExercise===void 0?void 0:onStartExercise(exercise),size:\"small\",children:\"Start\"})]})]})]});};export default ExerciseCard;","map":{"version":3,"names":["React","Card","CardContent","CardMedia","Typography","Box","Chip","Button","IconButton","Tooltip","AccessTime","LocalFireDepartment","Info","PlayArrow","jsx","_jsx","jsxs","_jsxs","ExerciseCard","_ref","exercise","onStartExercise","onViewDetails","getDifficultyColor","difficulty","difficultyStr","getDifficultyText","toLowerCase","getTypeText","type","getLocationText","location","sx","height","display","flexDirection","children","component","image","imageUrl","alt","name","objectFit","flexGrow","gutterBottom","variant","color","mb","description","flexWrap","gap","label","size","alignItems","fontSize","durationMinutes","caloriesBurnedPerMinute","muscleGroups","slice","map","muscle","index","length","concat","justifyContent","title","onClick","startIcon"],"sources":["C:/Users/GL-Saurav/Desktop/new/new/frontend/src/components/ExerciseCard.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Card,\n  CardContent,\n  CardMedia,\n  Typography,\n  Box,\n  Chip,\n  Button,\n  IconButton,\n  Tooltip,\n} from '@mui/material';\nimport {\n  AccessTime,\n  LocalFireDepartment,\n  Info,\n  PlayArrow,\n} from '@mui/icons-material';\nimport { Exercise } from '../types';\n\ninterface ExerciseCardProps {\n  exercise: Exercise;\n  onStartExercise?: (exercise: Exercise) => void;\n  onViewDetails?: (exercise: Exercise) => void;\n}\n\nconst ExerciseCard: React.FC<ExerciseCardProps> = ({\n  exercise,\n  onStartExercise,\n  onViewDetails,\n}) => {\n  const getDifficultyColor = (difficulty: string | number) => {\n    const difficultyStr = typeof difficulty === 'number' ? getDifficultyText(difficulty) : difficulty;\n    switch (difficultyStr.toLowerCase()) {\n      case 'beginner': return 'success';\n      case 'intermediate': return 'warning';\n      case 'advanced': return 'error';\n      default: return 'default';\n    }\n  };\n\n  const getDifficultyText = (difficulty: string | number) => {\n    if (typeof difficulty === 'string') return difficulty;\n    switch (difficulty) {\n      case 1: return 'Beginner';\n      case 2: return 'Intermediate';\n      case 3: return 'Advanced';\n      default: return 'Unknown';\n    }\n  };\n\n  const getTypeText = (type: string | number) => {\n    if (typeof type === 'string') return type;\n    switch (type) {\n      case 1: return 'Cardio';\n      case 2: return 'Strength';\n      case 3: return 'Flexibility';\n      case 4: return 'HIIT';\n      default: return 'Other';\n    }\n  };\n\n  const getLocationText = (location: string | number) => {\n    if (typeof location === 'string') return location;\n    switch (location) {\n      case 1: return 'Home';\n      case 2: return 'Gym';\n      case 3: return 'Outdoor';\n      case 4: return 'Both';\n      default: return 'Any';\n    }\n  };\n\n  return (\n    <Card sx={{ height: '100%', display: 'flex', flexDirection: 'column' }}>\n      <CardMedia\n        component=\"img\"\n        height=\"200\"\n        image={exercise.imageUrl || '/images/exercises/default.jpg'}\n        alt={exercise.name}\n        sx={{ objectFit: 'cover' }}\n      />\n      <CardContent sx={{ flexGrow: 1 }}>\n        <Typography gutterBottom variant=\"h6\" component=\"h2\">\n          {exercise.name}\n        </Typography>\n\n        <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 2 }}>\n          {exercise.description}\n        </Typography>\n\n        <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1, mb: 2 }}>\n          <Chip\n            label={getDifficultyText(exercise.difficulty)}\n            color={getDifficultyColor(exercise.difficulty) as any}\n            size=\"small\"\n          />\n          <Chip\n            label={getTypeText(exercise.type)}\n            variant=\"outlined\"\n            size=\"small\"\n          />\n          <Chip\n            label={getLocationText(exercise.location)}\n            variant=\"outlined\"\n            size=\"small\"\n          />\n        </Box>\n\n        <Box sx={{ display: 'flex', alignItems: 'center', gap: 2, mb: 2 }}>\n          <Box sx={{ display: 'flex', alignItems: 'center', gap: 0.5 }}>\n            <AccessTime fontSize=\"small\" color=\"action\" />\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              {exercise.durationMinutes} min\n            </Typography>\n          </Box>\n          <Box sx={{ display: 'flex', alignItems: 'center', gap: 0.5 }}>\n            <LocalFireDepartment fontSize=\"small\" color=\"action\" />\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              {exercise.caloriesBurnedPerMinute * exercise.durationMinutes} cal\n            </Typography>\n          </Box>\n        </Box>\n\n        <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5, mb: 2 }}>\n          {exercise.muscleGroups.slice(0, 3).map((muscle, index) => (\n            <Chip\n              key={index}\n              label={muscle}\n              size=\"small\"\n              variant=\"outlined\"\n              sx={{ fontSize: '0.7rem' }}\n            />\n          ))}\n          {exercise.muscleGroups.length > 3 && (\n            <Chip\n              label={`+${exercise.muscleGroups.length - 3} more`}\n              size=\"small\"\n              variant=\"outlined\"\n              sx={{ fontSize: '0.7rem' }}\n            />\n          )}\n        </Box>\n\n        <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n          <Tooltip title=\"View Details\">\n            <IconButton onClick={() => onViewDetails?.(exercise)} size=\"small\">\n              <Info />\n            </IconButton>\n          </Tooltip>\n\n          <Button\n            variant=\"contained\"\n            startIcon={<PlayArrow />}\n            onClick={() => onStartExercise?.(exercise)}\n            size=\"small\"\n          >\n            Start\n          </Button>\n        </Box>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default ExerciseCard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}