{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GL-Saurav\\\\Desktop\\\\new\\\\new\\\\frontend\\\\src\\\\pages\\\\Nutrition.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Typography, Box, Grid, Card, CardContent, Button, Dialog, DialogTitle, DialogContent, DialogActions, TextField, FormControl, InputLabel, Select, MenuItem, Chip, LinearProgress, Alert, CircularProgress, Autocomplete, IconButton, List, ListItem, ListItemText, ListItemSecondaryAction } from '@mui/material';\nimport { Add, Restaurant, LocalFireDepartment, FitnessCenter, Delete } from '@mui/icons-material';\nimport { foodApi, dietLogApi } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mealTypes = ['Breakfast', 'Lunch', 'Dinner', 'Snack', 'Other'];\nconst Nutrition = () => {\n  _s();\n  var _dailySummary$goals, _dailySummary$progres, _dailySummary$progres2, _dailySummary$goals2, _dailySummary$progres3, _dailySummary$progres4;\n  const [foods, setFoods] = useState([]);\n  const [dietLogs, setDietLogs] = useState([]);\n  const [dailySummary, setDailySummary] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [selectedDate, setSelectedDate] = useState(new Date().toISOString().split('T')[0]);\n\n  // Dialog states\n  const [addFoodDialogOpen, setAddFoodDialogOpen] = useState(false);\n  const [selectedFood, setSelectedFood] = useState(null);\n  const [quantity, setQuantity] = useState('100');\n  const [unit, setUnit] = useState('grams');\n  const [mealType, setMealType] = useState('Breakfast');\n  const [searchTerm, setSearchTerm] = useState('');\n  useEffect(() => {\n    fetchData();\n  }, [selectedDate]);\n  const fetchData = async () => {\n    try {\n      setLoading(true);\n      await Promise.all([fetchFoods(), fetchDietLogs(), fetchDailySummary()]);\n    } catch (err) {\n      setError('Failed to load nutrition data');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const fetchFoods = async () => {\n    try {\n      const response = await foodApi.getAll({\n        search: searchTerm\n      });\n      setFoods(response.foods || response);\n    } catch (err) {\n      console.error('Error fetching foods:', err);\n    }\n  };\n  const fetchDietLogs = async () => {\n    try {\n      const response = await dietLogApi.getDietLogs(selectedDate);\n      setDietLogs(response.dietLogs || []);\n    } catch (err) {\n      console.error('Error fetching diet logs:', err);\n    }\n  };\n  const fetchDailySummary = async () => {\n    try {\n      const response = await dietLogApi.getDailySummary(selectedDate);\n      setDailySummary(response);\n    } catch (err) {\n      console.error('Error fetching daily summary:', err);\n    }\n  };\n  const handleAddFood = async () => {\n    if (!selectedFood) return;\n    try {\n      const logData = {\n        foodId: selectedFood.id,\n        quantity: parseFloat(quantity),\n        unit,\n        mealType,\n        loggedAt: new Date(selectedDate).toISOString()\n      };\n      await dietLogApi.logFood(logData);\n      await fetchData();\n      handleCloseDialog();\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Failed to log food');\n    }\n  };\n  const handleDeleteLog = async logId => {\n    try {\n      await dietLogApi.deleteDietLog(logId);\n      await fetchData();\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || 'Failed to delete log');\n    }\n  };\n  const handleCloseDialog = () => {\n    setAddFoodDialogOpen(false);\n    setSelectedFood(null);\n    setQuantity('100');\n    setUnit('grams');\n    setMealType('Breakfast');\n  };\n  const getProgressColor = progress => {\n    if (progress < 50) return 'error';\n    if (progress < 80) return 'warning';\n    if (progress <= 100) return 'success';\n    return 'info';\n  };\n  const groupLogsByMealType = logs => {\n    return logs.reduce((groups, log) => {\n      const mealType = log.mealType || 'Other';\n      if (!groups[mealType]) {\n        groups[mealType] = [];\n      }\n      groups[mealType].push(log);\n      return groups;\n    }, {});\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"lg\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        minHeight: \"400px\",\n        children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this);\n  }\n  const groupedLogs = groupLogsByMealType(dietLogs);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        component: \"h1\",\n        gutterBottom: true,\n        children: \"Nutrition Tracker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        color: \"text.secondary\",\n        children: \"Track your daily food intake and monitor your nutritional goals\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      sx: {\n        mb: 3\n      },\n      onClose: () => setError(''),\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 4,\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        type: \"date\",\n        label: \"Date\",\n        value: selectedDate,\n        onChange: e => setSelectedDate(e.target.value),\n        InputLabelProps: {\n          shrink: true\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        startIcon: /*#__PURE__*/_jsxDEV(Add, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 22\n        }, this),\n        onClick: () => setAddFoodDialogOpen(true),\n        children: \"Add Food\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this), dailySummary && /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        mb: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: [\"Daily Summary - \", new Date(selectedDate).toLocaleDateString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                mb: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  justifyContent: 'space-between',\n                  mb: 1\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  children: \"Calories\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  children: [Math.round(dailySummary.consumed.calories), \" / \", ((_dailySummary$goals = dailySummary.goals) === null || _dailySummary$goals === void 0 ? void 0 : _dailySummary$goals.calories) || 0]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 262,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(LinearProgress, {\n                variant: \"determinate\",\n                value: Math.min(((_dailySummary$progres = dailySummary.progress) === null || _dailySummary$progres === void 0 ? void 0 : _dailySummary$progres.calorieProgress) || 0, 100),\n                color: getProgressColor(((_dailySummary$progres2 = dailySummary.progress) === null || _dailySummary$progres2 === void 0 ? void 0 : _dailySummary$progres2.calorieProgress) || 0),\n                sx: {\n                  height: 8,\n                  borderRadius: 4\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                mb: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  justifyContent: 'space-between',\n                  mb: 1\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  children: \"Protein\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  children: [Math.round(dailySummary.consumed.protein), \"g / \", ((_dailySummary$goals2 = dailySummary.goals) === null || _dailySummary$goals2 === void 0 ? void 0 : _dailySummary$goals2.protein) || 0, \"g\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 277,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(LinearProgress, {\n                variant: \"determinate\",\n                value: Math.min(((_dailySummary$progres3 = dailySummary.progress) === null || _dailySummary$progres3 === void 0 ? void 0 : _dailySummary$progres3.proteinProgress) || 0, 100),\n                color: getProgressColor(((_dailySummary$progres4 = dailySummary.progress) === null || _dailySummary$progres4 === void 0 ? void 0 : _dailySummary$progres4.proteinProgress) || 0),\n                sx: {\n                  height: 8,\n                  borderRadius: 4\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 6,\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    textAlign: 'center',\n                    p: 2,\n                    bgcolor: 'primary.light',\n                    borderRadius: 1\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(LocalFireDepartment, {\n                    sx: {\n                      fontSize: 32,\n                      color: 'white',\n                      mb: 1\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 294,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h6\",\n                    color: \"white\",\n                    children: Math.round(dailySummary.consumed.calories)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 295,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    color: \"white\",\n                    children: \"Calories\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 298,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 293,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 6,\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    textAlign: 'center',\n                    p: 2,\n                    bgcolor: 'success.light',\n                    borderRadius: 1\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(FitnessCenter, {\n                    sx: {\n                      fontSize: 32,\n                      color: 'white',\n                      mb: 1\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 305,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h6\",\n                    color: \"white\",\n                    children: [Math.round(dailySummary.consumed.protein), \"g\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 306,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    color: \"white\",\n                    children: \"Protein\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 309,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 304,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: mealTypes.map(meal => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: [/*#__PURE__*/_jsxDEV(Restaurant, {\n                sx: {\n                  mr: 1,\n                  verticalAlign: 'middle'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 19\n              }, this), meal]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 17\n            }, this), groupedLogs[meal] ? /*#__PURE__*/_jsxDEV(List, {\n              dense: true,\n              children: groupedLogs[meal].map(log => /*#__PURE__*/_jsxDEV(ListItem, {\n                divider: true,\n                children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: log.foodName,\n                  secondary: `${log.quantity}${log.unit} • ${Math.round(log.calories)} cal • ${Math.round(log.protein)}g protein`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 336,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n                  children: /*#__PURE__*/_jsxDEV(IconButton, {\n                    edge: \"end\",\n                    onClick: () => handleDeleteLog(log.id),\n                    size: \"small\",\n                    children: /*#__PURE__*/_jsxDEV(Delete, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 346,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 341,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 340,\n                  columnNumber: 25\n                }, this)]\n              }, log.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"text.secondary\",\n              sx: {\n                py: 2\n              },\n              children: [\"No foods logged for \", meal.toLowerCase()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 13\n        }, this)\n      }, meal, false, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: addFoodDialogOpen,\n      onClose: handleCloseDialog,\n      maxWidth: \"md\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Add Food to Log\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mb: 3,\n            mt: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n            options: foods,\n            getOptionLabel: option => option.name,\n            value: selectedFood,\n            onChange: (_, newValue) => setSelectedFood(newValue),\n            onInputChange: (_, newInputValue) => {\n              setSearchTerm(newInputValue);\n              if (newInputValue.length > 2) {\n                fetchFoods();\n              }\n            },\n            renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n              ...params,\n              label: \"Search for food\",\n              fullWidth: true,\n              placeholder: \"Type to search foods...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 17\n            }, this),\n            renderOption: (props, option) => /*#__PURE__*/_jsxDEV(Box, {\n              component: \"li\",\n              ...props,\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  children: option.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 390,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"text.secondary\",\n                  children: [option.caloriesPer100g, \" cal/100g \\u2022 \", option.category]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 391,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 389,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 388,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 11\n        }, this), selectedFood && /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mb: 3,\n            p: 2,\n            bgcolor: 'grey.50',\n            borderRadius: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: selectedFood.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"text.secondary\",\n            gutterBottom: true,\n            children: selectedFood.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              gap: 1,\n              flexWrap: 'wrap'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Chip, {\n              label: `${selectedFood.caloriesPer100g} cal/100g`,\n              size: \"small\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Chip, {\n              label: `${selectedFood.proteinPer100g}g protein/100g`,\n              size: \"small\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Chip, {\n              label: selectedFood.category,\n              size: \"small\",\n              variant: \"outlined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 411,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 4,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Quantity\",\n              type: \"number\",\n              value: quantity,\n              onChange: e => setQuantity(e.target.value),\n              inputProps: {\n                min: 0,\n                step: 0.1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 418,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 4,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: \"Unit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 429,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                value: unit,\n                label: \"Unit\",\n                onChange: e => setUnit(e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"grams\",\n                  children: \"Grams\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 435,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"pieces\",\n                  children: \"Pieces\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 436,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"cups\",\n                  children: \"Cups\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 437,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"tablespoons\",\n                  children: \"Tablespoons\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 438,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 430,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 428,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 4,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: \"Meal Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 444,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                value: mealType,\n                label: \"Meal Type\",\n                onChange: e => setMealType(e.target.value),\n                children: mealTypes.map(meal => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: meal,\n                  children: meal\n                }, meal, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 451,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 445,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 443,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 11\n        }, this), selectedFood && quantity && /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 3,\n            p: 2,\n            bgcolor: 'primary.light',\n            borderRadius: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            color: \"white\",\n            gutterBottom: true,\n            children: \"Nutritional Information\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 3,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"white\",\n                children: [\"Calories: \", Math.round(selectedFood.caloriesPer100g * parseFloat(quantity) / 100)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 467,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 466,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 3,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"white\",\n                children: [\"Protein: \", Math.round(selectedFood.proteinPer100g * parseFloat(quantity) / 100), \"g\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 472,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 471,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 3,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"white\",\n                children: [\"Carbs: \", Math.round(selectedFood.carbsPer100g * parseFloat(quantity) / 100), \"g\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 477,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 476,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 3,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"white\",\n                children: [\"Fat: \", Math.round(selectedFood.fatPer100g * parseFloat(quantity) / 100), \"g\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 482,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 481,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 465,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCloseDialog,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleAddFood,\n          variant: \"contained\",\n          disabled: !selectedFood || !quantity,\n          children: \"Add to Log\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 215,\n    columnNumber: 5\n  }, this);\n};\n_s(Nutrition, \"svnFnBGxlGG46YwSsoYRwNSepIo=\");\n_c = Nutrition;\nexport default Nutrition;\nvar _c;\n$RefreshReg$(_c, \"Nutrition\");","map":{"version":3,"names":["React","useState","useEffect","Container","Typography","Box","Grid","Card","CardContent","Button","Dialog","DialogTitle","DialogContent","DialogActions","TextField","FormControl","InputLabel","Select","MenuItem","Chip","LinearProgress","Alert","CircularProgress","Autocomplete","IconButton","List","ListItem","ListItemText","ListItemSecondaryAction","Add","Restaurant","LocalFireDepartment","FitnessCenter","Delete","foodApi","dietLogApi","jsxDEV","_jsxDEV","mealTypes","Nutrition","_s","_dailySummary$goals","_dailySummary$progres","_dailySummary$progres2","_dailySummary$goals2","_dailySummary$progres3","_dailySummary$progres4","foods","setFoods","dietLogs","setDietLogs","dailySummary","setDailySummary","loading","setLoading","error","setError","selectedDate","setSelectedDate","Date","toISOString","split","addFoodDialogOpen","setAddFoodDialogOpen","selectedFood","setSelectedFood","quantity","setQuantity","unit","setUnit","mealType","setMealType","searchTerm","setSearchTerm","fetchData","Promise","all","fetchFoods","fetchDietLogs","fetchDailySummary","err","response","getAll","search","console","getDietLogs","getDailySummary","handleAddFood","logData","foodId","id","parseFloat","loggedAt","logFood","handleCloseDialog","_err$response","_err$response$data","data","message","handleDeleteLog","logId","deleteDietLog","_err$response2","_err$response2$data","getProgressColor","progress","groupLogsByMealType","logs","reduce","groups","log","push","maxWidth","children","display","justifyContent","alignItems","minHeight","fileName","_jsxFileName","lineNumber","columnNumber","groupedLogs","sx","mb","variant","component","gutterBottom","color","severity","onClose","type","label","value","onChange","e","target","InputLabelProps","shrink","startIcon","onClick","toLocaleDateString","container","spacing","item","xs","md","Math","round","consumed","calories","goals","min","calorieProgress","height","borderRadius","protein","proteinProgress","textAlign","p","bgcolor","fontSize","map","meal","mr","verticalAlign","dense","divider","primary","foodName","secondary","edge","size","py","toLowerCase","open","fullWidth","mt","options","getOptionLabel","option","name","_","newValue","onInputChange","newInputValue","length","renderInput","params","placeholder","renderOption","props","caloriesPer100g","category","description","gap","flexWrap","proteinPer100g","sm","inputProps","step","carbsPer100g","fatPer100g","disabled","_c","$RefreshReg$"],"sources":["C:/Users/GL-Saurav/Desktop/new/new/frontend/src/pages/Nutrition.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Container,\n  Typography,\n  Box,\n  Grid,\n  Card,\n  CardContent,\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  TextField,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Chip,\n  LinearProgress,\n  Alert,\n  CircularProgress,\n  Autocomplete,\n  IconButton,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n} from '@mui/material';\nimport {\n  Add,\n  Restaurant,\n  LocalFireDepartment,\n  FitnessCenter,\n  Delete,\n} from '@mui/icons-material';\nimport { foodApi, dietLogApi } from '../services/api';\n\ninterface Food {\n  id: number;\n  name: string;\n  description: string;\n  caloriesPer100g: number;\n  proteinPer100g: number;\n  carbsPer100g: number;\n  fatPer100g: number;\n  category: string;\n  imageUrl: string;\n}\n\ninterface DietLog {\n  id: number;\n  foodId: number;\n  foodName: string;\n  quantity: number;\n  unit: string;\n  calories: number;\n  protein: number;\n  carbs: number;\n  fat: number;\n  loggedAt: string;\n  mealType: string;\n}\n\ninterface DailySummary {\n  date: string;\n  consumed: {\n    calories: number;\n    protein: number;\n    carbs: number;\n    fat: number;\n  };\n  goals: {\n    calories: number;\n    protein: number;\n  } | null;\n  progress: {\n    calorieProgress: number;\n    proteinProgress: number;\n  } | null;\n}\n\nconst mealTypes = ['Breakfast', 'Lunch', 'Dinner', 'Snack', 'Other'];\n\nconst Nutrition: React.FC = () => {\n  const [foods, setFoods] = useState<Food[]>([]);\n  const [dietLogs, setDietLogs] = useState<DietLog[]>([]);\n  const [dailySummary, setDailySummary] = useState<DailySummary | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [selectedDate, setSelectedDate] = useState(new Date().toISOString().split('T')[0]);\n\n  // Dialog states\n  const [addFoodDialogOpen, setAddFoodDialogOpen] = useState(false);\n  const [selectedFood, setSelectedFood] = useState<Food | null>(null);\n  const [quantity, setQuantity] = useState('100');\n  const [unit, setUnit] = useState('grams');\n  const [mealType, setMealType] = useState('Breakfast');\n  const [searchTerm, setSearchTerm] = useState('');\n\n  useEffect(() => {\n    fetchData();\n  }, [selectedDate]);\n\n  const fetchData = async () => {\n    try {\n      setLoading(true);\n      await Promise.all([\n        fetchFoods(),\n        fetchDietLogs(),\n        fetchDailySummary(),\n      ]);\n    } catch (err) {\n      setError('Failed to load nutrition data');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const fetchFoods = async () => {\n    try {\n      const response = await foodApi.getAll({ search: searchTerm });\n      setFoods(response.foods || response);\n    } catch (err) {\n      console.error('Error fetching foods:', err);\n    }\n  };\n\n  const fetchDietLogs = async () => {\n    try {\n      const response = await dietLogApi.getDietLogs(selectedDate);\n      setDietLogs(response.dietLogs || []);\n    } catch (err) {\n      console.error('Error fetching diet logs:', err);\n    }\n  };\n\n  const fetchDailySummary = async () => {\n    try {\n      const response = await dietLogApi.getDailySummary(selectedDate);\n      setDailySummary(response);\n    } catch (err) {\n      console.error('Error fetching daily summary:', err);\n    }\n  };\n\n  const handleAddFood = async () => {\n    if (!selectedFood) return;\n\n    try {\n      const logData = {\n        foodId: selectedFood.id,\n        quantity: parseFloat(quantity),\n        unit,\n        mealType,\n        loggedAt: new Date(selectedDate).toISOString(),\n      };\n\n      await dietLogApi.logFood(logData);\n      await fetchData();\n      handleCloseDialog();\n    } catch (err: any) {\n      setError(err.response?.data?.message || 'Failed to log food');\n    }\n  };\n\n  const handleDeleteLog = async (logId: number) => {\n    try {\n      await dietLogApi.deleteDietLog(logId);\n      await fetchData();\n    } catch (err: any) {\n      setError(err.response?.data?.message || 'Failed to delete log');\n    }\n  };\n\n  const handleCloseDialog = () => {\n    setAddFoodDialogOpen(false);\n    setSelectedFood(null);\n    setQuantity('100');\n    setUnit('grams');\n    setMealType('Breakfast');\n  };\n\n  const getProgressColor = (progress: number) => {\n    if (progress < 50) return 'error';\n    if (progress < 80) return 'warning';\n    if (progress <= 100) return 'success';\n    return 'info';\n  };\n\n  const groupLogsByMealType = (logs: DietLog[]) => {\n    return logs.reduce((groups, log) => {\n      const mealType = log.mealType || 'Other';\n      if (!groups[mealType]) {\n        groups[mealType] = [];\n      }\n      groups[mealType].push(log);\n      return groups;\n    }, {} as Record<string, DietLog[]>);\n  };\n\n  if (loading) {\n    return (\n      <Container maxWidth=\"lg\">\n        <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"400px\">\n          <CircularProgress />\n        </Box>\n      </Container>\n    );\n  }\n\n  const groupedLogs = groupLogsByMealType(dietLogs);\n\n  return (\n    <Container maxWidth=\"lg\">\n      <Box sx={{ mb: 4 }}>\n        <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n          Nutrition Tracker\n        </Typography>\n        <Typography variant=\"body1\" color=\"text.secondary\">\n          Track your daily food intake and monitor your nutritional goals\n        </Typography>\n      </Box>\n\n      {error && (\n        <Alert severity=\"error\" sx={{ mb: 3 }} onClose={() => setError('')}>\n          {error}\n        </Alert>\n      )}\n\n      {/* Date Selector and Add Food Button */}\n      <Box sx={{ mb: 4, display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n        <TextField\n          type=\"date\"\n          label=\"Date\"\n          value={selectedDate}\n          onChange={(e) => setSelectedDate(e.target.value)}\n          InputLabelProps={{ shrink: true }}\n        />\n        <Button\n          variant=\"contained\"\n          startIcon={<Add />}\n          onClick={() => setAddFoodDialogOpen(true)}\n        >\n          Add Food\n        </Button>\n      </Box>\n\n      {/* Daily Summary */}\n      {dailySummary && (\n        <Card sx={{ mb: 4 }}>\n          <CardContent>\n            <Typography variant=\"h6\" gutterBottom>\n              Daily Summary - {new Date(selectedDate).toLocaleDateString()}\n            </Typography>\n\n            <Grid container spacing={3}>\n              <Grid item xs={12} md={6}>\n                <Box sx={{ mb: 2 }}>\n                  <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 1 }}>\n                    <Typography variant=\"body2\">Calories</Typography>\n                    <Typography variant=\"body2\">\n                      {Math.round(dailySummary.consumed.calories)} / {dailySummary.goals?.calories || 0}\n                    </Typography>\n                  </Box>\n                  <LinearProgress\n                    variant=\"determinate\"\n                    value={Math.min(dailySummary.progress?.calorieProgress || 0, 100)}\n                    color={getProgressColor(dailySummary.progress?.calorieProgress || 0)}\n                    sx={{ height: 8, borderRadius: 4 }}\n                  />\n                </Box>\n\n                <Box sx={{ mb: 2 }}>\n                  <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 1 }}>\n                    <Typography variant=\"body2\">Protein</Typography>\n                    <Typography variant=\"body2\">\n                      {Math.round(dailySummary.consumed.protein)}g / {dailySummary.goals?.protein || 0}g\n                    </Typography>\n                  </Box>\n                  <LinearProgress\n                    variant=\"determinate\"\n                    value={Math.min(dailySummary.progress?.proteinProgress || 0, 100)}\n                    color={getProgressColor(dailySummary.progress?.proteinProgress || 0)}\n                    sx={{ height: 8, borderRadius: 4 }}\n                  />\n                </Box>\n              </Grid>\n\n              <Grid item xs={12} md={6}>\n                <Grid container spacing={2}>\n                  <Grid item xs={6}>\n                    <Box sx={{ textAlign: 'center', p: 2, bgcolor: 'primary.light', borderRadius: 1 }}>\n                      <LocalFireDepartment sx={{ fontSize: 32, color: 'white', mb: 1 }} />\n                      <Typography variant=\"h6\" color=\"white\">\n                        {Math.round(dailySummary.consumed.calories)}\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"white\">\n                        Calories\n                      </Typography>\n                    </Box>\n                  </Grid>\n                  <Grid item xs={6}>\n                    <Box sx={{ textAlign: 'center', p: 2, bgcolor: 'success.light', borderRadius: 1 }}>\n                      <FitnessCenter sx={{ fontSize: 32, color: 'white', mb: 1 }} />\n                      <Typography variant=\"h6\" color=\"white\">\n                        {Math.round(dailySummary.consumed.protein)}g\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"white\">\n                        Protein\n                      </Typography>\n                    </Box>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n          </CardContent>\n        </Card>\n      )}\n\n      {/* Meal Logs */}\n      <Grid container spacing={3}>\n        {mealTypes.map((meal) => (\n          <Grid item xs={12} md={6} key={meal}>\n            <Card>\n              <CardContent>\n                <Typography variant=\"h6\" gutterBottom>\n                  <Restaurant sx={{ mr: 1, verticalAlign: 'middle' }} />\n                  {meal}\n                </Typography>\n\n                {groupedLogs[meal] ? (\n                  <List dense>\n                    {groupedLogs[meal].map((log) => (\n                      <ListItem key={log.id} divider>\n                        <ListItemText\n                          primary={log.foodName}\n                          secondary={`${log.quantity}${log.unit} • ${Math.round(log.calories)} cal • ${Math.round(log.protein)}g protein`}\n                        />\n                        <ListItemSecondaryAction>\n                          <IconButton\n                            edge=\"end\"\n                            onClick={() => handleDeleteLog(log.id)}\n                            size=\"small\"\n                          >\n                            <Delete />\n                          </IconButton>\n                        </ListItemSecondaryAction>\n                      </ListItem>\n                    ))}\n                  </List>\n                ) : (\n                  <Typography variant=\"body2\" color=\"text.secondary\" sx={{ py: 2 }}>\n                    No foods logged for {meal.toLowerCase()}\n                  </Typography>\n                )}\n              </CardContent>\n            </Card>\n          </Grid>\n        ))}\n      </Grid>\n\n      {/* Add Food Dialog */}\n      <Dialog open={addFoodDialogOpen} onClose={handleCloseDialog} maxWidth=\"md\" fullWidth>\n        <DialogTitle>Add Food to Log</DialogTitle>\n        <DialogContent>\n          <Box sx={{ mb: 3, mt: 1 }}>\n            <Autocomplete\n              options={foods}\n              getOptionLabel={(option) => option.name}\n              value={selectedFood}\n              onChange={(_, newValue) => setSelectedFood(newValue)}\n              onInputChange={(_, newInputValue) => {\n                setSearchTerm(newInputValue);\n                if (newInputValue.length > 2) {\n                  fetchFoods();\n                }\n              }}\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  label=\"Search for food\"\n                  fullWidth\n                  placeholder=\"Type to search foods...\"\n                />\n              )}\n              renderOption={(props, option) => (\n                <Box component=\"li\" {...props}>\n                  <Box>\n                    <Typography variant=\"body1\">{option.name}</Typography>\n                    <Typography variant=\"body2\" color=\"text.secondary\">\n                      {option.caloriesPer100g} cal/100g • {option.category}\n                    </Typography>\n                  </Box>\n                </Box>\n              )}\n            />\n          </Box>\n\n          {selectedFood && (\n            <Box sx={{ mb: 3, p: 2, bgcolor: 'grey.50', borderRadius: 1 }}>\n              <Typography variant=\"h6\" gutterBottom>\n                {selectedFood.name}\n              </Typography>\n              <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\n                {selectedFood.description}\n              </Typography>\n              <Box sx={{ display: 'flex', gap: 1, flexWrap: 'wrap' }}>\n                <Chip label={`${selectedFood.caloriesPer100g} cal/100g`} size=\"small\" />\n                <Chip label={`${selectedFood.proteinPer100g}g protein/100g`} size=\"small\" />\n                <Chip label={selectedFood.category} size=\"small\" variant=\"outlined\" />\n              </Box>\n            </Box>\n          )}\n\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={4}>\n              <TextField\n                fullWidth\n                label=\"Quantity\"\n                type=\"number\"\n                value={quantity}\n                onChange={(e) => setQuantity(e.target.value)}\n                inputProps={{ min: 0, step: 0.1 }}\n              />\n            </Grid>\n            <Grid item xs={12} sm={4}>\n              <FormControl fullWidth>\n                <InputLabel>Unit</InputLabel>\n                <Select\n                  value={unit}\n                  label=\"Unit\"\n                  onChange={(e) => setUnit(e.target.value)}\n                >\n                  <MenuItem value=\"grams\">Grams</MenuItem>\n                  <MenuItem value=\"pieces\">Pieces</MenuItem>\n                  <MenuItem value=\"cups\">Cups</MenuItem>\n                  <MenuItem value=\"tablespoons\">Tablespoons</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item xs={12} sm={4}>\n              <FormControl fullWidth>\n                <InputLabel>Meal Type</InputLabel>\n                <Select\n                  value={mealType}\n                  label=\"Meal Type\"\n                  onChange={(e) => setMealType(e.target.value)}\n                >\n                  {mealTypes.map((meal) => (\n                    <MenuItem key={meal} value={meal}>\n                      {meal}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </Grid>\n          </Grid>\n\n          {selectedFood && quantity && (\n            <Box sx={{ mt: 3, p: 2, bgcolor: 'primary.light', borderRadius: 1 }}>\n              <Typography variant=\"h6\" color=\"white\" gutterBottom>\n                Nutritional Information\n              </Typography>\n              <Grid container spacing={2}>\n                <Grid item xs={3}>\n                  <Typography variant=\"body2\" color=\"white\">\n                    Calories: {Math.round((selectedFood.caloriesPer100g * parseFloat(quantity)) / 100)}\n                  </Typography>\n                </Grid>\n                <Grid item xs={3}>\n                  <Typography variant=\"body2\" color=\"white\">\n                    Protein: {Math.round((selectedFood.proteinPer100g * parseFloat(quantity)) / 100)}g\n                  </Typography>\n                </Grid>\n                <Grid item xs={3}>\n                  <Typography variant=\"body2\" color=\"white\">\n                    Carbs: {Math.round((selectedFood.carbsPer100g * parseFloat(quantity)) / 100)}g\n                  </Typography>\n                </Grid>\n                <Grid item xs={3}>\n                  <Typography variant=\"body2\" color=\"white\">\n                    Fat: {Math.round((selectedFood.fatPer100g * parseFloat(quantity)) / 100)}g\n                  </Typography>\n                </Grid>\n              </Grid>\n            </Box>\n          )}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseDialog}>Cancel</Button>\n          <Button\n            onClick={handleAddFood}\n            variant=\"contained\"\n            disabled={!selectedFood || !quantity}\n          >\n            Add to Log\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Container>\n  );\n};\n\nexport default Nutrition;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}