{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GL-Saurav\\\\Desktop\\\\new\\\\new\\\\frontend\\\\src\\\\pages\\\\Nutrition.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Typography, Box, Grid, Card, CardContent, Button, Dialog, DialogTitle, DialogContent, DialogActions, TextField, FormControl, InputLabel, Select, MenuItem, Chip, LinearProgress, Alert, CircularProgress, Autocomplete, IconButton, List, ListItem, ListItemText, ListItemSecondaryAction } from '@mui/material';\nimport { Add, Restaurant, LocalFireDepartment, FitnessCenter, Delete } from '@mui/icons-material';\nimport { foodApi, dietLogApi } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mealTypes = ['Breakfast', 'Lunch', 'Dinner', 'Snack', 'Other'];\nconst Nutrition = () => {\n  _s();\n  var _dailySummary$goals, _dailySummary$progres, _dailySummary$progres2, _dailySummary$goals2, _dailySummary$progres3, _dailySummary$progres4;\n  const [foods, setFoods] = useState([]);\n  const [dietLogs, setDietLogs] = useState([]);\n  const [dailySummary, setDailySummary] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [selectedDate, setSelectedDate] = useState(new Date().toISOString().split('T')[0]);\n\n  // Dialog states\n  const [addFoodDialogOpen, setAddFoodDialogOpen] = useState(false);\n  const [selectedFood, setSelectedFood] = useState(null);\n  const [quantity, setQuantity] = useState('100');\n  const [unit, setUnit] = useState('grams');\n  const [mealType, setMealType] = useState('Breakfast');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [customFood, setCustomFood] = useState({\n    name: '',\n    caloriesPer100g: '',\n    proteinPer100g: '',\n    carbsPer100g: '',\n    fatPer100g: ''\n  });\n  const [isCustomFood, setIsCustomFood] = useState(false);\n  useEffect(() => {\n    fetchData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selectedDate]);\n  const fetchData = async () => {\n    try {\n      setLoading(true);\n      await Promise.all([fetchFoods(), fetchDietLogs(), fetchDailySummary()]);\n    } catch (err) {\n      setError('Failed to load nutrition data');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const fetchFoods = async () => {\n    try {\n      const response = await foodApi.getAll({\n        search: searchTerm\n      });\n      setFoods(response.foods || response);\n    } catch (err) {\n      console.error('Error fetching foods:', err);\n    }\n  };\n  const fetchDietLogs = async () => {\n    try {\n      const response = await dietLogApi.getDietLogs(selectedDate);\n      setDietLogs(response.dietLogs || []);\n    } catch (err) {\n      console.error('Error fetching diet logs:', err);\n    }\n  };\n  const fetchDailySummary = async () => {\n    try {\n      const response = await dietLogApi.getDailySummary(selectedDate);\n      setDailySummary(response);\n    } catch (err) {\n      console.error('Error fetching daily summary:', err);\n    }\n  };\n  const handleAddFood = async () => {\n    if (!selectedFood && !isCustomFood || !quantity) return;\n    try {\n      let logData;\n      if (isCustomFood) {\n        // First create the custom food\n        const newFood = {\n          name: customFood.name,\n          description: 'Custom food entry',\n          caloriesPer100g: parseFloat(customFood.caloriesPer100g),\n          proteinPer100g: parseFloat(customFood.proteinPer100g),\n          carbsPer100g: parseFloat(customFood.carbsPer100g),\n          fatPer100g: parseFloat(customFood.fatPer100g),\n          fiberPer100g: 0,\n          category: 'Custom'\n        };\n        const createdFood = await foodApi.createFood(newFood);\n        logData = {\n          foodId: createdFood.id,\n          quantity: parseFloat(quantity),\n          unit,\n          mealType,\n          loggedAt: new Date(selectedDate).toISOString()\n        };\n      } else {\n        logData = {\n          foodId: selectedFood.id,\n          quantity: parseFloat(quantity),\n          unit,\n          mealType,\n          loggedAt: new Date(selectedDate).toISOString()\n        };\n      }\n      await dietLogApi.logFood(logData);\n      await fetchData();\n      handleCloseDialog();\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Failed to log food');\n    }\n  };\n  const handleDeleteLog = async logId => {\n    try {\n      await dietLogApi.deleteDietLog(logId);\n      await fetchData();\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || 'Failed to delete log');\n    }\n  };\n  const handleCloseDialog = () => {\n    setAddFoodDialogOpen(false);\n    setSelectedFood(null);\n    setQuantity('100');\n    setUnit('grams');\n    setMealType('Breakfast');\n    setIsCustomFood(false);\n    setCustomFood({\n      name: '',\n      caloriesPer100g: '',\n      proteinPer100g: '',\n      carbsPer100g: '',\n      fatPer100g: ''\n    });\n  };\n  const getProgressColor = progress => {\n    if (progress < 50) return 'error';\n    if (progress < 80) return 'warning';\n    if (progress <= 100) return 'success';\n    return 'info';\n  };\n  const groupLogsByMealType = logs => {\n    return logs.reduce((groups, log) => {\n      const mealType = log.mealType || 'Other';\n      if (!groups[mealType]) {\n        groups[mealType] = [];\n      }\n      groups[mealType].push(log);\n      return groups;\n    }, {});\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"lg\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        minHeight: \"400px\",\n        children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this);\n  }\n  const groupedLogs = groupLogsByMealType(dietLogs);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        component: \"h1\",\n        gutterBottom: true,\n        children: \"Nutrition Tracker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        color: \"text.secondary\",\n        children: \"Track your daily food intake and monitor your nutritional goals\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      sx: {\n        mb: 3\n      },\n      onClose: () => setError(''),\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 4,\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        type: \"date\",\n        label: \"Date\",\n        value: selectedDate,\n        onChange: e => setSelectedDate(e.target.value),\n        InputLabelProps: {\n          shrink: true\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        startIcon: /*#__PURE__*/_jsxDEV(Add, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 22\n        }, this),\n        onClick: () => setAddFoodDialogOpen(true),\n        children: \"Add Food\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 7\n    }, this), dailySummary && /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        mb: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: [\"Daily Summary - \", new Date(selectedDate).toLocaleDateString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                mb: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  justifyContent: 'space-between',\n                  mb: 1\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  children: \"Calories\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 304,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  children: [Math.round(dailySummary.consumed.calories), \" / \", ((_dailySummary$goals = dailySummary.goals) === null || _dailySummary$goals === void 0 ? void 0 : _dailySummary$goals.calories) || 0]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 305,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(LinearProgress, {\n                variant: \"determinate\",\n                value: Math.min(((_dailySummary$progres = dailySummary.progress) === null || _dailySummary$progres === void 0 ? void 0 : _dailySummary$progres.calorieProgress) || 0, 100),\n                color: getProgressColor(((_dailySummary$progres2 = dailySummary.progress) === null || _dailySummary$progres2 === void 0 ? void 0 : _dailySummary$progres2.calorieProgress) || 0),\n                sx: {\n                  height: 8,\n                  borderRadius: 4\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                mb: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  justifyContent: 'space-between',\n                  mb: 1\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  children: \"Protein\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 319,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  children: [Math.round(dailySummary.consumed.protein), \"g / \", ((_dailySummary$goals2 = dailySummary.goals) === null || _dailySummary$goals2 === void 0 ? void 0 : _dailySummary$goals2.protein) || 0, \"g\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 320,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(LinearProgress, {\n                variant: \"determinate\",\n                value: Math.min(((_dailySummary$progres3 = dailySummary.progress) === null || _dailySummary$progres3 === void 0 ? void 0 : _dailySummary$progres3.proteinProgress) || 0, 100),\n                color: getProgressColor(((_dailySummary$progres4 = dailySummary.progress) === null || _dailySummary$progres4 === void 0 ? void 0 : _dailySummary$progres4.proteinProgress) || 0),\n                sx: {\n                  height: 8,\n                  borderRadius: 4\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 6,\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    textAlign: 'center',\n                    p: 2,\n                    bgcolor: 'primary.light',\n                    borderRadius: 1\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(LocalFireDepartment, {\n                    sx: {\n                      fontSize: 32,\n                      color: 'white',\n                      mb: 1\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 337,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h6\",\n                    color: \"white\",\n                    children: Math.round(dailySummary.consumed.calories)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 338,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    color: \"white\",\n                    children: \"Calories\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 341,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 336,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 6,\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    textAlign: 'center',\n                    p: 2,\n                    bgcolor: 'success.light',\n                    borderRadius: 1\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(FitnessCenter, {\n                    sx: {\n                      fontSize: 32,\n                      color: 'white',\n                      mb: 1\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 348,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h6\",\n                    color: \"white\",\n                    children: [Math.round(dailySummary.consumed.protein), \"g\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 349,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    color: \"white\",\n                    children: \"Protein\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 352,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 347,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 346,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: mealTypes.map(meal => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: [/*#__PURE__*/_jsxDEV(Restaurant, {\n                sx: {\n                  mr: 1,\n                  verticalAlign: 'middle'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 371,\n                columnNumber: 19\n              }, this), meal]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 17\n            }, this), groupedLogs[meal] ? /*#__PURE__*/_jsxDEV(List, {\n              dense: true,\n              children: groupedLogs[meal].map(log => /*#__PURE__*/_jsxDEV(ListItem, {\n                divider: true,\n                children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: log.foodName,\n                  secondary: `${log.quantity}${log.unit} • ${Math.round(log.calories)} cal • ${Math.round(log.protein)}g protein`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 379,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n                  children: /*#__PURE__*/_jsxDEV(IconButton, {\n                    edge: \"end\",\n                    onClick: () => handleDeleteLog(log.id),\n                    size: \"small\",\n                    children: /*#__PURE__*/_jsxDEV(Delete, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 389,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 384,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 383,\n                  columnNumber: 25\n                }, this)]\n              }, log.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 378,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"text.secondary\",\n              sx: {\n                py: 2\n              },\n              children: [\"No foods logged for \", meal.toLowerCase()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 13\n        }, this)\n      }, meal, false, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: addFoodDialogOpen,\n      onClose: handleCloseDialog,\n      maxWidth: \"md\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Add Food to Log\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mb: 3,\n            mt: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              gap: 2,\n              mb: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: !isCustomFood ? \"contained\" : \"outlined\",\n              onClick: () => setIsCustomFood(false),\n              size: \"small\",\n              children: \"Search Foods\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: isCustomFood ? \"contained\" : \"outlined\",\n              onClick: () => setIsCustomFood(true),\n              size: \"small\",\n              children: \"Add Custom Food\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 419,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 13\n          }, this), !isCustomFood ? /*#__PURE__*/_jsxDEV(Autocomplete, {\n            options: foods,\n            getOptionLabel: option => option.name,\n            value: selectedFood,\n            onChange: (_, newValue) => setSelectedFood(newValue),\n            onInputChange: (_, newInputValue) => {\n              setSearchTerm(newInputValue);\n              if (newInputValue.length > 2) {\n                fetchFoods();\n              }\n            },\n            renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n              ...params,\n              label: \"Search for food\",\n              fullWidth: true,\n              placeholder: \"Type to search foods...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 441,\n              columnNumber: 19\n            }, this),\n            renderOption: (props, option) => /*#__PURE__*/_jsxDEV(Box, {\n              component: \"li\",\n              ...props,\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  children: option.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 451,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"text.secondary\",\n                  children: [option.caloriesPer100g, \" cal/100g \\u2022 \", option.category]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 452,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 450,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 449,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                label: \"Food Name\",\n                value: customFood.name,\n                onChange: e => setCustomFood({\n                  ...customFood,\n                  name: e.target.value\n                }),\n                placeholder: \"Enter custom food name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 462,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 461,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              sm: 3,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                label: \"Calories per 100g\",\n                type: \"number\",\n                value: customFood.caloriesPer100g,\n                onChange: e => setCustomFood({\n                  ...customFood,\n                  caloriesPer100g: e.target.value\n                }),\n                inputProps: {\n                  min: 0,\n                  step: 0.1\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 471,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 470,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              sm: 3,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                label: \"Protein per 100g\",\n                type: \"number\",\n                value: customFood.proteinPer100g,\n                onChange: e => setCustomFood({\n                  ...customFood,\n                  proteinPer100g: e.target.value\n                }),\n                inputProps: {\n                  min: 0,\n                  step: 0.1\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 481,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 480,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              sm: 3,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                label: \"Carbs per 100g\",\n                type: \"number\",\n                value: customFood.carbsPer100g,\n                onChange: e => setCustomFood({\n                  ...customFood,\n                  carbsPer100g: e.target.value\n                }),\n                inputProps: {\n                  min: 0,\n                  step: 0.1\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 491,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 490,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              sm: 3,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                label: \"Fat per 100g\",\n                type: \"number\",\n                value: customFood.fatPer100g,\n                onChange: e => setCustomFood({\n                  ...customFood,\n                  fatPer100g: e.target.value\n                }),\n                inputProps: {\n                  min: 0,\n                  step: 0.1\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 501,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 500,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 11\n        }, this), selectedFood && /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mb: 3,\n            p: 2,\n            bgcolor: 'grey.50',\n            borderRadius: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: selectedFood.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 516,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"text.secondary\",\n            gutterBottom: true,\n            children: selectedFood.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 519,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              gap: 1,\n              flexWrap: 'wrap'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Chip, {\n              label: `${selectedFood.caloriesPer100g} cal/100g`,\n              size: \"small\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 523,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Chip, {\n              label: `${selectedFood.proteinPer100g}g protein/100g`,\n              size: \"small\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 524,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Chip, {\n              label: selectedFood.category,\n              size: \"small\",\n              variant: \"outlined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 525,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 522,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 4,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Quantity\",\n              type: \"number\",\n              value: quantity,\n              onChange: e => setQuantity(e.target.value),\n              inputProps: {\n                min: 0,\n                step: 0.1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 532,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 531,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 4,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: \"Unit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 543,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                value: unit,\n                label: \"Unit\",\n                onChange: e => setUnit(e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"grams\",\n                  children: \"Grams\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 549,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"pieces\",\n                  children: \"Pieces\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 550,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"cups\",\n                  children: \"Cups\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 551,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"tablespoons\",\n                  children: \"Tablespoons\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 552,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 544,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 542,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 541,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 4,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: \"Meal Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 558,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                value: mealType,\n                label: \"Meal Type\",\n                onChange: e => setMealType(e.target.value),\n                children: mealTypes.map(meal => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: meal,\n                  children: meal\n                }, meal, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 565,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 559,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 557,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 556,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 530,\n          columnNumber: 11\n        }, this), (selectedFood && !isCustomFood || isCustomFood && customFood.name && customFood.caloriesPer100g) && quantity && /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 3,\n            p: 2,\n            bgcolor: 'primary.light',\n            borderRadius: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            color: \"white\",\n            gutterBottom: true,\n            children: \"Nutritional Information\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 576,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 3,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"white\",\n                children: [\"Calories: \", Math.round((isCustomFood ? parseFloat(customFood.caloriesPer100g) : selectedFood.caloriesPer100g) * parseFloat(quantity) / 100)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 581,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 580,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 3,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"white\",\n                children: [\"Protein: \", Math.round((isCustomFood ? parseFloat(customFood.proteinPer100g || '0') : selectedFood.proteinPer100g) * parseFloat(quantity) / 100), \"g\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 590,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 589,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 3,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"white\",\n                children: [\"Carbs: \", Math.round((isCustomFood ? parseFloat(customFood.carbsPer100g || '0') : selectedFood.carbsPer100g) * parseFloat(quantity) / 100), \"g\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 599,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 598,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 3,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"white\",\n                children: [\"Fat: \", Math.round((isCustomFood ? parseFloat(customFood.fatPer100g || '0') : selectedFood.fatPer100g) * parseFloat(quantity) / 100), \"g\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 608,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 607,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 579,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 575,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCloseDialog,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 621,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleAddFood,\n          variant: \"contained\",\n          disabled: !quantity || !isCustomFood && !selectedFood || isCustomFood && (!customFood.name || !customFood.caloriesPer100g),\n          children: \"Add to Log\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 622,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 620,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 258,\n    columnNumber: 5\n  }, this);\n};\n_s(Nutrition, \"5u8ys/ympRHYQ7io94bBHhvnbpM=\");\n_c = Nutrition;\nexport default Nutrition;\nvar _c;\n$RefreshReg$(_c, \"Nutrition\");","map":{"version":3,"names":["React","useState","useEffect","Container","Typography","Box","Grid","Card","CardContent","Button","Dialog","DialogTitle","DialogContent","DialogActions","TextField","FormControl","InputLabel","Select","MenuItem","Chip","LinearProgress","Alert","CircularProgress","Autocomplete","IconButton","List","ListItem","ListItemText","ListItemSecondaryAction","Add","Restaurant","LocalFireDepartment","FitnessCenter","Delete","foodApi","dietLogApi","jsxDEV","_jsxDEV","mealTypes","Nutrition","_s","_dailySummary$goals","_dailySummary$progres","_dailySummary$progres2","_dailySummary$goals2","_dailySummary$progres3","_dailySummary$progres4","foods","setFoods","dietLogs","setDietLogs","dailySummary","setDailySummary","loading","setLoading","error","setError","selectedDate","setSelectedDate","Date","toISOString","split","addFoodDialogOpen","setAddFoodDialogOpen","selectedFood","setSelectedFood","quantity","setQuantity","unit","setUnit","mealType","setMealType","searchTerm","setSearchTerm","customFood","setCustomFood","name","caloriesPer100g","proteinPer100g","carbsPer100g","fatPer100g","isCustomFood","setIsCustomFood","fetchData","Promise","all","fetchFoods","fetchDietLogs","fetchDailySummary","err","response","getAll","search","console","getDietLogs","getDailySummary","handleAddFood","logData","newFood","description","parseFloat","fiberPer100g","category","createdFood","createFood","foodId","id","loggedAt","logFood","handleCloseDialog","_err$response","_err$response$data","data","message","handleDeleteLog","logId","deleteDietLog","_err$response2","_err$response2$data","getProgressColor","progress","groupLogsByMealType","logs","reduce","groups","log","push","maxWidth","children","display","justifyContent","alignItems","minHeight","fileName","_jsxFileName","lineNumber","columnNumber","groupedLogs","sx","mb","variant","component","gutterBottom","color","severity","onClose","type","label","value","onChange","e","target","InputLabelProps","shrink","startIcon","onClick","toLocaleDateString","container","spacing","item","xs","md","Math","round","consumed","calories","goals","min","calorieProgress","height","borderRadius","protein","proteinProgress","textAlign","p","bgcolor","fontSize","map","meal","mr","verticalAlign","dense","divider","primary","foodName","secondary","edge","size","py","toLowerCase","open","fullWidth","mt","gap","options","getOptionLabel","option","_","newValue","onInputChange","newInputValue","length","renderInput","params","placeholder","renderOption","props","sm","inputProps","step","flexWrap","disabled","_c","$RefreshReg$"],"sources":["C:/Users/GL-Saurav/Desktop/new/new/frontend/src/pages/Nutrition.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Container,\n  Typography,\n  Box,\n  Grid,\n  Card,\n  CardContent,\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  TextField,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Chip,\n  LinearProgress,\n  Alert,\n  CircularProgress,\n  Autocomplete,\n  IconButton,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n} from '@mui/material';\nimport {\n  Add,\n  Restaurant,\n  LocalFireDepartment,\n  FitnessCenter,\n  Delete,\n} from '@mui/icons-material';\nimport { foodApi, dietLogApi } from '../services/api';\n\ninterface Food {\n  id: number;\n  name: string;\n  description: string;\n  caloriesPer100g: number;\n  proteinPer100g: number;\n  carbsPer100g: number;\n  fatPer100g: number;\n  category: string;\n  imageUrl: string;\n}\n\ninterface DietLog {\n  id: number;\n  foodId: number;\n  foodName: string;\n  quantity: number;\n  unit: string;\n  calories: number;\n  protein: number;\n  carbs: number;\n  fat: number;\n  loggedAt: string;\n  mealType: string;\n}\n\ninterface DailySummary {\n  date: string;\n  consumed: {\n    calories: number;\n    protein: number;\n    carbs: number;\n    fat: number;\n  };\n  goals: {\n    calories: number;\n    protein: number;\n  } | null;\n  progress: {\n    calorieProgress: number;\n    proteinProgress: number;\n  } | null;\n}\n\nconst mealTypes = ['Breakfast', 'Lunch', 'Dinner', 'Snack', 'Other'];\n\nconst Nutrition: React.FC = () => {\n  const [foods, setFoods] = useState<Food[]>([]);\n  const [dietLogs, setDietLogs] = useState<DietLog[]>([]);\n  const [dailySummary, setDailySummary] = useState<DailySummary | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [selectedDate, setSelectedDate] = useState(new Date().toISOString().split('T')[0]);\n\n  // Dialog states\n  const [addFoodDialogOpen, setAddFoodDialogOpen] = useState(false);\n  const [selectedFood, setSelectedFood] = useState<Food | null>(null);\n  const [quantity, setQuantity] = useState('100');\n  const [unit, setUnit] = useState('grams');\n  const [mealType, setMealType] = useState('Breakfast');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [customFood, setCustomFood] = useState({\n    name: '',\n    caloriesPer100g: '',\n    proteinPer100g: '',\n    carbsPer100g: '',\n    fatPer100g: '',\n  });\n  const [isCustomFood, setIsCustomFood] = useState(false);\n\n  useEffect(() => {\n    fetchData();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selectedDate]);\n\n  const fetchData = async () => {\n    try {\n      setLoading(true);\n      await Promise.all([\n        fetchFoods(),\n        fetchDietLogs(),\n        fetchDailySummary(),\n      ]);\n    } catch (err) {\n      setError('Failed to load nutrition data');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const fetchFoods = async () => {\n    try {\n      const response = await foodApi.getAll({ search: searchTerm });\n      setFoods(response.foods || response);\n    } catch (err) {\n      console.error('Error fetching foods:', err);\n    }\n  };\n\n  const fetchDietLogs = async () => {\n    try {\n      const response = await dietLogApi.getDietLogs(selectedDate);\n      setDietLogs(response.dietLogs || []);\n    } catch (err) {\n      console.error('Error fetching diet logs:', err);\n    }\n  };\n\n  const fetchDailySummary = async () => {\n    try {\n      const response = await dietLogApi.getDailySummary(selectedDate);\n      setDailySummary(response);\n    } catch (err) {\n      console.error('Error fetching daily summary:', err);\n    }\n  };\n\n  const handleAddFood = async () => {\n    if ((!selectedFood && !isCustomFood) || !quantity) return;\n\n    try {\n      let logData;\n\n      if (isCustomFood) {\n        // First create the custom food\n        const newFood = {\n          name: customFood.name,\n          description: 'Custom food entry',\n          caloriesPer100g: parseFloat(customFood.caloriesPer100g),\n          proteinPer100g: parseFloat(customFood.proteinPer100g),\n          carbsPer100g: parseFloat(customFood.carbsPer100g),\n          fatPer100g: parseFloat(customFood.fatPer100g),\n          fiberPer100g: 0,\n          category: 'Custom',\n        };\n\n        const createdFood = await foodApi.createFood(newFood);\n\n        logData = {\n          foodId: createdFood.id,\n          quantity: parseFloat(quantity),\n          unit,\n          mealType,\n          loggedAt: new Date(selectedDate).toISOString(),\n        };\n      } else {\n        logData = {\n          foodId: selectedFood!.id,\n          quantity: parseFloat(quantity),\n          unit,\n          mealType,\n          loggedAt: new Date(selectedDate).toISOString(),\n        };\n      }\n\n      await dietLogApi.logFood(logData);\n      await fetchData();\n      handleCloseDialog();\n    } catch (err: any) {\n      setError(err.response?.data?.message || 'Failed to log food');\n    }\n  };\n\n  const handleDeleteLog = async (logId: number) => {\n    try {\n      await dietLogApi.deleteDietLog(logId);\n      await fetchData();\n    } catch (err: any) {\n      setError(err.response?.data?.message || 'Failed to delete log');\n    }\n  };\n\n  const handleCloseDialog = () => {\n    setAddFoodDialogOpen(false);\n    setSelectedFood(null);\n    setQuantity('100');\n    setUnit('grams');\n    setMealType('Breakfast');\n    setIsCustomFood(false);\n    setCustomFood({\n      name: '',\n      caloriesPer100g: '',\n      proteinPer100g: '',\n      carbsPer100g: '',\n      fatPer100g: '',\n    });\n  };\n\n  const getProgressColor = (progress: number) => {\n    if (progress < 50) return 'error';\n    if (progress < 80) return 'warning';\n    if (progress <= 100) return 'success';\n    return 'info';\n  };\n\n  const groupLogsByMealType = (logs: DietLog[]) => {\n    return logs.reduce((groups, log) => {\n      const mealType = log.mealType || 'Other';\n      if (!groups[mealType]) {\n        groups[mealType] = [];\n      }\n      groups[mealType].push(log);\n      return groups;\n    }, {} as Record<string, DietLog[]>);\n  };\n\n  if (loading) {\n    return (\n      <Container maxWidth=\"lg\">\n        <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"400px\">\n          <CircularProgress />\n        </Box>\n      </Container>\n    );\n  }\n\n  const groupedLogs = groupLogsByMealType(dietLogs);\n\n  return (\n    <Container maxWidth=\"lg\">\n      <Box sx={{ mb: 4 }}>\n        <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n          Nutrition Tracker\n        </Typography>\n        <Typography variant=\"body1\" color=\"text.secondary\">\n          Track your daily food intake and monitor your nutritional goals\n        </Typography>\n      </Box>\n\n      {error && (\n        <Alert severity=\"error\" sx={{ mb: 3 }} onClose={() => setError('')}>\n          {error}\n        </Alert>\n      )}\n\n      {/* Date Selector and Add Food Button */}\n      <Box sx={{ mb: 4, display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n        <TextField\n          type=\"date\"\n          label=\"Date\"\n          value={selectedDate}\n          onChange={(e) => setSelectedDate(e.target.value)}\n          InputLabelProps={{ shrink: true }}\n        />\n        <Button\n          variant=\"contained\"\n          startIcon={<Add />}\n          onClick={() => setAddFoodDialogOpen(true)}\n        >\n          Add Food\n        </Button>\n      </Box>\n\n      {/* Daily Summary */}\n      {dailySummary && (\n        <Card sx={{ mb: 4 }}>\n          <CardContent>\n            <Typography variant=\"h6\" gutterBottom>\n              Daily Summary - {new Date(selectedDate).toLocaleDateString()}\n            </Typography>\n\n            <Grid container spacing={3}>\n              <Grid item xs={12} md={6}>\n                <Box sx={{ mb: 2 }}>\n                  <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 1 }}>\n                    <Typography variant=\"body2\">Calories</Typography>\n                    <Typography variant=\"body2\">\n                      {Math.round(dailySummary.consumed.calories)} / {dailySummary.goals?.calories || 0}\n                    </Typography>\n                  </Box>\n                  <LinearProgress\n                    variant=\"determinate\"\n                    value={Math.min(dailySummary.progress?.calorieProgress || 0, 100)}\n                    color={getProgressColor(dailySummary.progress?.calorieProgress || 0)}\n                    sx={{ height: 8, borderRadius: 4 }}\n                  />\n                </Box>\n\n                <Box sx={{ mb: 2 }}>\n                  <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 1 }}>\n                    <Typography variant=\"body2\">Protein</Typography>\n                    <Typography variant=\"body2\">\n                      {Math.round(dailySummary.consumed.protein)}g / {dailySummary.goals?.protein || 0}g\n                    </Typography>\n                  </Box>\n                  <LinearProgress\n                    variant=\"determinate\"\n                    value={Math.min(dailySummary.progress?.proteinProgress || 0, 100)}\n                    color={getProgressColor(dailySummary.progress?.proteinProgress || 0)}\n                    sx={{ height: 8, borderRadius: 4 }}\n                  />\n                </Box>\n              </Grid>\n\n              <Grid item xs={12} md={6}>\n                <Grid container spacing={2}>\n                  <Grid item xs={6}>\n                    <Box sx={{ textAlign: 'center', p: 2, bgcolor: 'primary.light', borderRadius: 1 }}>\n                      <LocalFireDepartment sx={{ fontSize: 32, color: 'white', mb: 1 }} />\n                      <Typography variant=\"h6\" color=\"white\">\n                        {Math.round(dailySummary.consumed.calories)}\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"white\">\n                        Calories\n                      </Typography>\n                    </Box>\n                  </Grid>\n                  <Grid item xs={6}>\n                    <Box sx={{ textAlign: 'center', p: 2, bgcolor: 'success.light', borderRadius: 1 }}>\n                      <FitnessCenter sx={{ fontSize: 32, color: 'white', mb: 1 }} />\n                      <Typography variant=\"h6\" color=\"white\">\n                        {Math.round(dailySummary.consumed.protein)}g\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"white\">\n                        Protein\n                      </Typography>\n                    </Box>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n          </CardContent>\n        </Card>\n      )}\n\n      {/* Meal Logs */}\n      <Grid container spacing={3}>\n        {mealTypes.map((meal) => (\n          <Grid item xs={12} md={6} key={meal}>\n            <Card>\n              <CardContent>\n                <Typography variant=\"h6\" gutterBottom>\n                  <Restaurant sx={{ mr: 1, verticalAlign: 'middle' }} />\n                  {meal}\n                </Typography>\n\n                {groupedLogs[meal] ? (\n                  <List dense>\n                    {groupedLogs[meal].map((log) => (\n                      <ListItem key={log.id} divider>\n                        <ListItemText\n                          primary={log.foodName}\n                          secondary={`${log.quantity}${log.unit} • ${Math.round(log.calories)} cal • ${Math.round(log.protein)}g protein`}\n                        />\n                        <ListItemSecondaryAction>\n                          <IconButton\n                            edge=\"end\"\n                            onClick={() => handleDeleteLog(log.id)}\n                            size=\"small\"\n                          >\n                            <Delete />\n                          </IconButton>\n                        </ListItemSecondaryAction>\n                      </ListItem>\n                    ))}\n                  </List>\n                ) : (\n                  <Typography variant=\"body2\" color=\"text.secondary\" sx={{ py: 2 }}>\n                    No foods logged for {meal.toLowerCase()}\n                  </Typography>\n                )}\n              </CardContent>\n            </Card>\n          </Grid>\n        ))}\n      </Grid>\n\n      {/* Add Food Dialog */}\n      <Dialog open={addFoodDialogOpen} onClose={handleCloseDialog} maxWidth=\"md\" fullWidth>\n        <DialogTitle>Add Food to Log</DialogTitle>\n        <DialogContent>\n          <Box sx={{ mb: 3, mt: 1 }}>\n            <Box sx={{ display: 'flex', gap: 2, mb: 2 }}>\n              <Button\n                variant={!isCustomFood ? \"contained\" : \"outlined\"}\n                onClick={() => setIsCustomFood(false)}\n                size=\"small\"\n              >\n                Search Foods\n              </Button>\n              <Button\n                variant={isCustomFood ? \"contained\" : \"outlined\"}\n                onClick={() => setIsCustomFood(true)}\n                size=\"small\"\n              >\n                Add Custom Food\n              </Button>\n            </Box>\n\n            {!isCustomFood ? (\n              <Autocomplete\n                options={foods}\n                getOptionLabel={(option) => option.name}\n                value={selectedFood}\n                onChange={(_, newValue) => setSelectedFood(newValue)}\n                onInputChange={(_, newInputValue) => {\n                  setSearchTerm(newInputValue);\n                  if (newInputValue.length > 2) {\n                    fetchFoods();\n                  }\n                }}\n                renderInput={(params) => (\n                  <TextField\n                    {...params}\n                    label=\"Search for food\"\n                    fullWidth\n                    placeholder=\"Type to search foods...\"\n                  />\n                )}\n                renderOption={(props, option) => (\n                  <Box component=\"li\" {...props}>\n                    <Box>\n                      <Typography variant=\"body1\">{option.name}</Typography>\n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        {option.caloriesPer100g} cal/100g • {option.category}\n                      </Typography>\n                    </Box>\n                  </Box>\n                )}\n              />\n            ) : (\n              <Grid container spacing={2}>\n                <Grid item xs={12}>\n                  <TextField\n                    fullWidth\n                    label=\"Food Name\"\n                    value={customFood.name}\n                    onChange={(e) => setCustomFood({ ...customFood, name: e.target.value })}\n                    placeholder=\"Enter custom food name\"\n                  />\n                </Grid>\n                <Grid item xs={6} sm={3}>\n                  <TextField\n                    fullWidth\n                    label=\"Calories per 100g\"\n                    type=\"number\"\n                    value={customFood.caloriesPer100g}\n                    onChange={(e) => setCustomFood({ ...customFood, caloriesPer100g: e.target.value })}\n                    inputProps={{ min: 0, step: 0.1 }}\n                  />\n                </Grid>\n                <Grid item xs={6} sm={3}>\n                  <TextField\n                    fullWidth\n                    label=\"Protein per 100g\"\n                    type=\"number\"\n                    value={customFood.proteinPer100g}\n                    onChange={(e) => setCustomFood({ ...customFood, proteinPer100g: e.target.value })}\n                    inputProps={{ min: 0, step: 0.1 }}\n                  />\n                </Grid>\n                <Grid item xs={6} sm={3}>\n                  <TextField\n                    fullWidth\n                    label=\"Carbs per 100g\"\n                    type=\"number\"\n                    value={customFood.carbsPer100g}\n                    onChange={(e) => setCustomFood({ ...customFood, carbsPer100g: e.target.value })}\n                    inputProps={{ min: 0, step: 0.1 }}\n                  />\n                </Grid>\n                <Grid item xs={6} sm={3}>\n                  <TextField\n                    fullWidth\n                    label=\"Fat per 100g\"\n                    type=\"number\"\n                    value={customFood.fatPer100g}\n                    onChange={(e) => setCustomFood({ ...customFood, fatPer100g: e.target.value })}\n                    inputProps={{ min: 0, step: 0.1 }}\n                  />\n                </Grid>\n              </Grid>\n            )}\n          </Box>\n\n          {selectedFood && (\n            <Box sx={{ mb: 3, p: 2, bgcolor: 'grey.50', borderRadius: 1 }}>\n              <Typography variant=\"h6\" gutterBottom>\n                {selectedFood.name}\n              </Typography>\n              <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\n                {selectedFood.description}\n              </Typography>\n              <Box sx={{ display: 'flex', gap: 1, flexWrap: 'wrap' }}>\n                <Chip label={`${selectedFood.caloriesPer100g} cal/100g`} size=\"small\" />\n                <Chip label={`${selectedFood.proteinPer100g}g protein/100g`} size=\"small\" />\n                <Chip label={selectedFood.category} size=\"small\" variant=\"outlined\" />\n              </Box>\n            </Box>\n          )}\n\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={4}>\n              <TextField\n                fullWidth\n                label=\"Quantity\"\n                type=\"number\"\n                value={quantity}\n                onChange={(e) => setQuantity(e.target.value)}\n                inputProps={{ min: 0, step: 0.1 }}\n              />\n            </Grid>\n            <Grid item xs={12} sm={4}>\n              <FormControl fullWidth>\n                <InputLabel>Unit</InputLabel>\n                <Select\n                  value={unit}\n                  label=\"Unit\"\n                  onChange={(e) => setUnit(e.target.value)}\n                >\n                  <MenuItem value=\"grams\">Grams</MenuItem>\n                  <MenuItem value=\"pieces\">Pieces</MenuItem>\n                  <MenuItem value=\"cups\">Cups</MenuItem>\n                  <MenuItem value=\"tablespoons\">Tablespoons</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item xs={12} sm={4}>\n              <FormControl fullWidth>\n                <InputLabel>Meal Type</InputLabel>\n                <Select\n                  value={mealType}\n                  label=\"Meal Type\"\n                  onChange={(e) => setMealType(e.target.value)}\n                >\n                  {mealTypes.map((meal) => (\n                    <MenuItem key={meal} value={meal}>\n                      {meal}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </Grid>\n          </Grid>\n\n          {((selectedFood && !isCustomFood) || (isCustomFood && customFood.name && customFood.caloriesPer100g)) && quantity && (\n            <Box sx={{ mt: 3, p: 2, bgcolor: 'primary.light', borderRadius: 1 }}>\n              <Typography variant=\"h6\" color=\"white\" gutterBottom>\n                Nutritional Information\n              </Typography>\n              <Grid container spacing={2}>\n                <Grid item xs={3}>\n                  <Typography variant=\"body2\" color=\"white\">\n                    Calories: {Math.round((\n                      isCustomFood\n                        ? parseFloat(customFood.caloriesPer100g)\n                        : selectedFood!.caloriesPer100g\n                    ) * parseFloat(quantity) / 100)}\n                  </Typography>\n                </Grid>\n                <Grid item xs={3}>\n                  <Typography variant=\"body2\" color=\"white\">\n                    Protein: {Math.round((\n                      isCustomFood\n                        ? parseFloat(customFood.proteinPer100g || '0')\n                        : selectedFood!.proteinPer100g\n                    ) * parseFloat(quantity) / 100)}g\n                  </Typography>\n                </Grid>\n                <Grid item xs={3}>\n                  <Typography variant=\"body2\" color=\"white\">\n                    Carbs: {Math.round((\n                      isCustomFood\n                        ? parseFloat(customFood.carbsPer100g || '0')\n                        : selectedFood!.carbsPer100g\n                    ) * parseFloat(quantity) / 100)}g\n                  </Typography>\n                </Grid>\n                <Grid item xs={3}>\n                  <Typography variant=\"body2\" color=\"white\">\n                    Fat: {Math.round((\n                      isCustomFood\n                        ? parseFloat(customFood.fatPer100g || '0')\n                        : selectedFood!.fatPer100g\n                    ) * parseFloat(quantity) / 100)}g\n                  </Typography>\n                </Grid>\n              </Grid>\n            </Box>\n          )}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseDialog}>Cancel</Button>\n          <Button\n            onClick={handleAddFood}\n            variant=\"contained\"\n            disabled={\n              !quantity ||\n              (!isCustomFood && !selectedFood) ||\n              (isCustomFood && (!customFood.name || !customFood.caloriesPer100g))\n            }\n          >\n            Add to Log\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Container>\n  );\n};\n\nexport default Nutrition;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SACEC,SAAS,EACTC,UAAU,EACVC,GAAG,EACHC,IAAI,EACJC,IAAI,EACJC,WAAW,EACXC,MAAM,EACNC,MAAM,EACNC,WAAW,EACXC,aAAa,EACbC,aAAa,EACbC,SAAS,EACTC,WAAW,EACXC,UAAU,EACVC,MAAM,EACNC,QAAQ,EACRC,IAAI,EACJC,cAAc,EACdC,KAAK,EACLC,gBAAgB,EAChBC,YAAY,EACZC,UAAU,EACVC,IAAI,EACJC,QAAQ,EACRC,YAAY,EACZC,uBAAuB,QAClB,eAAe;AACtB,SACEC,GAAG,EACHC,UAAU,EACVC,mBAAmB,EACnBC,aAAa,EACbC,MAAM,QACD,qBAAqB;AAC5B,SAASC,OAAO,EAAEC,UAAU,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AA8CtD,MAAMC,SAAS,GAAG,CAAC,WAAW,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,CAAC;AAEpE,MAAMC,SAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,mBAAA,EAAAC,qBAAA,EAAAC,sBAAA,EAAAC,oBAAA,EAAAC,sBAAA,EAAAC,sBAAA;EAChC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAG/C,QAAQ,CAAS,EAAE,CAAC;EAC9C,MAAM,CAACgD,QAAQ,EAAEC,WAAW,CAAC,GAAGjD,QAAQ,CAAY,EAAE,CAAC;EACvD,MAAM,CAACkD,YAAY,EAAEC,eAAe,CAAC,GAAGnD,QAAQ,CAAsB,IAAI,CAAC;EAC3E,MAAM,CAACoD,OAAO,EAAEC,UAAU,CAAC,GAAGrD,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACsD,KAAK,EAAEC,QAAQ,CAAC,GAAGvD,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACwD,YAAY,EAAEC,eAAe,CAAC,GAAGzD,QAAQ,CAAC,IAAI0D,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;;EAExF;EACA,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAG9D,QAAQ,CAAC,KAAK,CAAC;EACjE,MAAM,CAAC+D,YAAY,EAAEC,eAAe,CAAC,GAAGhE,QAAQ,CAAc,IAAI,CAAC;EACnE,MAAM,CAACiE,QAAQ,EAAEC,WAAW,CAAC,GAAGlE,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACmE,IAAI,EAAEC,OAAO,CAAC,GAAGpE,QAAQ,CAAC,OAAO,CAAC;EACzC,MAAM,CAACqE,QAAQ,EAAEC,WAAW,CAAC,GAAGtE,QAAQ,CAAC,WAAW,CAAC;EACrD,MAAM,CAACuE,UAAU,EAAEC,aAAa,CAAC,GAAGxE,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACyE,UAAU,EAAEC,aAAa,CAAC,GAAG1E,QAAQ,CAAC;IAC3C2E,IAAI,EAAE,EAAE;IACRC,eAAe,EAAE,EAAE;IACnBC,cAAc,EAAE,EAAE;IAClBC,YAAY,EAAE,EAAE;IAChBC,UAAU,EAAE;EACd,CAAC,CAAC;EACF,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGjF,QAAQ,CAAC,KAAK,CAAC;EAEvDC,SAAS,CAAC,MAAM;IACdiF,SAAS,CAAC,CAAC;IACb;EACA,CAAC,EAAE,CAAC1B,YAAY,CAAC,CAAC;EAElB,MAAM0B,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACF7B,UAAU,CAAC,IAAI,CAAC;MAChB,MAAM8B,OAAO,CAACC,GAAG,CAAC,CAChBC,UAAU,CAAC,CAAC,EACZC,aAAa,CAAC,CAAC,EACfC,iBAAiB,CAAC,CAAC,CACpB,CAAC;IACJ,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZjC,QAAQ,CAAC,+BAA+B,CAAC;IAC3C,CAAC,SAAS;MACRF,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMgC,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF,MAAMI,QAAQ,GAAG,MAAMxD,OAAO,CAACyD,MAAM,CAAC;QAAEC,MAAM,EAAEpB;MAAW,CAAC,CAAC;MAC7DxB,QAAQ,CAAC0C,QAAQ,CAAC3C,KAAK,IAAI2C,QAAQ,CAAC;IACtC,CAAC,CAAC,OAAOD,GAAG,EAAE;MACZI,OAAO,CAACtC,KAAK,CAAC,uBAAuB,EAAEkC,GAAG,CAAC;IAC7C;EACF,CAAC;EAED,MAAMF,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF,MAAMG,QAAQ,GAAG,MAAMvD,UAAU,CAAC2D,WAAW,CAACrC,YAAY,CAAC;MAC3DP,WAAW,CAACwC,QAAQ,CAACzC,QAAQ,IAAI,EAAE,CAAC;IACtC,CAAC,CAAC,OAAOwC,GAAG,EAAE;MACZI,OAAO,CAACtC,KAAK,CAAC,2BAA2B,EAAEkC,GAAG,CAAC;IACjD;EACF,CAAC;EAED,MAAMD,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAI;MACF,MAAME,QAAQ,GAAG,MAAMvD,UAAU,CAAC4D,eAAe,CAACtC,YAAY,CAAC;MAC/DL,eAAe,CAACsC,QAAQ,CAAC;IAC3B,CAAC,CAAC,OAAOD,GAAG,EAAE;MACZI,OAAO,CAACtC,KAAK,CAAC,+BAA+B,EAAEkC,GAAG,CAAC;IACrD;EACF,CAAC;EAED,MAAMO,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAK,CAAChC,YAAY,IAAI,CAACiB,YAAY,IAAK,CAACf,QAAQ,EAAE;IAEnD,IAAI;MACF,IAAI+B,OAAO;MAEX,IAAIhB,YAAY,EAAE;QAChB;QACA,MAAMiB,OAAO,GAAG;UACdtB,IAAI,EAAEF,UAAU,CAACE,IAAI;UACrBuB,WAAW,EAAE,mBAAmB;UAChCtB,eAAe,EAAEuB,UAAU,CAAC1B,UAAU,CAACG,eAAe,CAAC;UACvDC,cAAc,EAAEsB,UAAU,CAAC1B,UAAU,CAACI,cAAc,CAAC;UACrDC,YAAY,EAAEqB,UAAU,CAAC1B,UAAU,CAACK,YAAY,CAAC;UACjDC,UAAU,EAAEoB,UAAU,CAAC1B,UAAU,CAACM,UAAU,CAAC;UAC7CqB,YAAY,EAAE,CAAC;UACfC,QAAQ,EAAE;QACZ,CAAC;QAED,MAAMC,WAAW,GAAG,MAAMrE,OAAO,CAACsE,UAAU,CAACN,OAAO,CAAC;QAErDD,OAAO,GAAG;UACRQ,MAAM,EAAEF,WAAW,CAACG,EAAE;UACtBxC,QAAQ,EAAEkC,UAAU,CAAClC,QAAQ,CAAC;UAC9BE,IAAI;UACJE,QAAQ;UACRqC,QAAQ,EAAE,IAAIhD,IAAI,CAACF,YAAY,CAAC,CAACG,WAAW,CAAC;QAC/C,CAAC;MACH,CAAC,MAAM;QACLqC,OAAO,GAAG;UACRQ,MAAM,EAAEzC,YAAY,CAAE0C,EAAE;UACxBxC,QAAQ,EAAEkC,UAAU,CAAClC,QAAQ,CAAC;UAC9BE,IAAI;UACJE,QAAQ;UACRqC,QAAQ,EAAE,IAAIhD,IAAI,CAACF,YAAY,CAAC,CAACG,WAAW,CAAC;QAC/C,CAAC;MACH;MAEA,MAAMzB,UAAU,CAACyE,OAAO,CAACX,OAAO,CAAC;MACjC,MAAMd,SAAS,CAAC,CAAC;MACjB0B,iBAAiB,CAAC,CAAC;IACrB,CAAC,CAAC,OAAOpB,GAAQ,EAAE;MAAA,IAAAqB,aAAA,EAAAC,kBAAA;MACjBvD,QAAQ,CAAC,EAAAsD,aAAA,GAAArB,GAAG,CAACC,QAAQ,cAAAoB,aAAA,wBAAAC,kBAAA,GAAZD,aAAA,CAAcE,IAAI,cAAAD,kBAAA,uBAAlBA,kBAAA,CAAoBE,OAAO,KAAI,oBAAoB,CAAC;IAC/D;EACF,CAAC;EAED,MAAMC,eAAe,GAAG,MAAOC,KAAa,IAAK;IAC/C,IAAI;MACF,MAAMhF,UAAU,CAACiF,aAAa,CAACD,KAAK,CAAC;MACrC,MAAMhC,SAAS,CAAC,CAAC;IACnB,CAAC,CAAC,OAAOM,GAAQ,EAAE;MAAA,IAAA4B,cAAA,EAAAC,mBAAA;MACjB9D,QAAQ,CAAC,EAAA6D,cAAA,GAAA5B,GAAG,CAACC,QAAQ,cAAA2B,cAAA,wBAAAC,mBAAA,GAAZD,cAAA,CAAcL,IAAI,cAAAM,mBAAA,uBAAlBA,mBAAA,CAAoBL,OAAO,KAAI,sBAAsB,CAAC;IACjE;EACF,CAAC;EAED,MAAMJ,iBAAiB,GAAGA,CAAA,KAAM;IAC9B9C,oBAAoB,CAAC,KAAK,CAAC;IAC3BE,eAAe,CAAC,IAAI,CAAC;IACrBE,WAAW,CAAC,KAAK,CAAC;IAClBE,OAAO,CAAC,OAAO,CAAC;IAChBE,WAAW,CAAC,WAAW,CAAC;IACxBW,eAAe,CAAC,KAAK,CAAC;IACtBP,aAAa,CAAC;MACZC,IAAI,EAAE,EAAE;MACRC,eAAe,EAAE,EAAE;MACnBC,cAAc,EAAE,EAAE;MAClBC,YAAY,EAAE,EAAE;MAChBC,UAAU,EAAE;IACd,CAAC,CAAC;EACJ,CAAC;EAED,MAAMuC,gBAAgB,GAAIC,QAAgB,IAAK;IAC7C,IAAIA,QAAQ,GAAG,EAAE,EAAE,OAAO,OAAO;IACjC,IAAIA,QAAQ,GAAG,EAAE,EAAE,OAAO,SAAS;IACnC,IAAIA,QAAQ,IAAI,GAAG,EAAE,OAAO,SAAS;IACrC,OAAO,MAAM;EACf,CAAC;EAED,MAAMC,mBAAmB,GAAIC,IAAe,IAAK;IAC/C,OAAOA,IAAI,CAACC,MAAM,CAAC,CAACC,MAAM,EAAEC,GAAG,KAAK;MAClC,MAAMvD,QAAQ,GAAGuD,GAAG,CAACvD,QAAQ,IAAI,OAAO;MACxC,IAAI,CAACsD,MAAM,CAACtD,QAAQ,CAAC,EAAE;QACrBsD,MAAM,CAACtD,QAAQ,CAAC,GAAG,EAAE;MACvB;MACAsD,MAAM,CAACtD,QAAQ,CAAC,CAACwD,IAAI,CAACD,GAAG,CAAC;MAC1B,OAAOD,MAAM;IACf,CAAC,EAAE,CAAC,CAA8B,CAAC;EACrC,CAAC;EAED,IAAIvE,OAAO,EAAE;IACX,oBACEhB,OAAA,CAAClC,SAAS;MAAC4H,QAAQ,EAAC,IAAI;MAAAC,QAAA,eACtB3F,OAAA,CAAChC,GAAG;QAAC4H,OAAO,EAAC,MAAM;QAACC,cAAc,EAAC,QAAQ;QAACC,UAAU,EAAC,QAAQ;QAACC,SAAS,EAAC,OAAO;QAAAJ,QAAA,eAC/E3F,OAAA,CAACf,gBAAgB;UAAA+G,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAEhB;EAEA,MAAMC,WAAW,GAAGhB,mBAAmB,CAACxE,QAAQ,CAAC;EAEjD,oBACEZ,OAAA,CAAClC,SAAS;IAAC4H,QAAQ,EAAC,IAAI;IAAAC,QAAA,gBACtB3F,OAAA,CAAChC,GAAG;MAACqI,EAAE,EAAE;QAAEC,EAAE,EAAE;MAAE,CAAE;MAAAX,QAAA,gBACjB3F,OAAA,CAACjC,UAAU;QAACwI,OAAO,EAAC,IAAI;QAACC,SAAS,EAAC,IAAI;QAACC,YAAY;QAAAd,QAAA,EAAC;MAErD;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eACbnG,OAAA,CAACjC,UAAU;QAACwI,OAAO,EAAC,OAAO;QAACG,KAAK,EAAC,gBAAgB;QAAAf,QAAA,EAAC;MAEnD;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC,EAELjF,KAAK,iBACJlB,OAAA,CAAChB,KAAK;MAAC2H,QAAQ,EAAC,OAAO;MAACN,EAAE,EAAE;QAAEC,EAAE,EAAE;MAAE,CAAE;MAACM,OAAO,EAAEA,CAAA,KAAMzF,QAAQ,CAAC,EAAE,CAAE;MAAAwE,QAAA,EAChEzE;IAAK;MAAA8E,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CACR,eAGDnG,OAAA,CAAChC,GAAG;MAACqI,EAAE,EAAE;QAAEC,EAAE,EAAE,CAAC;QAAEV,OAAO,EAAE,MAAM;QAAEC,cAAc,EAAE,eAAe;QAAEC,UAAU,EAAE;MAAS,CAAE;MAAAH,QAAA,gBACzF3F,OAAA,CAACvB,SAAS;QACRoI,IAAI,EAAC,MAAM;QACXC,KAAK,EAAC,MAAM;QACZC,KAAK,EAAE3F,YAAa;QACpB4F,QAAQ,EAAGC,CAAC,IAAK5F,eAAe,CAAC4F,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QACjDI,eAAe,EAAE;UAAEC,MAAM,EAAE;QAAK;MAAE;QAAApB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnC,CAAC,eACFnG,OAAA,CAAC5B,MAAM;QACLmI,OAAO,EAAC,WAAW;QACnBc,SAAS,eAAErH,OAAA,CAACR,GAAG;UAAAwG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAE;QACnBmB,OAAO,EAAEA,CAAA,KAAM5F,oBAAoB,CAAC,IAAI,CAAE;QAAAiE,QAAA,EAC3C;MAED;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,EAGLrF,YAAY,iBACXd,OAAA,CAAC9B,IAAI;MAACmI,EAAE,EAAE;QAAEC,EAAE,EAAE;MAAE,CAAE;MAAAX,QAAA,eAClB3F,OAAA,CAAC7B,WAAW;QAAAwH,QAAA,gBACV3F,OAAA,CAACjC,UAAU;UAACwI,OAAO,EAAC,IAAI;UAACE,YAAY;UAAAd,QAAA,GAAC,kBACpB,EAAC,IAAIrE,IAAI,CAACF,YAAY,CAAC,CAACmG,kBAAkB,CAAC,CAAC;QAAA;UAAAvB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClD,CAAC,eAEbnG,OAAA,CAAC/B,IAAI;UAACuJ,SAAS;UAACC,OAAO,EAAE,CAAE;UAAA9B,QAAA,gBACzB3F,OAAA,CAAC/B,IAAI;YAACyJ,IAAI;YAACC,EAAE,EAAE,EAAG;YAACC,EAAE,EAAE,CAAE;YAAAjC,QAAA,gBACvB3F,OAAA,CAAChC,GAAG;cAACqI,EAAE,EAAE;gBAAEC,EAAE,EAAE;cAAE,CAAE;cAAAX,QAAA,gBACjB3F,OAAA,CAAChC,GAAG;gBAACqI,EAAE,EAAE;kBAAET,OAAO,EAAE,MAAM;kBAAEC,cAAc,EAAE,eAAe;kBAAES,EAAE,EAAE;gBAAE,CAAE;gBAAAX,QAAA,gBACnE3F,OAAA,CAACjC,UAAU;kBAACwI,OAAO,EAAC,OAAO;kBAAAZ,QAAA,EAAC;gBAAQ;kBAAAK,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAY,CAAC,eACjDnG,OAAA,CAACjC,UAAU;kBAACwI,OAAO,EAAC,OAAO;kBAAAZ,QAAA,GACxBkC,IAAI,CAACC,KAAK,CAAChH,YAAY,CAACiH,QAAQ,CAACC,QAAQ,CAAC,EAAC,KAAG,EAAC,EAAA5H,mBAAA,GAAAU,YAAY,CAACmH,KAAK,cAAA7H,mBAAA,uBAAlBA,mBAAA,CAAoB4H,QAAQ,KAAI,CAAC;gBAAA;kBAAAhC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACvE,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACV,CAAC,eACNnG,OAAA,CAACjB,cAAc;gBACbwH,OAAO,EAAC,aAAa;gBACrBQ,KAAK,EAAEc,IAAI,CAACK,GAAG,CAAC,EAAA7H,qBAAA,GAAAS,YAAY,CAACqE,QAAQ,cAAA9E,qBAAA,uBAArBA,qBAAA,CAAuB8H,eAAe,KAAI,CAAC,EAAE,GAAG,CAAE;gBAClEzB,KAAK,EAAExB,gBAAgB,CAAC,EAAA5E,sBAAA,GAAAQ,YAAY,CAACqE,QAAQ,cAAA7E,sBAAA,uBAArBA,sBAAA,CAAuB6H,eAAe,KAAI,CAAC,CAAE;gBACrE9B,EAAE,EAAE;kBAAE+B,MAAM,EAAE,CAAC;kBAAEC,YAAY,EAAE;gBAAE;cAAE;gBAAArC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACpC,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC,eAENnG,OAAA,CAAChC,GAAG;cAACqI,EAAE,EAAE;gBAAEC,EAAE,EAAE;cAAE,CAAE;cAAAX,QAAA,gBACjB3F,OAAA,CAAChC,GAAG;gBAACqI,EAAE,EAAE;kBAAET,OAAO,EAAE,MAAM;kBAAEC,cAAc,EAAE,eAAe;kBAAES,EAAE,EAAE;gBAAE,CAAE;gBAAAX,QAAA,gBACnE3F,OAAA,CAACjC,UAAU;kBAACwI,OAAO,EAAC,OAAO;kBAAAZ,QAAA,EAAC;gBAAO;kBAAAK,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAY,CAAC,eAChDnG,OAAA,CAACjC,UAAU;kBAACwI,OAAO,EAAC,OAAO;kBAAAZ,QAAA,GACxBkC,IAAI,CAACC,KAAK,CAAChH,YAAY,CAACiH,QAAQ,CAACO,OAAO,CAAC,EAAC,MAAI,EAAC,EAAA/H,oBAAA,GAAAO,YAAY,CAACmH,KAAK,cAAA1H,oBAAA,uBAAlBA,oBAAA,CAAoB+H,OAAO,KAAI,CAAC,EAAC,GACnF;gBAAA;kBAAAtC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAY,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACV,CAAC,eACNnG,OAAA,CAACjB,cAAc;gBACbwH,OAAO,EAAC,aAAa;gBACrBQ,KAAK,EAAEc,IAAI,CAACK,GAAG,CAAC,EAAA1H,sBAAA,GAAAM,YAAY,CAACqE,QAAQ,cAAA3E,sBAAA,uBAArBA,sBAAA,CAAuB+H,eAAe,KAAI,CAAC,EAAE,GAAG,CAAE;gBAClE7B,KAAK,EAAExB,gBAAgB,CAAC,EAAAzE,sBAAA,GAAAK,YAAY,CAACqE,QAAQ,cAAA1E,sBAAA,uBAArBA,sBAAA,CAAuB8H,eAAe,KAAI,CAAC,CAAE;gBACrElC,EAAE,EAAE;kBAAE+B,MAAM,EAAE,CAAC;kBAAEC,YAAY,EAAE;gBAAE;cAAE;gBAAArC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACpC,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC,eAEPnG,OAAA,CAAC/B,IAAI;YAACyJ,IAAI;YAACC,EAAE,EAAE,EAAG;YAACC,EAAE,EAAE,CAAE;YAAAjC,QAAA,eACvB3F,OAAA,CAAC/B,IAAI;cAACuJ,SAAS;cAACC,OAAO,EAAE,CAAE;cAAA9B,QAAA,gBACzB3F,OAAA,CAAC/B,IAAI;gBAACyJ,IAAI;gBAACC,EAAE,EAAE,CAAE;gBAAAhC,QAAA,eACf3F,OAAA,CAAChC,GAAG;kBAACqI,EAAE,EAAE;oBAAEmC,SAAS,EAAE,QAAQ;oBAAEC,CAAC,EAAE,CAAC;oBAAEC,OAAO,EAAE,eAAe;oBAAEL,YAAY,EAAE;kBAAE,CAAE;kBAAA1C,QAAA,gBAChF3F,OAAA,CAACN,mBAAmB;oBAAC2G,EAAE,EAAE;sBAAEsC,QAAQ,EAAE,EAAE;sBAAEjC,KAAK,EAAE,OAAO;sBAAEJ,EAAE,EAAE;oBAAE;kBAAE;oBAAAN,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE,CAAC,eACpEnG,OAAA,CAACjC,UAAU;oBAACwI,OAAO,EAAC,IAAI;oBAACG,KAAK,EAAC,OAAO;oBAAAf,QAAA,EACnCkC,IAAI,CAACC,KAAK,CAAChH,YAAY,CAACiH,QAAQ,CAACC,QAAQ;kBAAC;oBAAAhC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACjC,CAAC,eACbnG,OAAA,CAACjC,UAAU;oBAACwI,OAAO,EAAC,OAAO;oBAACG,KAAK,EAAC,OAAO;oBAAAf,QAAA,EAAC;kBAE1C;oBAAAK,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAY,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACV;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACF,CAAC,eACPnG,OAAA,CAAC/B,IAAI;gBAACyJ,IAAI;gBAACC,EAAE,EAAE,CAAE;gBAAAhC,QAAA,eACf3F,OAAA,CAAChC,GAAG;kBAACqI,EAAE,EAAE;oBAAEmC,SAAS,EAAE,QAAQ;oBAAEC,CAAC,EAAE,CAAC;oBAAEC,OAAO,EAAE,eAAe;oBAAEL,YAAY,EAAE;kBAAE,CAAE;kBAAA1C,QAAA,gBAChF3F,OAAA,CAACL,aAAa;oBAAC0G,EAAE,EAAE;sBAAEsC,QAAQ,EAAE,EAAE;sBAAEjC,KAAK,EAAE,OAAO;sBAAEJ,EAAE,EAAE;oBAAE;kBAAE;oBAAAN,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE,CAAC,eAC9DnG,OAAA,CAACjC,UAAU;oBAACwI,OAAO,EAAC,IAAI;oBAACG,KAAK,EAAC,OAAO;oBAAAf,QAAA,GACnCkC,IAAI,CAACC,KAAK,CAAChH,YAAY,CAACiH,QAAQ,CAACO,OAAO,CAAC,EAAC,GAC7C;kBAAA;oBAAAtC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAY,CAAC,eACbnG,OAAA,CAACjC,UAAU;oBAACwI,OAAO,EAAC,OAAO;oBAACG,KAAK,EAAC,OAAO;oBAAAf,QAAA,EAAC;kBAE1C;oBAAAK,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAY,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACV;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACF,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CACP,eAGDnG,OAAA,CAAC/B,IAAI;MAACuJ,SAAS;MAACC,OAAO,EAAE,CAAE;MAAA9B,QAAA,EACxB1F,SAAS,CAAC2I,GAAG,CAAEC,IAAI,iBAClB7I,OAAA,CAAC/B,IAAI;QAACyJ,IAAI;QAACC,EAAE,EAAE,EAAG;QAACC,EAAE,EAAE,CAAE;QAAAjC,QAAA,eACvB3F,OAAA,CAAC9B,IAAI;UAAAyH,QAAA,eACH3F,OAAA,CAAC7B,WAAW;YAAAwH,QAAA,gBACV3F,OAAA,CAACjC,UAAU;cAACwI,OAAO,EAAC,IAAI;cAACE,YAAY;cAAAd,QAAA,gBACnC3F,OAAA,CAACP,UAAU;gBAAC4G,EAAE,EAAE;kBAAEyC,EAAE,EAAE,CAAC;kBAAEC,aAAa,EAAE;gBAAS;cAAE;gBAAA/C,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,EACrD0C,IAAI;YAAA;cAAA7C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACK,CAAC,EAEZC,WAAW,CAACyC,IAAI,CAAC,gBAChB7I,OAAA,CAACZ,IAAI;cAAC4J,KAAK;cAAArD,QAAA,EACRS,WAAW,CAACyC,IAAI,CAAC,CAACD,GAAG,CAAEpD,GAAG,iBACzBxF,OAAA,CAACX,QAAQ;gBAAc4J,OAAO;gBAAAtD,QAAA,gBAC5B3F,OAAA,CAACV,YAAY;kBACX4J,OAAO,EAAE1D,GAAG,CAAC2D,QAAS;kBACtBC,SAAS,EAAE,GAAG5D,GAAG,CAAC3D,QAAQ,GAAG2D,GAAG,CAACzD,IAAI,MAAM8F,IAAI,CAACC,KAAK,CAACtC,GAAG,CAACwC,QAAQ,CAAC,UAAUH,IAAI,CAACC,KAAK,CAACtC,GAAG,CAAC8C,OAAO,CAAC;gBAAY;kBAAAtC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACjH,CAAC,eACFnG,OAAA,CAACT,uBAAuB;kBAAAoG,QAAA,eACtB3F,OAAA,CAACb,UAAU;oBACTkK,IAAI,EAAC,KAAK;oBACV/B,OAAO,EAAEA,CAAA,KAAMzC,eAAe,CAACW,GAAG,CAACnB,EAAE,CAAE;oBACvCiF,IAAI,EAAC,OAAO;oBAAA3D,QAAA,eAEZ3F,OAAA,CAACJ,MAAM;sBAAAoG,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAE;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACA;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACU,CAAC;cAAA,GAbbX,GAAG,CAACnB,EAAE;gBAAA2B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAcX,CACX;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CAAC,gBAEPnG,OAAA,CAACjC,UAAU;cAACwI,OAAO,EAAC,OAAO;cAACG,KAAK,EAAC,gBAAgB;cAACL,EAAE,EAAE;gBAAEkD,EAAE,EAAE;cAAE,CAAE;cAAA5D,QAAA,GAAC,sBAC5C,EAACkD,IAAI,CAACW,WAAW,CAAC,CAAC;YAAA;cAAAxD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC7B,CACb;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACU;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV;MAAC,GAlCsB0C,IAAI;QAAA7C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAmC7B,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eAGPnG,OAAA,CAAC3B,MAAM;MAACoL,IAAI,EAAEhI,iBAAkB;MAACmF,OAAO,EAAEpC,iBAAkB;MAACkB,QAAQ,EAAC,IAAI;MAACgE,SAAS;MAAA/D,QAAA,gBAClF3F,OAAA,CAAC1B,WAAW;QAAAqH,QAAA,EAAC;MAAe;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAAC,eAC1CnG,OAAA,CAACzB,aAAa;QAAAoH,QAAA,gBACZ3F,OAAA,CAAChC,GAAG;UAACqI,EAAE,EAAE;YAAEC,EAAE,EAAE,CAAC;YAAEqD,EAAE,EAAE;UAAE,CAAE;UAAAhE,QAAA,gBACxB3F,OAAA,CAAChC,GAAG;YAACqI,EAAE,EAAE;cAAET,OAAO,EAAE,MAAM;cAAEgE,GAAG,EAAE,CAAC;cAAEtD,EAAE,EAAE;YAAE,CAAE;YAAAX,QAAA,gBAC1C3F,OAAA,CAAC5B,MAAM;cACLmI,OAAO,EAAE,CAAC3D,YAAY,GAAG,WAAW,GAAG,UAAW;cAClD0E,OAAO,EAAEA,CAAA,KAAMzE,eAAe,CAAC,KAAK,CAAE;cACtCyG,IAAI,EAAC,OAAO;cAAA3D,QAAA,EACb;YAED;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACTnG,OAAA,CAAC5B,MAAM;cACLmI,OAAO,EAAE3D,YAAY,GAAG,WAAW,GAAG,UAAW;cACjD0E,OAAO,EAAEA,CAAA,KAAMzE,eAAe,CAAC,IAAI,CAAE;cACrCyG,IAAI,EAAC,OAAO;cAAA3D,QAAA,EACb;YAED;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC,EAEL,CAACvD,YAAY,gBACZ5C,OAAA,CAACd,YAAY;YACX2K,OAAO,EAAEnJ,KAAM;YACfoJ,cAAc,EAAGC,MAAM,IAAKA,MAAM,CAACxH,IAAK;YACxCwE,KAAK,EAAEpF,YAAa;YACpBqF,QAAQ,EAAEA,CAACgD,CAAC,EAAEC,QAAQ,KAAKrI,eAAe,CAACqI,QAAQ,CAAE;YACrDC,aAAa,EAAEA,CAACF,CAAC,EAAEG,aAAa,KAAK;cACnC/H,aAAa,CAAC+H,aAAa,CAAC;cAC5B,IAAIA,aAAa,CAACC,MAAM,GAAG,CAAC,EAAE;gBAC5BnH,UAAU,CAAC,CAAC;cACd;YACF,CAAE;YACFoH,WAAW,EAAGC,MAAM,iBAClBtK,OAAA,CAACvB,SAAS;cAAA,GACJ6L,MAAM;cACVxD,KAAK,EAAC,iBAAiB;cACvB4C,SAAS;cACTa,WAAW,EAAC;YAAyB;cAAAvE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACtC,CACD;YACFqE,YAAY,EAAEA,CAACC,KAAK,EAAEV,MAAM,kBAC1B/J,OAAA,CAAChC,GAAG;cAACwI,SAAS,EAAC,IAAI;cAAA,GAAKiE,KAAK;cAAA9E,QAAA,eAC3B3F,OAAA,CAAChC,GAAG;gBAAA2H,QAAA,gBACF3F,OAAA,CAACjC,UAAU;kBAACwI,OAAO,EAAC,OAAO;kBAAAZ,QAAA,EAAEoE,MAAM,CAACxH;gBAAI;kBAAAyD,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAa,CAAC,eACtDnG,OAAA,CAACjC,UAAU;kBAACwI,OAAO,EAAC,OAAO;kBAACG,KAAK,EAAC,gBAAgB;kBAAAf,QAAA,GAC/CoE,MAAM,CAACvH,eAAe,EAAC,mBAAY,EAACuH,MAAM,CAAC9F,QAAQ;gBAAA;kBAAA+B,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC1C,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACV;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH;UACL;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,gBAEFnG,OAAA,CAAC/B,IAAI;YAACuJ,SAAS;YAACC,OAAO,EAAE,CAAE;YAAA9B,QAAA,gBACzB3F,OAAA,CAAC/B,IAAI;cAACyJ,IAAI;cAACC,EAAE,EAAE,EAAG;cAAAhC,QAAA,eAChB3F,OAAA,CAACvB,SAAS;gBACRiL,SAAS;gBACT5C,KAAK,EAAC,WAAW;gBACjBC,KAAK,EAAE1E,UAAU,CAACE,IAAK;gBACvByE,QAAQ,EAAGC,CAAC,IAAK3E,aAAa,CAAC;kBAAE,GAAGD,UAAU;kBAAEE,IAAI,EAAE0E,CAAC,CAACC,MAAM,CAACH;gBAAM,CAAC,CAAE;gBACxEwD,WAAW,EAAC;cAAwB;gBAAAvE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACrC;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CAAC,eACPnG,OAAA,CAAC/B,IAAI;cAACyJ,IAAI;cAACC,EAAE,EAAE,CAAE;cAAC+C,EAAE,EAAE,CAAE;cAAA/E,QAAA,eACtB3F,OAAA,CAACvB,SAAS;gBACRiL,SAAS;gBACT5C,KAAK,EAAC,mBAAmB;gBACzBD,IAAI,EAAC,QAAQ;gBACbE,KAAK,EAAE1E,UAAU,CAACG,eAAgB;gBAClCwE,QAAQ,EAAGC,CAAC,IAAK3E,aAAa,CAAC;kBAAE,GAAGD,UAAU;kBAAEG,eAAe,EAAEyE,CAAC,CAACC,MAAM,CAACH;gBAAM,CAAC,CAAE;gBACnF4D,UAAU,EAAE;kBAAEzC,GAAG,EAAE,CAAC;kBAAE0C,IAAI,EAAE;gBAAI;cAAE;gBAAA5E,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACnC;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CAAC,eACPnG,OAAA,CAAC/B,IAAI;cAACyJ,IAAI;cAACC,EAAE,EAAE,CAAE;cAAC+C,EAAE,EAAE,CAAE;cAAA/E,QAAA,eACtB3F,OAAA,CAACvB,SAAS;gBACRiL,SAAS;gBACT5C,KAAK,EAAC,kBAAkB;gBACxBD,IAAI,EAAC,QAAQ;gBACbE,KAAK,EAAE1E,UAAU,CAACI,cAAe;gBACjCuE,QAAQ,EAAGC,CAAC,IAAK3E,aAAa,CAAC;kBAAE,GAAGD,UAAU;kBAAEI,cAAc,EAAEwE,CAAC,CAACC,MAAM,CAACH;gBAAM,CAAC,CAAE;gBAClF4D,UAAU,EAAE;kBAAEzC,GAAG,EAAE,CAAC;kBAAE0C,IAAI,EAAE;gBAAI;cAAE;gBAAA5E,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACnC;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CAAC,eACPnG,OAAA,CAAC/B,IAAI;cAACyJ,IAAI;cAACC,EAAE,EAAE,CAAE;cAAC+C,EAAE,EAAE,CAAE;cAAA/E,QAAA,eACtB3F,OAAA,CAACvB,SAAS;gBACRiL,SAAS;gBACT5C,KAAK,EAAC,gBAAgB;gBACtBD,IAAI,EAAC,QAAQ;gBACbE,KAAK,EAAE1E,UAAU,CAACK,YAAa;gBAC/BsE,QAAQ,EAAGC,CAAC,IAAK3E,aAAa,CAAC;kBAAE,GAAGD,UAAU;kBAAEK,YAAY,EAAEuE,CAAC,CAACC,MAAM,CAACH;gBAAM,CAAC,CAAE;gBAChF4D,UAAU,EAAE;kBAAEzC,GAAG,EAAE,CAAC;kBAAE0C,IAAI,EAAE;gBAAI;cAAE;gBAAA5E,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACnC;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CAAC,eACPnG,OAAA,CAAC/B,IAAI;cAACyJ,IAAI;cAACC,EAAE,EAAE,CAAE;cAAC+C,EAAE,EAAE,CAAE;cAAA/E,QAAA,eACtB3F,OAAA,CAACvB,SAAS;gBACRiL,SAAS;gBACT5C,KAAK,EAAC,cAAc;gBACpBD,IAAI,EAAC,QAAQ;gBACbE,KAAK,EAAE1E,UAAU,CAACM,UAAW;gBAC7BqE,QAAQ,EAAGC,CAAC,IAAK3E,aAAa,CAAC;kBAAE,GAAGD,UAAU;kBAAEM,UAAU,EAAEsE,CAAC,CAACC,MAAM,CAACH;gBAAM,CAAC,CAAE;gBAC9E4D,UAAU,EAAE;kBAAEzC,GAAG,EAAE,CAAC;kBAAE0C,IAAI,EAAE;gBAAI;cAAE;gBAAA5E,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACnC;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CACP;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,EAELxE,YAAY,iBACX3B,OAAA,CAAChC,GAAG;UAACqI,EAAE,EAAE;YAAEC,EAAE,EAAE,CAAC;YAAEmC,CAAC,EAAE,CAAC;YAAEC,OAAO,EAAE,SAAS;YAAEL,YAAY,EAAE;UAAE,CAAE;UAAA1C,QAAA,gBAC5D3F,OAAA,CAACjC,UAAU;YAACwI,OAAO,EAAC,IAAI;YAACE,YAAY;YAAAd,QAAA,EAClChE,YAAY,CAACY;UAAI;YAAAyD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACR,CAAC,eACbnG,OAAA,CAACjC,UAAU;YAACwI,OAAO,EAAC,OAAO;YAACG,KAAK,EAAC,gBAAgB;YAACD,YAAY;YAAAd,QAAA,EAC5DhE,YAAY,CAACmC;UAAW;YAAAkC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACf,CAAC,eACbnG,OAAA,CAAChC,GAAG;YAACqI,EAAE,EAAE;cAAET,OAAO,EAAE,MAAM;cAAEgE,GAAG,EAAE,CAAC;cAAEiB,QAAQ,EAAE;YAAO,CAAE;YAAAlF,QAAA,gBACrD3F,OAAA,CAAClB,IAAI;cAACgI,KAAK,EAAE,GAAGnF,YAAY,CAACa,eAAe,WAAY;cAAC8G,IAAI,EAAC;YAAO;cAAAtD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eACxEnG,OAAA,CAAClB,IAAI;cAACgI,KAAK,EAAE,GAAGnF,YAAY,CAACc,cAAc,gBAAiB;cAAC6G,IAAI,EAAC;YAAO;cAAAtD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eAC5EnG,OAAA,CAAClB,IAAI;cAACgI,KAAK,EAAEnF,YAAY,CAACsC,QAAS;cAACqF,IAAI,EAAC,OAAO;cAAC/C,OAAO,EAAC;YAAU;cAAAP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CACN,eAEDnG,OAAA,CAAC/B,IAAI;UAACuJ,SAAS;UAACC,OAAO,EAAE,CAAE;UAAA9B,QAAA,gBACzB3F,OAAA,CAAC/B,IAAI;YAACyJ,IAAI;YAACC,EAAE,EAAE,EAAG;YAAC+C,EAAE,EAAE,CAAE;YAAA/E,QAAA,eACvB3F,OAAA,CAACvB,SAAS;cACRiL,SAAS;cACT5C,KAAK,EAAC,UAAU;cAChBD,IAAI,EAAC,QAAQ;cACbE,KAAK,EAAElF,QAAS;cAChBmF,QAAQ,EAAGC,CAAC,IAAKnF,WAAW,CAACmF,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;cAC7C4D,UAAU,EAAE;gBAAEzC,GAAG,EAAE,CAAC;gBAAE0C,IAAI,EAAE;cAAI;YAAE;cAAA5E,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACnC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC,eACPnG,OAAA,CAAC/B,IAAI;YAACyJ,IAAI;YAACC,EAAE,EAAE,EAAG;YAAC+C,EAAE,EAAE,CAAE;YAAA/E,QAAA,eACvB3F,OAAA,CAACtB,WAAW;cAACgL,SAAS;cAAA/D,QAAA,gBACpB3F,OAAA,CAACrB,UAAU;gBAAAgH,QAAA,EAAC;cAAI;gBAAAK,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eAC7BnG,OAAA,CAACpB,MAAM;gBACLmI,KAAK,EAAEhF,IAAK;gBACZ+E,KAAK,EAAC,MAAM;gBACZE,QAAQ,EAAGC,CAAC,IAAKjF,OAAO,CAACiF,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;gBAAApB,QAAA,gBAEzC3F,OAAA,CAACnB,QAAQ;kBAACkI,KAAK,EAAC,OAAO;kBAAApB,QAAA,EAAC;gBAAK;kBAAAK,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAU,CAAC,eACxCnG,OAAA,CAACnB,QAAQ;kBAACkI,KAAK,EAAC,QAAQ;kBAAApB,QAAA,EAAC;gBAAM;kBAAAK,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAU,CAAC,eAC1CnG,OAAA,CAACnB,QAAQ;kBAACkI,KAAK,EAAC,MAAM;kBAAApB,QAAA,EAAC;gBAAI;kBAAAK,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAU,CAAC,eACtCnG,OAAA,CAACnB,QAAQ;kBAACkI,KAAK,EAAC,aAAa;kBAAApB,QAAA,EAAC;gBAAW;kBAAAK,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAU,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC9C,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACV,CAAC,eACPnG,OAAA,CAAC/B,IAAI;YAACyJ,IAAI;YAACC,EAAE,EAAE,EAAG;YAAC+C,EAAE,EAAE,CAAE;YAAA/E,QAAA,eACvB3F,OAAA,CAACtB,WAAW;cAACgL,SAAS;cAAA/D,QAAA,gBACpB3F,OAAA,CAACrB,UAAU;gBAAAgH,QAAA,EAAC;cAAS;gBAAAK,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eAClCnG,OAAA,CAACpB,MAAM;gBACLmI,KAAK,EAAE9E,QAAS;gBAChB6E,KAAK,EAAC,WAAW;gBACjBE,QAAQ,EAAGC,CAAC,IAAK/E,WAAW,CAAC+E,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;gBAAApB,QAAA,EAE5C1F,SAAS,CAAC2I,GAAG,CAAEC,IAAI,iBAClB7I,OAAA,CAACnB,QAAQ;kBAAYkI,KAAK,EAAE8B,IAAK;kBAAAlD,QAAA,EAC9BkD;gBAAI,GADQA,IAAI;kBAAA7C,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAET,CACX;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACI,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACV,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,EAEN,CAAExE,YAAY,IAAI,CAACiB,YAAY,IAAMA,YAAY,IAAIP,UAAU,CAACE,IAAI,IAAIF,UAAU,CAACG,eAAgB,KAAKX,QAAQ,iBAC/G7B,OAAA,CAAChC,GAAG;UAACqI,EAAE,EAAE;YAAEsD,EAAE,EAAE,CAAC;YAAElB,CAAC,EAAE,CAAC;YAAEC,OAAO,EAAE,eAAe;YAAEL,YAAY,EAAE;UAAE,CAAE;UAAA1C,QAAA,gBAClE3F,OAAA,CAACjC,UAAU;YAACwI,OAAO,EAAC,IAAI;YAACG,KAAK,EAAC,OAAO;YAACD,YAAY;YAAAd,QAAA,EAAC;UAEpD;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eACbnG,OAAA,CAAC/B,IAAI;YAACuJ,SAAS;YAACC,OAAO,EAAE,CAAE;YAAA9B,QAAA,gBACzB3F,OAAA,CAAC/B,IAAI;cAACyJ,IAAI;cAACC,EAAE,EAAE,CAAE;cAAAhC,QAAA,eACf3F,OAAA,CAACjC,UAAU;gBAACwI,OAAO,EAAC,OAAO;gBAACG,KAAK,EAAC,OAAO;gBAAAf,QAAA,GAAC,YAC9B,EAACkC,IAAI,CAACC,KAAK,CAAC,CACpBlF,YAAY,GACRmB,UAAU,CAAC1B,UAAU,CAACG,eAAe,CAAC,GACtCb,YAAY,CAAEa,eAAe,IAC/BuB,UAAU,CAAClC,QAAQ,CAAC,GAAG,GAAG,CAAC;cAAA;gBAAAmE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACrB;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACT,CAAC,eACPnG,OAAA,CAAC/B,IAAI;cAACyJ,IAAI;cAACC,EAAE,EAAE,CAAE;cAAAhC,QAAA,eACf3F,OAAA,CAACjC,UAAU;gBAACwI,OAAO,EAAC,OAAO;gBAACG,KAAK,EAAC,OAAO;gBAAAf,QAAA,GAAC,WAC/B,EAACkC,IAAI,CAACC,KAAK,CAAC,CACnBlF,YAAY,GACRmB,UAAU,CAAC1B,UAAU,CAACI,cAAc,IAAI,GAAG,CAAC,GAC5Cd,YAAY,CAAEc,cAAc,IAC9BsB,UAAU,CAAClC,QAAQ,CAAC,GAAG,GAAG,CAAC,EAAC,GAClC;cAAA;gBAAAmE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACT,CAAC,eACPnG,OAAA,CAAC/B,IAAI;cAACyJ,IAAI;cAACC,EAAE,EAAE,CAAE;cAAAhC,QAAA,eACf3F,OAAA,CAACjC,UAAU;gBAACwI,OAAO,EAAC,OAAO;gBAACG,KAAK,EAAC,OAAO;gBAAAf,QAAA,GAAC,SACjC,EAACkC,IAAI,CAACC,KAAK,CAAC,CACjBlF,YAAY,GACRmB,UAAU,CAAC1B,UAAU,CAACK,YAAY,IAAI,GAAG,CAAC,GAC1Cf,YAAY,CAAEe,YAAY,IAC5BqB,UAAU,CAAClC,QAAQ,CAAC,GAAG,GAAG,CAAC,EAAC,GAClC;cAAA;gBAAAmE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACT,CAAC,eACPnG,OAAA,CAAC/B,IAAI;cAACyJ,IAAI;cAACC,EAAE,EAAE,CAAE;cAAAhC,QAAA,eACf3F,OAAA,CAACjC,UAAU;gBAACwI,OAAO,EAAC,OAAO;gBAACG,KAAK,EAAC,OAAO;gBAAAf,QAAA,GAAC,OACnC,EAACkC,IAAI,CAACC,KAAK,CAAC,CACflF,YAAY,GACRmB,UAAU,CAAC1B,UAAU,CAACM,UAAU,IAAI,GAAG,CAAC,GACxChB,YAAY,CAAEgB,UAAU,IAC1BoB,UAAU,CAAClC,QAAQ,CAAC,GAAG,GAAG,CAAC,EAAC,GAClC;cAAA;gBAAAmE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACT,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CACN;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACY,CAAC,eAChBnG,OAAA,CAACxB,aAAa;QAAAmH,QAAA,gBACZ3F,OAAA,CAAC5B,MAAM;UAACkJ,OAAO,EAAE9C,iBAAkB;UAAAmB,QAAA,EAAC;QAAM;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACnDnG,OAAA,CAAC5B,MAAM;UACLkJ,OAAO,EAAE3D,aAAc;UACvB4C,OAAO,EAAC,WAAW;UACnBuE,QAAQ,EACN,CAACjJ,QAAQ,IACR,CAACe,YAAY,IAAI,CAACjB,YAAa,IAC/BiB,YAAY,KAAK,CAACP,UAAU,CAACE,IAAI,IAAI,CAACF,UAAU,CAACG,eAAe,CAClE;UAAAmD,QAAA,EACF;QAED;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEhB,CAAC;AAAChG,EAAA,CAxiBID,SAAmB;AAAA6K,EAAA,GAAnB7K,SAAmB;AA0iBzB,eAAeA,SAAS;AAAC,IAAA6K,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}